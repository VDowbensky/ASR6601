/*
 * *******************************************************************************
 * * # License 
 * * Copyright 2022 Silicon Laboratories Inc. www.silabs.com 
 * *******************************************************************************
 * * 
 * * SPDX-License-Identifier: Zlib 
 * * 
 * * The licensor of this software is Silicon Laboratories Inc. 
 * * 
 * * This software is provided 'as-is', without any express or implied 
 * * warranty. In no event will the authors be held liable for any damages 
 * * arising from the use of this software. 
 * * 
 * * Permission is granted to anyone to use this software for any purpose, 
 * * including commercial applications, and to alter it and redistribute it 
 * * freely, subject to the following restrictions: 
 * * 
 * * 1. The origin of this software must not be misrepresented; you must not 
 * * claim that you wrote the original software. If you use this software 
 * * in a product, an acknowledgment in the product documentation would be 
 * * appreciated but is not required. 
 * * 2. Altered source versions must be plainly marked as such, and must not be 
 * * misrepresented as being the original software. 
 * * 3. This notice may not be removed or altered from any source distribution. 
 * * 
 * *******************************************************************************
 *
 * @file     TREMO.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.6.2
 * @date     Wed Jul 24 11:02:32 2024
 * @note     Generated by SVDConv V3.3.43
 *           from File 'D:/MCU/ASR6601/SVD/tremo.svd',
 *           last modified on Wed Jul 24 11:00:46 2024
 */



// -----------------------------  Register Item Address: RCC_CR0  ---------------------------------
// SVD Line: 56

unsigned int RCC_CR0 __AT (0x40000000);



// ------------------------------  Field Item: RCC_CR0_PCLK0_DIV  ---------------------------------
// SVD Line: 65

//  <item> SFDITEM_FIELD__RCC_CR0_PCLK0_DIV
//    <name> PCLK0_DIV </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40000000) PCLK0_DIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR0 >> 5) & 0x7), ((RCC_CR0 = (RCC_CR0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CR0_HCLK_DIV  ----------------------------------
// SVD Line: 72

//  <item> SFDITEM_FIELD__RCC_CR0_HCLK_DIV
//    <name> HCLK_DIV </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40000000) HCLK_DIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR0 >> 8) & 0xF), ((RCC_CR0 = (RCC_CR0 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CR0_SYSCLK_SEL  ---------------------------------
// SVD Line: 79

//  <item> SFDITEM_FIELD__RCC_CR0_SYSCLK_SEL
//    <name> SYSCLK_SEL </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40000000) SYSCLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR0 >> 12) & 0x7), ((RCC_CR0 = (RCC_CR0 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: RCC_CR0_PCLK1_DIV  ---------------------------------
// SVD Line: 86

//  <item> SFDITEM_FIELD__RCC_CR0_PCLK1_DIV
//    <name> PCLK1_DIV </name>
//    <rw> 
//    <i> [Bits 17..15] RW (@ 0x40000000) PCLK1_DIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR0 >> 15) & 0x7), ((RCC_CR0 = (RCC_CR0 & ~(0x7UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR0_MCO_CLK_OUT_EN  -------------------------------
// SVD Line: 93

//  <item> SFDITEM_FIELD__RCC_CR0_MCO_CLK_OUT_EN
//    <name> MCO_CLK_OUT_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40000000) MCO_CLK_OUT_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR0 ) </loc>
//      <o.18..18> MCO_CLK_OUT_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CR0_MCO_CLK_SEL  --------------------------------
// SVD Line: 100

//  <item> SFDITEM_FIELD__RCC_CR0_MCO_CLK_SEL
//    <name> MCO_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 21..19] RW (@ 0x40000000) MCO_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR0 >> 19) & 0x7), ((RCC_CR0 = (RCC_CR0 & ~(0x7UL << 19 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 19 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR0_MCO_CLK_DIV_NUM  ------------------------------
// SVD Line: 107

//  <item> SFDITEM_FIELD__RCC_CR0_MCO_CLK_DIV_NUM
//    <name> MCO_CLK_DIV_NUM </name>
//    <rw> 
//    <i> [Bits 24..22] RW (@ 0x40000000) MCO_CLK_DIV_NUM </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR0 >> 22) & 0x7), ((RCC_CR0 = (RCC_CR0 & ~(0x7UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CR0_STCLKEN_SEL  --------------------------------
// SVD Line: 114

//  <item> SFDITEM_FIELD__RCC_CR0_STCLKEN_SEL
//    <name> STCLKEN_SEL </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40000000) STCLKEN_SEL </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR0 ) </loc>
//      <o.25..25> STCLKEN_SEL
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_CR0  ------------------------------------
// SVD Line: 56

//  <rtree> SFDITEM_REG__RCC_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000000) Control register 0 </i>
//    <loc> ( (unsigned int)((RCC_CR0 >> 0) & 0xFFFFFFFF), ((RCC_CR0 = (RCC_CR0 & ~(0x3FFFFE0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFE0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CR0_PCLK0_DIV </item>
//    <item> SFDITEM_FIELD__RCC_CR0_HCLK_DIV </item>
//    <item> SFDITEM_FIELD__RCC_CR0_SYSCLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR0_PCLK1_DIV </item>
//    <item> SFDITEM_FIELD__RCC_CR0_MCO_CLK_OUT_EN </item>
//    <item> SFDITEM_FIELD__RCC_CR0_MCO_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR0_MCO_CLK_DIV_NUM </item>
//    <item> SFDITEM_FIELD__RCC_CR0_STCLKEN_SEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CR1  ---------------------------------
// SVD Line: 123

unsigned int RCC_CR1 __AT (0x40000004);



// ----------------------------  Field Item: RCC_CR1_IWDG_CLK_SEL  --------------------------------
// SVD Line: 132

//  <item> SFDITEM_FIELD__RCC_CR1_IWDG_CLK_SEL
//    <name> IWDG_CLK_SEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000004) IWDG_CLK_SEL </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR1 ) </loc>
//      <o.0..0> IWDG_CLK_SEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CR1_RTC_CLK_SEL  --------------------------------
// SVD Line: 139

//  <item> SFDITEM_FIELD__RCC_CR1_RTC_CLK_SEL
//    <name> RTC_CLK_SEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000004) RTC_CLK_SEL </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR1 ) </loc>
//      <o.1..1> RTC_CLK_SEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR1_LPUART_CLK_SEL  -------------------------------
// SVD Line: 146

//  <item> SFDITEM_FIELD__RCC_CR1_LPUART_CLK_SEL
//    <name> LPUART_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 3..2] RW (@ 0x40000004) LPUART_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR1 >> 2) & 0x3), ((RCC_CR1 = (RCC_CR1 & ~(0x3UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR1_LCDCTRL_CLK_SEL  ------------------------------
// SVD Line: 153

//  <item> SFDITEM_FIELD__RCC_CR1_LCDCTRL_CLK_SEL
//    <name> LCDCTRL_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40000004) LCDCTRL_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR1 >> 4) & 0x3), ((RCC_CR1 = (RCC_CR1 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR1_LPTIM0_CLK_SEL  -------------------------------
// SVD Line: 160

//  <item> SFDITEM_FIELD__RCC_CR1_LPTIM0_CLK_SEL
//    <name> LPTIM0_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40000004) LPTIM0_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR1 >> 6) & 0x3), ((RCC_CR1 = (RCC_CR1 & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR1_LPTIM1_CLK_SEL  -------------------------------
// SVD Line: 167

//  <item> SFDITEM_FIELD__RCC_CR1_LPTIM1_CLK_SEL
//    <name> LPTIM1_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40000004) LPTIM1_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR1 >> 8) & 0x3), ((RCC_CR1 = (RCC_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RCC_CR1_LPTIM0_EXT_CLK_SEL  -----------------------------
// SVD Line: 174

//  <item> SFDITEM_FIELD__RCC_CR1_LPTIM0_EXT_CLK_SEL
//    <name> LPTIM0_EXT_CLK_SEL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000004) LPTIM0_EXT_CLK_SEL </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR1 ) </loc>
//      <o.10..10> LPTIM0_EXT_CLK_SEL
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CR1_LPTIM1_EXT_CLK_SEL  -----------------------------
// SVD Line: 181

//  <item> SFDITEM_FIELD__RCC_CR1_LPTIM1_EXT_CLK_SEL
//    <name> LPTIM1_EXT_CLK_SEL </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000004) LPTIM1_EXT_CLK_SEL </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CR1 ) </loc>
//      <o.11..11> LPTIM1_EXT_CLK_SEL
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_CR1  ------------------------------------
// SVD Line: 123

//  <rtree> SFDITEM_REG__RCC_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000004) Control register 1 </i>
//    <loc> ( (unsigned int)((RCC_CR1 >> 0) & 0xFFFFFFFF), ((RCC_CR1 = (RCC_CR1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CR1_IWDG_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_RTC_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_LPUART_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_LCDCTRL_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_LPTIM0_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_LPTIM1_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_LPTIM0_EXT_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR1_LPTIM1_EXT_CLK_SEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CR2  ---------------------------------
// SVD Line: 190

unsigned int RCC_CR2 __AT (0x40000008);



// ----------------------------  Field Item: RCC_CR2_QSPI_CLK_SEL  --------------------------------
// SVD Line: 199

//  <item> SFDITEM_FIELD__RCC_CR2_QSPI_CLK_SEL
//    <name> QSPI_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40000008) QSPI_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 0) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CR2_I2S_CLK_SEL  --------------------------------
// SVD Line: 206

//  <item> SFDITEM_FIELD__RCC_CR2_I2S_CLK_SEL
//    <name> I2S_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 4..2] RW (@ 0x40000008) I2S_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 2) & 0x7), ((RCC_CR2 = (RCC_CR2 & ~(0x7UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RCC_CR2_ADCCTRL_CLK_SEL  ------------------------------
// SVD Line: 213

//  <item> SFDITEM_FIELD__RCC_CR2_ADCCTRL_CLK_SEL
//    <name> ADCCTRL_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40000008) ADCCTRL_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 5) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RCC_CR2_SCC_CLK_SEL  --------------------------------
// SVD Line: 220

//  <item> SFDITEM_FIELD__RCC_CR2_SCC_CLK_SEL
//    <name> SCC_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40000008) SCC_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 7) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_CR2_UART3_CLK_SEL  -------------------------------
// SVD Line: 227

//  <item> SFDITEM_FIELD__RCC_CR2_UART3_CLK_SEL
//    <name> UART3_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40000008) UART3_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 9) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_CR2_UART2_CLK_SEL  -------------------------------
// SVD Line: 234

//  <item> SFDITEM_FIELD__RCC_CR2_UART2_CLK_SEL
//    <name> UART2_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x40000008) UART2_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 11) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_CR2_UART1_CLK_SEL  -------------------------------
// SVD Line: 241

//  <item> SFDITEM_FIELD__RCC_CR2_UART1_CLK_SEL
//    <name> UART1_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 14..13] RW (@ 0x40000008) UART1_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 13) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_CR2_UART0_CLK_SEL  -------------------------------
// SVD Line: 248

//  <item> SFDITEM_FIELD__RCC_CR2_UART0_CLK_SEL
//    <name> UART0_CLK_SEL </name>
//    <rw> 
//    <i> [Bits 16..15] RW (@ 0x40000008) UART0_CLK_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR2 >> 15) & 0x3), ((RCC_CR2 = (RCC_CR2 & ~(0x3UL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_CR2  ------------------------------------
// SVD Line: 190

//  <rtree> SFDITEM_REG__RCC_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000008) Control register 2 </i>
//    <loc> ( (unsigned int)((RCC_CR2 >> 0) & 0xFFFFFFFF), ((RCC_CR2 = (RCC_CR2 & ~(0x1FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CR2_QSPI_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_I2S_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_ADCCTRL_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_SCC_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_UART3_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_UART2_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_UART1_CLK_SEL </item>
//    <item> SFDITEM_FIELD__RCC_CR2_UART0_CLK_SEL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CGR0  --------------------------------
// SVD Line: 257

unsigned int RCC_CGR0 __AT (0x4000000C);



// ---------------------------  Field Item: RCC_CGR0_GPTIM3_CLK_EN  -------------------------------
// SVD Line: 266

//  <item> SFDITEM_FIELD__RCC_CGR0_GPTIM3_CLK_EN
//    <name> GPTIM3_CLK_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000000C) GPTIM3_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.0..0> GPTIM3_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_GPTIM2_CLK_EN  -------------------------------
// SVD Line: 273

//  <item> SFDITEM_FIELD__RCC_CGR0_GPTIM2_CLK_EN
//    <name> GPTIM2_CLK_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000000C) GPTIM2_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.1..1> GPTIM2_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_GPTIM1_CLK_EN  -------------------------------
// SVD Line: 280

//  <item> SFDITEM_FIELD__RCC_CGR0_GPTIM1_CLK_EN
//    <name> GPTIM1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000000C) GPTIM1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.2..2> GPTIM1_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_GPTIM0_CLK_EN  -------------------------------
// SVD Line: 287

//  <item> SFDITEM_FIELD__RCC_CGR0_GPTIM0_CLK_EN
//    <name> GPTIM0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000000C) GPTIM0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.3..3> GPTIM0_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_LORAC_CLK_EN  -------------------------------
// SVD Line: 294

//  <item> SFDITEM_FIELD__RCC_CGR0_LORAC_CLK_EN
//    <name> LORAC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000000C) LORAC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.4..4> LORAC_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_DACCTRL_CLK_EN  ------------------------------
// SVD Line: 301

//  <item> SFDITEM_FIELD__RCC_CGR0_DACCTRL_CLK_EN
//    <name> DACCTRL_CLK_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000000C) DACCTRL_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.5..5> DACCTRL_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_LCDCTRL_CLK_EN  ------------------------------
// SVD Line: 308

//  <item> SFDITEM_FIELD__RCC_CGR0_LCDCTRL_CLK_EN
//    <name> LCDCTRL_CLK_EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000000C) LCDCTRL_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.6..6> LCDCTRL_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_AFEC_CLK_EN  --------------------------------
// SVD Line: 315

//  <item> SFDITEM_FIELD__RCC_CGR0_AFEC_CLK_EN
//    <name> AFEC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000000C) AFEC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.7..7> AFEC_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_ADCCTRL_CLK_EN  ------------------------------
// SVD Line: 322

//  <item> SFDITEM_FIELD__RCC_CGR0_ADCCTRL_CLK_EN
//    <name> ADCCTRL_CLK_EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000000C) ADCCTRL_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.8..8> ADCCTRL_CLK_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CGR0_SCC_CLK_EN  --------------------------------
// SVD Line: 329

//  <item> SFDITEM_FIELD__RCC_CGR0_SCC_CLK_EN
//    <name> SCC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000000C) SCC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.9..9> SCC_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_I2C2_CLK_EN  --------------------------------
// SVD Line: 336

//  <item> SFDITEM_FIELD__RCC_CGR0_I2C2_CLK_EN
//    <name> I2C2_CLK_EN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000000C) I2C2_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.10..10> I2C2_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_I2C1_CLK_EN  --------------------------------
// SVD Line: 343

//  <item> SFDITEM_FIELD__RCC_CGR0_I2C1_CLK_EN
//    <name> I2C1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000000C) I2C1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.11..11> I2C1_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_I2C0_CLK_EN  --------------------------------
// SVD Line: 350

//  <item> SFDITEM_FIELD__RCC_CGR0_I2C0_CLK_EN
//    <name> I2C0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000000C) I2C0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.12..12> I2C0_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_SSP2_CLK_EN  --------------------------------
// SVD Line: 357

//  <item> SFDITEM_FIELD__RCC_CGR0_SSP2_CLK_EN
//    <name> SSP2_CLK_EN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000000C) SSP2_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.13..13> SSP2_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_SSP1_CLK_EN  --------------------------------
// SVD Line: 364

//  <item> SFDITEM_FIELD__RCC_CGR0_SSP1_CLK_EN
//    <name> SSP1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000000C) SSP1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.14..14> SSP1_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_SSP0_CLK_EN  --------------------------------
// SVD Line: 371

//  <item> SFDITEM_FIELD__RCC_CGR0_SSP0_CLK_EN
//    <name> SSP0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000000C) SSP0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.15..15> SSP0_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_LPUART_CLK_EN  -------------------------------
// SVD Line: 378

//  <item> SFDITEM_FIELD__RCC_CGR0_LPUART_CLK_EN
//    <name> LPUART_CLK_EN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000000C) LPUART_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.16..16> LPUART_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_UART3_CLK_EN  -------------------------------
// SVD Line: 385

//  <item> SFDITEM_FIELD__RCC_CGR0_UART3_CLK_EN
//    <name> UART3_CLK_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000000C) UART3_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.17..17> UART3_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_UART2_CLK_EN  -------------------------------
// SVD Line: 392

//  <item> SFDITEM_FIELD__RCC_CGR0_UART2_CLK_EN
//    <name> UART2_CLK_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000000C) UART2_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.18..18> UART2_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_UART1_CLK_EN  -------------------------------
// SVD Line: 399

//  <item> SFDITEM_FIELD__RCC_CGR0_UART1_CLK_EN
//    <name> UART1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4000000C) UART1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.19..19> UART1_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_UART0_CLK_EN  -------------------------------
// SVD Line: 406

//  <item> SFDITEM_FIELD__RCC_CGR0_UART0_CLK_EN
//    <name> UART0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000000C) UART0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.20..20> UART0_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR0_SYSCFG_CLK_EN  -------------------------------
// SVD Line: 413

//  <item> SFDITEM_FIELD__RCC_CGR0_SYSCFG_CLK_EN
//    <name> SYSCFG_CLK_EN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000000C) SYSCFG_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.21..21> SYSCFG_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_IOM3_CLK_EN  --------------------------------
// SVD Line: 420

//  <item> SFDITEM_FIELD__RCC_CGR0_IOM3_CLK_EN
//    <name> IOM3_CLK_EN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4000000C) IOM3_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.22..22> IOM3_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_IOM2_CLK_EN  --------------------------------
// SVD Line: 427

//  <item> SFDITEM_FIELD__RCC_CGR0_IOM2_CLK_EN
//    <name> IOM2_CLK_EN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x4000000C) IOM2_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.23..23> IOM2_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_IOM1_CLK_EN  --------------------------------
// SVD Line: 434

//  <item> SFDITEM_FIELD__RCC_CGR0_IOM1_CLK_EN
//    <name> IOM1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000000C) IOM1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.24..24> IOM1_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_IOM0_CLK_EN  --------------------------------
// SVD Line: 441

//  <item> SFDITEM_FIELD__RCC_CGR0_IOM0_CLK_EN
//    <name> IOM0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4000000C) IOM0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.25..25> IOM0_CLK_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_CGR0_BASICTIM1_CLK_EN  -----------------------------
// SVD Line: 448

//  <item> SFDITEM_FIELD__RCC_CGR0_BASICTIM1_CLK_EN
//    <name> BASICTIM1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4000000C) BASICTIM1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.26..26> BASICTIM1_CLK_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_CGR0_BASICTIM0_CLK_EN  -----------------------------
// SVD Line: 455

//  <item> SFDITEM_FIELD__RCC_CGR0_BASICTIM0_CLK_EN
//    <name> BASICTIM0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4000000C) BASICTIM0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.27..27> BASICTIM0_CLK_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CGR0_CRC_CLK_EN  --------------------------------
// SVD Line: 462

//  <item> SFDITEM_FIELD__RCC_CGR0_CRC_CLK_EN
//    <name> CRC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000000C) CRC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.28..28> CRC_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_DMAC1_CLK_EN  -------------------------------
// SVD Line: 469

//  <item> SFDITEM_FIELD__RCC_CGR0_DMAC1_CLK_EN
//    <name> DMAC1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x4000000C) DMAC1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.29..29> DMAC1_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR0_DMAC0_CLK_EN  -------------------------------
// SVD Line: 476

//  <item> SFDITEM_FIELD__RCC_CGR0_DMAC0_CLK_EN
//    <name> DMAC0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000000C) DMAC0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.30..30> DMAC0_CLK_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CGR0_PWR_CLK_EN  --------------------------------
// SVD Line: 483

//  <item> SFDITEM_FIELD__RCC_CGR0_PWR_CLK_EN
//    <name> PWR_CLK_EN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4000000C) PWR_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR0 ) </loc>
//      <o.31..31> PWR_CLK_EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CGR0  ------------------------------------
// SVD Line: 257

//  <rtree> SFDITEM_REG__RCC_CGR0
//    <name> CGR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000000C) clock generation register 0 </i>
//    <loc> ( (unsigned int)((RCC_CGR0 >> 0) & 0xFFFFFFFF), ((RCC_CGR0 = (RCC_CGR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CGR0_GPTIM3_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_GPTIM2_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_GPTIM1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_GPTIM0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_LORAC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_DACCTRL_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_LCDCTRL_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_AFEC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_ADCCTRL_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_SCC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_I2C2_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_I2C1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_I2C0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_SSP2_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_SSP1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_SSP0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_LPUART_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_UART3_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_UART2_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_UART1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_UART0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_SYSCFG_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_IOM3_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_IOM2_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_IOM1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_IOM0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_BASICTIM1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_BASICTIM0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_CRC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_DMAC1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_DMAC0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR0_PWR_CLK_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CGR1  --------------------------------
// SVD Line: 492

unsigned int RCC_CGR1 __AT (0x40000010);



// -----------------------------  Field Item: RCC_CGR1_SEC_CLK_EN  --------------------------------
// SVD Line: 501

//  <item> SFDITEM_FIELD__RCC_CGR1_SEC_CLK_EN
//    <name> SEC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000010) SEC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.0..0> SEC_CLK_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CGR1_RTC_CLK_EN  --------------------------------
// SVD Line: 508

//  <item> SFDITEM_FIELD__RCC_CGR1_RTC_CLK_EN
//    <name> RTC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000010) RTC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.1..1> RTC_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR1_WWDG_CLK_EN  --------------------------------
// SVD Line: 515

//  <item> SFDITEM_FIELD__RCC_CGR1_WWDG_CLK_EN
//    <name> WWDG_CLK_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000010) WWDG_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.2..2> WWDG_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR1_IWDG_CLK_EN  --------------------------------
// SVD Line: 522

//  <item> SFDITEM_FIELD__RCC_CGR1_IWDG_CLK_EN
//    <name> IWDG_CLK_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000010) IWDG_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.3..3> IWDG_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR1_LPTIM0_CLK_EN  -------------------------------
// SVD Line: 529

//  <item> SFDITEM_FIELD__RCC_CGR1_LPTIM0_CLK_EN
//    <name> LPTIM0_CLK_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000010) LPTIM0_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.4..4> LPTIM0_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR1_QSPI_CLK_EN  --------------------------------
// SVD Line: 536

//  <item> SFDITEM_FIELD__RCC_CGR1_QSPI_CLK_EN
//    <name> QSPI_CLK_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000010) QSPI_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.5..5> QSPI_CLK_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_CGR1_WWDG_CNT_CLK_EN  ------------------------------
// SVD Line: 543

//  <item> SFDITEM_FIELD__RCC_CGR1_WWDG_CNT_CLK_EN
//    <name> WWDG_CNT_CLK_EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40000010) WWDG_CNT_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.6..6> WWDG_CNT_CLK_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CGR1_SAC_CLK_EN  --------------------------------
// SVD Line: 550

//  <item> SFDITEM_FIELD__RCC_CGR1_SAC_CLK_EN
//    <name> SAC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000010) SAC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.7..7> SAC_CLK_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_CGR1_I2S_CLK_EN  --------------------------------
// SVD Line: 557

//  <item> SFDITEM_FIELD__RCC_CGR1_I2S_CLK_EN
//    <name> I2S_CLK_EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40000010) I2S_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.8..8> I2S_CLK_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CGR1_LPTIM0_INF_CLK_EN  -----------------------------
// SVD Line: 564

//  <item> SFDITEM_FIELD__RCC_CGR1_LPTIM0_INF_CLK_EN
//    <name> LPTIM0_INF_CLK_EN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000010) LPTIM0_INF_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.9..9> LPTIM0_INF_CLK_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_CGR1_RNGC_CLK_EN  --------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__RCC_CGR1_RNGC_CLK_EN
//    <name> RNGC_CLK_EN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000010) RNGC_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.10..10> RNGC_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR1_LPTIM1_CLK_EN  -------------------------------
// SVD Line: 578

//  <item> SFDITEM_FIELD__RCC_CGR1_LPTIM1_CLK_EN
//    <name> LPTIM1_CLK_EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000010) LPTIM1_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.11..11> LPTIM1_CLK_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CGR1_LPTIM1_INF_CLK_EN  -----------------------------
// SVD Line: 585

//  <item> SFDITEM_FIELD__RCC_CGR1_LPTIM1_INF_CLK_EN
//    <name> LPTIM1_INF_CLK_EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40000010) LPTIM1_INF_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR1 ) </loc>
//      <o.12..12> LPTIM1_INF_CLK_EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CGR1  ------------------------------------
// SVD Line: 492

//  <rtree> SFDITEM_REG__RCC_CGR1
//    <name> CGR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000010) clock generation register 1 </i>
//    <loc> ( (unsigned int)((RCC_CGR1 >> 0) & 0xFFFFFFFF), ((RCC_CGR1 = (RCC_CGR1 & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CGR1_SEC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_RTC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_WWDG_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_IWDG_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_LPTIM0_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_QSPI_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_WWDG_CNT_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_SAC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_I2S_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_LPTIM0_INF_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_RNGC_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_LPTIM1_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR1_LPTIM1_INF_CLK_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CGR2  --------------------------------
// SVD Line: 594

unsigned int RCC_CGR2 __AT (0x40000014);



// --------------------------  Field Item: RCC_CGR2_IWDG_AON_CLK_EN  ------------------------------
// SVD Line: 603

//  <item> SFDITEM_FIELD__RCC_CGR2_IWDG_AON_CLK_EN
//    <name> IWDG_AON_CLK_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000014) IWDG_AON_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR2 ) </loc>
//      <o.0..0> IWDG_AON_CLK_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_CGR2_RTC_AON_CLK_EN  ------------------------------
// SVD Line: 610

//  <item> SFDITEM_FIELD__RCC_CGR2_RTC_AON_CLK_EN
//    <name> RTC_AON_CLK_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000014) RTC_AON_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR2 ) </loc>
//      <o.1..1> RTC_AON_CLK_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CGR2_LPUART_AON_CLK_EN  -----------------------------
// SVD Line: 617

//  <item> SFDITEM_FIELD__RCC_CGR2_LPUART_AON_CLK_EN
//    <name> LPUART_AON_CLK_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000014) LPUART_AON_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR2 ) </loc>
//      <o.2..2> LPUART_AON_CLK_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CGR2_LCDCTRL_AON_CLK_EN  ----------------------------
// SVD Line: 624

//  <item> SFDITEM_FIELD__RCC_CGR2_LCDCTRL_AON_CLK_EN
//    <name> LCDCTRL_AON_CLK_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000014) LCDCTRL_AON_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR2 ) </loc>
//      <o.3..3> LCDCTRL_AON_CLK_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CGR2_LPTIM0_AON_CLK_EN  -----------------------------
// SVD Line: 631

//  <item> SFDITEM_FIELD__RCC_CGR2_LPTIM0_AON_CLK_EN
//    <name> LPTIM0_AON_CLK_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000014) LPTIM0_AON_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR2 ) </loc>
//      <o.4..4> LPTIM0_AON_CLK_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_CGR2_LPTIM1_AON_CLK_EN  -----------------------------
// SVD Line: 638

//  <item> SFDITEM_FIELD__RCC_CGR2_LPTIM1_AON_CLK_EN
//    <name> LPTIM1_AON_CLK_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000014) LPTIM1_AON_CLK_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_CGR2 ) </loc>
//      <o.5..5> LPTIM1_AON_CLK_EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_CGR2  ------------------------------------
// SVD Line: 594

//  <rtree> SFDITEM_REG__RCC_CGR2
//    <name> CGR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000014) clock generation register 2 </i>
//    <loc> ( (unsigned int)((RCC_CGR2 >> 0) & 0xFFFFFFFF), ((RCC_CGR2 = (RCC_CGR2 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CGR2_IWDG_AON_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR2_RTC_AON_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR2_LPUART_AON_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR2_LCDCTRL_AON_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR2_LPTIM0_AON_CLK_EN </item>
//    <item> SFDITEM_FIELD__RCC_CGR2_LPTIM1_AON_CLK_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_RST0  --------------------------------
// SVD Line: 647

unsigned int RCC_RST0 __AT (0x40000018);



// -----------------------------  Field Item: RCC_RST0_SAC_RST_N  ---------------------------------
// SVD Line: 656

//  <item> SFDITEM_FIELD__RCC_RST0_SAC_RST_N
//    <name> SAC_RST_N </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000018) SAC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.0..0> SAC_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_SEC_RST_N  ---------------------------------
// SVD Line: 663

//  <item> SFDITEM_FIELD__RCC_RST0_SEC_RST_N
//    <name> SEC_RST_N </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000018) SEC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.1..1> SEC_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_CRC_RST_N  ---------------------------------
// SVD Line: 670

//  <item> SFDITEM_FIELD__RCC_RST0_CRC_RST_N
//    <name> CRC_RST_N </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000018) CRC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.2..2> CRC_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_RTC_RST_N  ---------------------------------
// SVD Line: 677

//  <item> SFDITEM_FIELD__RCC_RST0_RTC_RST_N
//    <name> RTC_RST_N </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000018) RTC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.3..3> RTC_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_WWDG_RST_N  --------------------------------
// SVD Line: 684

//  <item> SFDITEM_FIELD__RCC_RST0_WWDG_RST_N
//    <name> WWDG_RST_N </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000018) WWDG_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.4..4> WWDG_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_IWDG_RST_N  --------------------------------
// SVD Line: 691

//  <item> SFDITEM_FIELD__RCC_RST0_IWDG_RST_N
//    <name> IWDG_RST_N </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000018) IWDG_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.5..5> IWDG_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_LPTIM0_RST_N  -------------------------------
// SVD Line: 698

//  <item> SFDITEM_FIELD__RCC_RST0_LPTIM0_RST_N
//    <name> LPTIM0_RST_N </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40000018) LPTIM0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.6..6> LPTIM0_RST_N
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_RST0_BASICTIM1_RST_N  ------------------------------
// SVD Line: 705

//  <item> SFDITEM_FIELD__RCC_RST0_BASICTIM1_RST_N
//    <name> BASICTIM1_RST_N </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40000018) BASICTIM1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.7..7> BASICTIM1_RST_N
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_RST0_BASICTIM0_RST_N  ------------------------------
// SVD Line: 712

//  <item> SFDITEM_FIELD__RCC_RST0_BASICTIM0_RST_N
//    <name> BASICTIM0_RST_N </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40000018) BASICTIM0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.8..8> BASICTIM0_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_GPTIM3_RST_N  -------------------------------
// SVD Line: 719

//  <item> SFDITEM_FIELD__RCC_RST0_GPTIM3_RST_N
//    <name> GPTIM3_RST_N </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40000018) GPTIM3_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.9..9> GPTIM3_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_GPTIM2_RST_N  -------------------------------
// SVD Line: 726

//  <item> SFDITEM_FIELD__RCC_RST0_GPTIM2_RST_N
//    <name> GPTIM2_RST_N </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40000018) GPTIM2_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.10..10> GPTIM2_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_GPTIM1_RST_N  -------------------------------
// SVD Line: 733

//  <item> SFDITEM_FIELD__RCC_RST0_GPTIM1_RST_N
//    <name> GPTIM1_RST_N </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40000018) GPTIM1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.11..11> GPTIM1_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_GPTIM0_RST_N  -------------------------------
// SVD Line: 740

//  <item> SFDITEM_FIELD__RCC_RST0_GPTIM0_RST_N
//    <name> GPTIM0_RST_N </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40000018) GPTIM0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.12..12> GPTIM0_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_IOM_RST_N  ---------------------------------
// SVD Line: 747

//  <item> SFDITEM_FIELD__RCC_RST0_IOM_RST_N
//    <name> IOM_RST_N </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40000018) IOM_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.13..13> IOM_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_LORAC_RST_N  --------------------------------
// SVD Line: 754

//  <item> SFDITEM_FIELD__RCC_RST0_LORAC_RST_N
//    <name> LORAC_RST_N </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40000018) LORAC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.14..14> LORAC_RST_N
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST0_DACCTRL_RST_N  -------------------------------
// SVD Line: 761

//  <item> SFDITEM_FIELD__RCC_RST0_DACCTRL_RST_N
//    <name> DACCTRL_RST_N </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40000018) DACCTRL_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.15..15> DACCTRL_RST_N
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST0_LCDCTRL_RST_N  -------------------------------
// SVD Line: 768

//  <item> SFDITEM_FIELD__RCC_RST0_LCDCTRL_RST_N
//    <name> LCDCTRL_RST_N </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40000018) LCDCTRL_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.16..16> LCDCTRL_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_AFEC_RST_N  --------------------------------
// SVD Line: 775

//  <item> SFDITEM_FIELD__RCC_RST0_AFEC_RST_N
//    <name> AFEC_RST_N </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40000018) AFEC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.17..17> AFEC_RST_N
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST0_ADCCTRL_RST_N  -------------------------------
// SVD Line: 782

//  <item> SFDITEM_FIELD__RCC_RST0_ADCCTRL_RST_N
//    <name> ADCCTRL_RST_N </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40000018) ADCCTRL_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.18..18> ADCCTRL_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_SCC_RST_N  ---------------------------------
// SVD Line: 789

//  <item> SFDITEM_FIELD__RCC_RST0_SCC_RST_N
//    <name> SCC_RST_N </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40000018) SCC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.19..19> SCC_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_I2C2_RST_N  --------------------------------
// SVD Line: 796

//  <item> SFDITEM_FIELD__RCC_RST0_I2C2_RST_N
//    <name> I2C2_RST_N </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40000018) I2C2_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.20..20> I2C2_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_I2C1_RST_N  --------------------------------
// SVD Line: 803

//  <item> SFDITEM_FIELD__RCC_RST0_I2C1_RST_N
//    <name> I2C1_RST_N </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40000018) I2C1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.21..21> I2C1_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_I2C0_RST_N  --------------------------------
// SVD Line: 810

//  <item> SFDITEM_FIELD__RCC_RST0_I2C0_RST_N
//    <name> I2C0_RST_N </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40000018) I2C0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.22..22> I2C0_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_QSPI_RST_N  --------------------------------
// SVD Line: 817

//  <item> SFDITEM_FIELD__RCC_RST0_QSPI_RST_N
//    <name> QSPI_RST_N </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40000018) QSPI_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.23..23> QSPI_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_SSP2_RST_N  --------------------------------
// SVD Line: 824

//  <item> SFDITEM_FIELD__RCC_RST0_SSP2_RST_N
//    <name> SSP2_RST_N </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40000018) SSP2_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.24..24> SSP2_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_SSP1_RST_N  --------------------------------
// SVD Line: 831

//  <item> SFDITEM_FIELD__RCC_RST0_SSP1_RST_N
//    <name> SSP1_RST_N </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40000018) SSP1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.25..25> SSP1_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST0_SSP0_RST_N  --------------------------------
// SVD Line: 838

//  <item> SFDITEM_FIELD__RCC_RST0_SSP0_RST_N
//    <name> SSP0_RST_N </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40000018) SSP0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.26..26> SSP0_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_LPUART_RST_N  -------------------------------
// SVD Line: 845

//  <item> SFDITEM_FIELD__RCC_RST0_LPUART_RST_N
//    <name> LPUART_RST_N </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40000018) LPUART_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.27..27> LPUART_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_UART3_RST_N  --------------------------------
// SVD Line: 852

//  <item> SFDITEM_FIELD__RCC_RST0_UART3_RST_N
//    <name> UART3_RST_N </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40000018) UART3_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.28..28> UART3_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_UART2_RST_N  --------------------------------
// SVD Line: 859

//  <item> SFDITEM_FIELD__RCC_RST0_UART2_RST_N
//    <name> UART2_RST_N </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40000018) UART2_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.29..29> UART2_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_UART1_RST_N  --------------------------------
// SVD Line: 866

//  <item> SFDITEM_FIELD__RCC_RST0_UART1_RST_N
//    <name> UART1_RST_N </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40000018) UART1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.30..30> UART1_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST0_UART0_RST_N  --------------------------------
// SVD Line: 873

//  <item> SFDITEM_FIELD__RCC_RST0_UART0_RST_N
//    <name> UART0_RST_N </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40000018) UART0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST0 ) </loc>
//      <o.31..31> UART0_RST_N
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_RST0  ------------------------------------
// SVD Line: 647

//  <rtree> SFDITEM_REG__RCC_RST0
//    <name> RST0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000018) Control register 0 </i>
//    <loc> ( (unsigned int)((RCC_RST0 >> 0) & 0xFFFFFFFF), ((RCC_RST0 = (RCC_RST0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_RST0_SAC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_SEC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_CRC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_RTC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_WWDG_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_IWDG_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_LPTIM0_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_BASICTIM1_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_BASICTIM0_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_GPTIM3_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_GPTIM2_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_GPTIM1_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_GPTIM0_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_IOM_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_LORAC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_DACCTRL_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_LCDCTRL_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_AFEC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_ADCCTRL_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_SCC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_I2C2_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_I2C1_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_I2C0_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_QSPI_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_SSP2_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_SSP1_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_SSP0_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_LPUART_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_UART3_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_UART2_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_UART1_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST0_UART0_RST_N </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_RST1  --------------------------------
// SVD Line: 882

unsigned int RCC_RST1 __AT (0x4000001C);



// ----------------------------  Field Item: RCC_RST1_DMAC1_RST_N  --------------------------------
// SVD Line: 891

//  <item> SFDITEM_FIELD__RCC_RST1_DMAC1_RST_N
//    <name> DMAC1_RST_N </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000001C) DMAC1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST1 ) </loc>
//      <o.0..0> DMAC1_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST1_DMAC0_RST_N  --------------------------------
// SVD Line: 898

//  <item> SFDITEM_FIELD__RCC_RST1_DMAC0_RST_N
//    <name> DMAC0_RST_N </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000001C) DMAC0_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST1 ) </loc>
//      <o.1..1> DMAC0_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST1_I2S_RST_N  ---------------------------------
// SVD Line: 905

//  <item> SFDITEM_FIELD__RCC_RST1_I2S_RST_N
//    <name> I2S_RST_N </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000001C) I2S_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST1 ) </loc>
//      <o.2..2> I2S_RST_N
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RCC_RST1_RNGC_RST_N  --------------------------------
// SVD Line: 912

//  <item> SFDITEM_FIELD__RCC_RST1_RNGC_RST_N
//    <name> RNGC_RST_N </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000001C) RNGC_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST1 ) </loc>
//      <o.3..3> RNGC_RST_N
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RCC_RST1_LPTIM1_RST_N  -------------------------------
// SVD Line: 919

//  <item> SFDITEM_FIELD__RCC_RST1_LPTIM1_RST_N
//    <name> LPTIM1_RST_N </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000001C) LPTIM1_RST_N </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST1 ) </loc>
//      <o.4..4> LPTIM1_RST_N
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RCC_RST1  ------------------------------------
// SVD Line: 882

//  <rtree> SFDITEM_REG__RCC_RST1
//    <name> RST1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000001C) Control register 0 </i>
//    <loc> ( (unsigned int)((RCC_RST1 >> 0) & 0xFFFFFFFF), ((RCC_RST1 = (RCC_RST1 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_RST1_DMAC1_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST1_DMAC0_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST1_I2S_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST1_RNGC_RST_N </item>
//    <item> SFDITEM_FIELD__RCC_RST1_LPTIM1_RST_N </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RCC_RST_SR  -------------------------------
// SVD Line: 928

unsigned int RCC_RST_SR __AT (0x40000020);



// -------------------------  Field Item: RCC_RST_SR_STANDBY_RESET_SR  ----------------------------
// SVD Line: 937

//  <item> SFDITEM_FIELD__RCC_RST_SR_STANDBY_RESET_SR
//    <name> STANDBY_RESET_SR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40000020) STANDBY_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.0..0> STANDBY_RESET_SR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST_SR_SEC_RESET_SR  ------------------------------
// SVD Line: 944

//  <item> SFDITEM_FIELD__RCC_RST_SR_SEC_RESET_SR
//    <name> SEC_RESET_SR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000020) SEC_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.1..1> SEC_RESET_SR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST_SR_CPU_RESET_SR  ------------------------------
// SVD Line: 951

//  <item> SFDITEM_FIELD__RCC_RST_SR_CPU_RESET_SR
//    <name> CPU_RESET_SR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000020) CPU_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.2..2> CPU_RESET_SR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST_SR_EFC_RESET_SR  ------------------------------
// SVD Line: 958

//  <item> SFDITEM_FIELD__RCC_RST_SR_EFC_RESET_SR
//    <name> EFC_RESET_SR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000020) EFC_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.3..3> EFC_RESET_SR
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_RST_SR_WWDG_RESET_SR  ------------------------------
// SVD Line: 965

//  <item> SFDITEM_FIELD__RCC_RST_SR_WWDG_RESET_SR
//    <name> WWDG_RESET_SR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000020) WWDG_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.4..4> WWDG_RESET_SR
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_RST_SR_IWDG_RESET_SR  ------------------------------
// SVD Line: 972

//  <item> SFDITEM_FIELD__RCC_RST_SR_IWDG_RESET_SR
//    <name> IWDG_RESET_SR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000020) IWDG_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.5..5> IWDG_RESET_SR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_RST_SR_BOR_RESET_SR  ------------------------------
// SVD Line: 979

//  <item> SFDITEM_FIELD__RCC_RST_SR_BOR_RESET_SR
//    <name> BOR_RESET_SR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40000020) BOR_RESET_SR </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_SR ) </loc>
//      <o.6..6> BOR_RESET_SR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_RST_SR  -----------------------------------
// SVD Line: 928

//  <rtree> SFDITEM_REG__RCC_RST_SR
//    <name> RST_SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000020) Reset status register </i>
//    <loc> ( (unsigned int)((RCC_RST_SR >> 0) & 0xFFFFFFFF), ((RCC_RST_SR = (RCC_RST_SR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_RST_SR_STANDBY_RESET_SR </item>
//    <item> SFDITEM_FIELD__RCC_RST_SR_SEC_RESET_SR </item>
//    <item> SFDITEM_FIELD__RCC_RST_SR_CPU_RESET_SR </item>
//    <item> SFDITEM_FIELD__RCC_RST_SR_EFC_RESET_SR </item>
//    <item> SFDITEM_FIELD__RCC_RST_SR_WWDG_RESET_SR </item>
//    <item> SFDITEM_FIELD__RCC_RST_SR_IWDG_RESET_SR </item>
//    <item> SFDITEM_FIELD__RCC_RST_SR_BOR_RESET_SR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RCC_RST_CR  -------------------------------
// SVD Line: 988

unsigned int RCC_RST_CR __AT (0x40000024);



// -------------------------  Field Item: RCC_RST_CR_SEC_RESET_REQ_EN  ----------------------------
// SVD Line: 997

//  <item> SFDITEM_FIELD__RCC_RST_CR_SEC_RESET_REQ_EN
//    <name> SEC_RESET_REQ_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40000024) SEC_RESET_REQ_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_CR ) </loc>
//      <o.1..1> SEC_RESET_REQ_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_RST_CR_CPU_RESET_REQ_EN  ----------------------------
// SVD Line: 1004

//  <item> SFDITEM_FIELD__RCC_RST_CR_CPU_RESET_REQ_EN
//    <name> CPU_RESET_REQ_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40000024) CPU_RESET_REQ_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_CR ) </loc>
//      <o.2..2> CPU_RESET_REQ_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_RST_CR_EFC_RESET_REQ_EN  ----------------------------
// SVD Line: 1011

//  <item> SFDITEM_FIELD__RCC_RST_CR_EFC_RESET_REQ_EN
//    <name> EFC_RESET_REQ_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40000024) EFC_RESET_REQ_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_CR ) </loc>
//      <o.3..3> EFC_RESET_REQ_EN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RCC_RST_CR_WWDG_RESET_REQ_EN  ----------------------------
// SVD Line: 1018

//  <item> SFDITEM_FIELD__RCC_RST_CR_WWDG_RESET_REQ_EN
//    <name> WWDG_RESET_REQ_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40000024) WWDG_RESET_REQ_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_CR ) </loc>
//      <o.4..4> WWDG_RESET_REQ_EN
//    </check>
//  </item>
//  


// ------------------------  Field Item: RCC_RST_CR_IWDG_RESET_REQ_EN  ----------------------------
// SVD Line: 1025

//  <item> SFDITEM_FIELD__RCC_RST_CR_IWDG_RESET_REQ_EN
//    <name> IWDG_RESET_REQ_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40000024) IWDG_RESET_REQ_EN </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_RST_CR ) </loc>
//      <o.5..5> IWDG_RESET_REQ_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RCC_RST_CR  -----------------------------------
// SVD Line: 988

//  <rtree> SFDITEM_REG__RCC_RST_CR
//    <name> RST_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000024) Reset control register </i>
//    <loc> ( (unsigned int)((RCC_RST_CR >> 0) & 0xFFFFFFFF), ((RCC_RST_CR = (RCC_RST_CR & ~(0x3EUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3E) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_RST_CR_SEC_RESET_REQ_EN </item>
//    <item> SFDITEM_FIELD__RCC_RST_CR_CPU_RESET_REQ_EN </item>
//    <item> SFDITEM_FIELD__RCC_RST_CR_EFC_RESET_REQ_EN </item>
//    <item> SFDITEM_FIELD__RCC_RST_CR_WWDG_RESET_REQ_EN </item>
//    <item> SFDITEM_FIELD__RCC_RST_CR_IWDG_RESET_REQ_EN </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RCC_SR  ---------------------------------
// SVD Line: 1034

unsigned int RCC_SR __AT (0x40000028);



// -----------------------  Field Item: RCC_SR_SET_IWDG_AON_CLK_EN_DONE  --------------------------
// SVD Line: 1043

//  <item> SFDITEM_FIELD__RCC_SR_SET_IWDG_AON_CLK_EN_DONE
//    <name> SET_IWDG_AON_CLK_EN_DONE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40000028) SET_IWDG_AON_CLK_EN_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR ) </loc>
//      <o.0..0> SET_IWDG_AON_CLK_EN_DONE
//    </check>
//  </item>
//  


// -----------------------  Field Item: RCC_SR_SET_RTC_AON_CLK_EN_DONE  ---------------------------
// SVD Line: 1050

//  <item> SFDITEM_FIELD__RCC_SR_SET_RTC_AON_CLK_EN_DONE
//    <name> SET_RTC_AON_CLK_EN_DONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40000028) SET_RTC_AON_CLK_EN_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR ) </loc>
//      <o.1..1> SET_RTC_AON_CLK_EN_DONE
//    </check>
//  </item>
//  


// ----------------------  Field Item: RCC_SR_SET_LPUART_AON_CLK_EN_DONE  -------------------------
// SVD Line: 1057

//  <item> SFDITEM_FIELD__RCC_SR_SET_LPUART_AON_CLK_EN_DONE
//    <name> SET_LPUART_AON_CLK_EN_DONE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40000028) SET_LPUART_AON_CLK_EN_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR ) </loc>
//      <o.2..2> SET_LPUART_AON_CLK_EN_DONE
//    </check>
//  </item>
//  


// ---------------------  Field Item: RCC_SR_SET_LCDCTRL_AON_CLK_EN_DONE  -------------------------
// SVD Line: 1064

//  <item> SFDITEM_FIELD__RCC_SR_SET_LCDCTRL_AON_CLK_EN_DONE
//    <name> SET_LCDCTRL_AON_CLK_EN_DONE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40000028) SET_LCDCTRL_AON_CLK_EN_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR ) </loc>
//      <o.3..3> SET_LCDCTRL_AON_CLK_EN_DONE
//    </check>
//  </item>
//  


// ----------------------  Field Item: RCC_SR_SET_LPTIM0_AON_CLK_EN_DONE  -------------------------
// SVD Line: 1071

//  <item> SFDITEM_FIELD__RCC_SR_SET_LPTIM0_AON_CLK_EN_DONE
//    <name> SET_LPTIM0_AON_CLK_EN_DONE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40000028) SET_LPTIM0_AON_CLK_EN_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR ) </loc>
//      <o.4..4> SET_LPTIM0_AON_CLK_EN_DONE
//    </check>
//  </item>
//  


// ----------------------  Field Item: RCC_SR_SET_LPTIM1_AON_CLK_EN_DONE  -------------------------
// SVD Line: 1078

//  <item> SFDITEM_FIELD__RCC_SR_SET_LPTIM1_AON_CLK_EN_DONE
//    <name> SET_LPTIM1_AON_CLK_EN_DONE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40000028) SET_LPTIM1_AON_CLK_EN_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR ) </loc>
//      <o.5..5> SET_LPTIM1_AON_CLK_EN_DONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_SR  -------------------------------------
// SVD Line: 1034

//  <rtree> SFDITEM_REG__RCC_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40000028) Reset status register </i>
//    <loc> ( (unsigned int)((RCC_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RCC_SR_SET_IWDG_AON_CLK_EN_DONE </item>
//    <item> SFDITEM_FIELD__RCC_SR_SET_RTC_AON_CLK_EN_DONE </item>
//    <item> SFDITEM_FIELD__RCC_SR_SET_LPUART_AON_CLK_EN_DONE </item>
//    <item> SFDITEM_FIELD__RCC_SR_SET_LCDCTRL_AON_CLK_EN_DONE </item>
//    <item> SFDITEM_FIELD__RCC_SR_SET_LPTIM0_AON_CLK_EN_DONE </item>
//    <item> SFDITEM_FIELD__RCC_SR_SET_LPTIM1_AON_CLK_EN_DONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_SR1  ---------------------------------
// SVD Line: 1087

unsigned int RCC_SR1 __AT (0x4000002C);



// ------------------------  Field Item: RCC_SR1_IWDG_AON_CLK_EN_SYNC  ----------------------------
// SVD Line: 1096

//  <item> SFDITEM_FIELD__RCC_SR1_IWDG_AON_CLK_EN_SYNC
//    <name> IWDG_AON_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000002C) IWDG_AON_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.0..0> IWDG_AON_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_SR1_RTC_AON_CLK_EN_SYNC  ----------------------------
// SVD Line: 1103

//  <item> SFDITEM_FIELD__RCC_SR1_RTC_AON_CLK_EN_SYNC
//    <name> RTC_AON_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000002C) RTC_AON_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.1..1> RTC_AON_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -----------------------  Field Item: RCC_SR1_LPUART_AON_CLK_EN_SYNC  ---------------------------
// SVD Line: 1110

//  <item> SFDITEM_FIELD__RCC_SR1_LPUART_AON_CLK_EN_SYNC
//    <name> LPUART_AON_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000002C) LPUART_AON_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.2..2> LPUART_AON_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -----------------------  Field Item: RCC_SR1_LCDCTRL_AON_CLK_EN_SYNC  --------------------------
// SVD Line: 1117

//  <item> SFDITEM_FIELD__RCC_SR1_LCDCTRL_AON_CLK_EN_SYNC
//    <name> LCDCTRL_AON_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000002C) LCDCTRL_AON_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.3..3> LCDCTRL_AON_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -----------------------  Field Item: RCC_SR1_LPTIM0_AON_CLK_EN_SYNC  ---------------------------
// SVD Line: 1124

//  <item> SFDITEM_FIELD__RCC_SR1_LPTIM0_AON_CLK_EN_SYNC
//    <name> LPTIM0_AON_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000002C) LPTIM0_AON_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.4..4> LPTIM0_AON_CLK_EN_SYNC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_SR1_I2S_CLK_EN_SYNC  ------------------------------
// SVD Line: 1131

//  <item> SFDITEM_FIELD__RCC_SR1_I2S_CLK_EN_SYNC
//    <name> I2S_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000002C) I2S_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.5..5> I2S_CLK_EN_SYNC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_SR1_MCO_CLK_EN_SYNC  ------------------------------
// SVD Line: 1138

//  <item> SFDITEM_FIELD__RCC_SR1_MCO_CLK_EN_SYNC
//    <name> MCO_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000002C) MCO_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.6..6> MCO_CLK_EN_SYNC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_SR1_RTC_CLK_EN_SYNC  ------------------------------
// SVD Line: 1145

//  <item> SFDITEM_FIELD__RCC_SR1_RTC_CLK_EN_SYNC
//    <name> RTC_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000002C) RTC_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.7..7> RTC_CLK_EN_SYNC
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_SR1_IWDG_CLK_EN_SYNC  ------------------------------
// SVD Line: 1152

//  <item> SFDITEM_FIELD__RCC_SR1_IWDG_CLK_EN_SYNC
//    <name> IWDG_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000002C) IWDG_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.8..8> IWDG_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_SR1_LCDCTRL_CLK_EN_SYNC  ----------------------------
// SVD Line: 1159

//  <item> SFDITEM_FIELD__RCC_SR1_LCDCTRL_CLK_EN_SYNC
//    <name> LCDCTRL_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000002C) LCDCTRL_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.9..9> LCDCTRL_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_SR1_LPUART_CLK_EN_SYNC  -----------------------------
// SVD Line: 1166

//  <item> SFDITEM_FIELD__RCC_SR1_LPUART_CLK_EN_SYNC
//    <name> LPUART_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000002C) LPUART_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.10..10> LPUART_CLK_EN_SYNC
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_SR1_QSPI_CLK_EN_SYNC  ------------------------------
// SVD Line: 1173

//  <item> SFDITEM_FIELD__RCC_SR1_QSPI_CLK_EN_SYNC
//    <name> QSPI_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000002C) QSPI_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.11..11> QSPI_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_SR1_LPTIM0_CLK_EN_SYNC  -----------------------------
// SVD Line: 1180

//  <item> SFDITEM_FIELD__RCC_SR1_LPTIM0_CLK_EN_SYNC
//    <name> LPTIM0_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 12] RO (@ 0x4000002C) LPTIM0_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.12..12> LPTIM0_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_SR1_ADCCTRL_CLK_EN_SYNC  ----------------------------
// SVD Line: 1187

//  <item> SFDITEM_FIELD__RCC_SR1_ADCCTRL_CLK_EN_SYNC
//    <name> ADCCTRL_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 13] RO (@ 0x4000002C) ADCCTRL_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.13..13> ADCCTRL_CLK_EN_SYNC
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RCC_SR1_SCC_CLK_EN_SYNC  ------------------------------
// SVD Line: 1194

//  <item> SFDITEM_FIELD__RCC_SR1_SCC_CLK_EN_SYNC
//    <name> SCC_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x4000002C) SCC_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.14..14> SCC_CLK_EN_SYNC
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_SR1_UART3_CLK_EN_SYNC  -----------------------------
// SVD Line: 1201

//  <item> SFDITEM_FIELD__RCC_SR1_UART3_CLK_EN_SYNC
//    <name> UART3_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x4000002C) UART3_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.15..15> UART3_CLK_EN_SYNC
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_SR1_UART2_CLK_EN_SYNC  -----------------------------
// SVD Line: 1208

//  <item> SFDITEM_FIELD__RCC_SR1_UART2_CLK_EN_SYNC
//    <name> UART2_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4000002C) UART2_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.16..16> UART2_CLK_EN_SYNC
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_SR1_UART1_CLK_EN_SYNC  -----------------------------
// SVD Line: 1215

//  <item> SFDITEM_FIELD__RCC_SR1_UART1_CLK_EN_SYNC
//    <name> UART1_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 17] RO (@ 0x4000002C) UART1_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.17..17> UART1_CLK_EN_SYNC
//    </check>
//  </item>
//  


// --------------------------  Field Item: RCC_SR1_UART0_CLK_EN_SYNC  -----------------------------
// SVD Line: 1222

//  <item> SFDITEM_FIELD__RCC_SR1_UART0_CLK_EN_SYNC
//    <name> UART0_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 18] RO (@ 0x4000002C) UART0_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.18..18> UART0_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -----------------------  Field Item: RCC_SR1_LPTIM1_AON_CLK_EN_SYNC  ---------------------------
// SVD Line: 1229

//  <item> SFDITEM_FIELD__RCC_SR1_LPTIM1_AON_CLK_EN_SYNC
//    <name> LPTIM1_AON_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 19] RO (@ 0x4000002C) LPTIM1_AON_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.19..19> LPTIM1_AON_CLK_EN_SYNC
//    </check>
//  </item>
//  


// -------------------------  Field Item: RCC_SR1_LPTIM1_CLK_EN_SYNC  -----------------------------
// SVD Line: 1236

//  <item> SFDITEM_FIELD__RCC_SR1_LPTIM1_CLK_EN_SYNC
//    <name> LPTIM1_CLK_EN_SYNC </name>
//    <r> 
//    <i> [Bit 20] RO (@ 0x4000002C) LPTIM1_CLK_EN_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) RCC_SR1 ) </loc>
//      <o.20..20> LPTIM1_CLK_EN_SYNC
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_SR1  ------------------------------------
// SVD Line: 1087

//  <rtree> SFDITEM_REG__RCC_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000002C) Reset status register </i>
//    <loc> ( (unsigned int)((RCC_SR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RCC_SR1_IWDG_AON_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_RTC_AON_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LPUART_AON_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LCDCTRL_AON_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LPTIM0_AON_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_I2S_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_MCO_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_RTC_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_IWDG_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LCDCTRL_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LPUART_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_QSPI_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LPTIM0_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_ADCCTRL_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_SCC_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_UART3_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_UART2_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_UART1_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_UART0_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LPTIM1_AON_CLK_EN_SYNC </item>
//    <item> SFDITEM_FIELD__RCC_SR1_LPTIM1_CLK_EN_SYNC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RCC_CR3  ---------------------------------
// SVD Line: 1245

unsigned int RCC_CR3 __AT (0x40000030);



// ----------------------------  Field Item: RCC_CR3_I2S_SCLK_DIV  --------------------------------
// SVD Line: 1254

//  <item> SFDITEM_FIELD__RCC_CR3_I2S_SCLK_DIV
//    <name> I2S_SCLK_DIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40000030) I2S_SCLK_DIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR3 >> 0) & 0xFF), ((RCC_CR3 = (RCC_CR3 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RCC_CR3_I2S_MCLK_DIV  --------------------------------
// SVD Line: 1261

//  <item> SFDITEM_FIELD__RCC_CR3_I2S_MCLK_DIV
//    <name> I2S_MCLK_DIV </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40000030) I2S_MCLK_DIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((RCC_CR3 >> 8) & 0xFF), ((RCC_CR3 = (RCC_CR3 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RCC_CR3  ------------------------------------
// SVD Line: 1245

//  <rtree> SFDITEM_REG__RCC_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40000030) Control register 3 </i>
//    <loc> ( (unsigned int)((RCC_CR3 >> 0) & 0xFFFFFFFF), ((RCC_CR3 = (RCC_CR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RCC_CR3_I2S_SCLK_DIV </item>
//    <item> SFDITEM_FIELD__RCC_CR3_I2S_MCLK_DIV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RCC  --------------------------------------
// SVD Line: 46

//  <view> RCC
//    <name> RCC </name>
//    <item> SFDITEM_REG__RCC_CR0 </item>
//    <item> SFDITEM_REG__RCC_CR1 </item>
//    <item> SFDITEM_REG__RCC_CR2 </item>
//    <item> SFDITEM_REG__RCC_CGR0 </item>
//    <item> SFDITEM_REG__RCC_CGR1 </item>
//    <item> SFDITEM_REG__RCC_CGR2 </item>
//    <item> SFDITEM_REG__RCC_RST0 </item>
//    <item> SFDITEM_REG__RCC_RST1 </item>
//    <item> SFDITEM_REG__RCC_RST_SR </item>
//    <item> SFDITEM_REG__RCC_RST_CR </item>
//    <item> SFDITEM_REG__RCC_SR </item>
//    <item> SFDITEM_REG__RCC_SR1 </item>
//    <item> SFDITEM_REG__RCC_CR3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP0_CR0  --------------------------------
// SVD Line: 1286

unsigned int SSP0_CR0 __AT (0x40006000);



// --------------------------------  Field Item: SSP0_CR0_DSS  ------------------------------------
// SVD Line: 1295

//  <item> SFDITEM_FIELD__SSP0_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40006000) Data width setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 0) & 0xF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_FRF  ------------------------------------
// SVD Line: 1302

//  <item> SFDITEM_FIELD__SSP0_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40006000) SSP frame formats setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 4) & 0x3), ((SSP0_CR0 = (SSP0_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SPO  ------------------------------------
// SVD Line: 1309

//  <item> SFDITEM_FIELD__SSP0_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40006000) SSP polarity setting </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SPH  ------------------------------------
// SVD Line: 1316

//  <item> SFDITEM_FIELD__SSP0_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40006000) SSP phase setting </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR0_SCR  ------------------------------------
// SVD Line: 1323

//  <item> SFDITEM_FIELD__SSP0_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40006000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CR0 >> 8) & 0xFF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CR0  ------------------------------------
// SVD Line: 1286

//  <rtree> SFDITEM_REG__SSP0_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006000) control register 0 </i>
//    <loc> ( (unsigned int)((SSP0_CR0 >> 0) & 0xFFFFFFFF), ((SSP0_CR0 = (SSP0_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CR0_DSS </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP0_CR0_SCR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_CR1  --------------------------------
// SVD Line: 1332

unsigned int SSP0_CR1 __AT (0x40006004);



// --------------------------------  Field Item: SSP0_CR1_LBM  ------------------------------------
// SVD Line: 1341

//  <item> SFDITEM_FIELD__SSP0_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40006004) loopback mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR1_SSE  ------------------------------------
// SVD Line: 1348

//  <item> SFDITEM_FIELD__SSP0_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40006004) SSP enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_CR1_MS  ------------------------------------
// SVD Line: 1355

//  <item> SFDITEM_FIELD__SSP0_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40006004) Master/slave mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_CR1_SOD  ------------------------------------
// SVD Line: 1362

//  <item> SFDITEM_FIELD__SSP0_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40006004) SSP output disable in slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CR1  ------------------------------------
// SVD Line: 1332

//  <rtree> SFDITEM_REG__SSP0_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006004) control register 1 </i>
//    <loc> ( (unsigned int)((SSP0_CR1 >> 0) & 0xFFFFFFFF), ((SSP0_CR1 = (SSP0_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CR1_LBM </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP0_CR1_SOD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_DR  ---------------------------------
// SVD Line: 1371

unsigned int SSP0_DR __AT (0x40006008);



// --------------------------------  Field Item: SSP0_DR_DATA  ------------------------------------
// SVD Line: 1380

//  <item> SFDITEM_FIELD__SSP0_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40006008) DATA </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP0_DR >> 0) & 0xFFFF), ((SSP0_DR = (SSP0_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP0_DR  ------------------------------------
// SVD Line: 1371

//  <rtree> SFDITEM_REG__SSP0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006008) data register </i>
//    <loc> ( (unsigned int)((SSP0_DR >> 0) & 0xFFFFFFFF), ((SSP0_DR = (SSP0_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_DR_DATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_SR  ---------------------------------
// SVD Line: 1389

unsigned int SSP0_SR __AT (0x4000600C);



// ---------------------------------  Field Item: SSP0_SR_TFE  ------------------------------------
// SVD Line: 1398

//  <item> SFDITEM_FIELD__SSP0_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000600C) TX FIFO empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_TNF  ------------------------------------
// SVD Line: 1405

//  <item> SFDITEM_FIELD__SSP0_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000600C) TX FIFO not full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_RNE  ------------------------------------
// SVD Line: 1412

//  <item> SFDITEM_FIELD__SSP0_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000600C) RX FIFO not empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_RFF  ------------------------------------
// SVD Line: 1419

//  <item> SFDITEM_FIELD__SSP0_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000600C) RX FIFO full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP0_SR_BSY  ------------------------------------
// SVD Line: 1426

//  <item> SFDITEM_FIELD__SSP0_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000600C) SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP0_SR  ------------------------------------
// SVD Line: 1389

//  <rtree> SFDITEM_REG__SSP0_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000600C) status register </i>
//    <loc> ( (unsigned int)((SSP0_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_SR_TFE </item>
//    <item> SFDITEM_FIELD__SSP0_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP0_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP0_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP0_SR_BSY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_CPSR  --------------------------------
// SVD Line: 1435

unsigned int SSP0_CPSR __AT (0x40006010);



// ------------------------------  Field Item: SSP0_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1444

//  <item> SFDITEM_FIELD__SSP0_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40006010) Clock prescaler divider, must be an even number between 2~254 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP0_CPSR >> 0) & 0xFF), ((SSP0_CPSR = (SSP0_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_CPSR  -----------------------------------
// SVD Line: 1435

//  <rtree> SFDITEM_REG__SSP0_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006010) clock prescale register </i>
//    <loc> ( (unsigned int)((SSP0_CPSR >> 0) & 0xFFFFFFFF), ((SSP0_CPSR = (SSP0_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP0_IMSC  --------------------------------
// SVD Line: 1453

unsigned int SSP0_IMSC __AT (0x40006014);



// -------------------------------  Field Item: SSP0_IMSC_RORIM  ----------------------------------
// SVD Line: 1462

//  <item> SFDITEM_FIELD__SSP0_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40006014) RX overrun interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RTIM  -----------------------------------
// SVD Line: 1469

//  <item> SFDITEM_FIELD__SSP0_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40006014) RX timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_RXIM  -----------------------------------
// SVD Line: 1476

//  <item> SFDITEM_FIELD__SSP0_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40006014) RX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_IMSC_TXIM  -----------------------------------
// SVD Line: 1483

//  <item> SFDITEM_FIELD__SSP0_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40006014) TX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_IMSC  -----------------------------------
// SVD Line: 1453

//  <rtree> SFDITEM_REG__SSP0_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006014) interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP0_IMSC >> 0) & 0xFFFFFFFF), ((SSP0_IMSC = (SSP0_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RORIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP0_IMSC_TXIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_RIS  --------------------------------
// SVD Line: 1492

unsigned int SSP0_RIS __AT (0x40006018);



// -------------------------------  Field Item: SSP0_RIS_RORRIS  ----------------------------------
// SVD Line: 1501

//  <item> SFDITEM_FIELD__SSP0_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40006018) RX overrun raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RTRIS  -----------------------------------
// SVD Line: 1508

//  <item> SFDITEM_FIELD__SSP0_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40006018) RX timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_RXRIS  -----------------------------------
// SVD Line: 1515

//  <item> SFDITEM_FIELD__SSP0_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40006018) RX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_RIS_TXRIS  -----------------------------------
// SVD Line: 1522

//  <item> SFDITEM_FIELD__SSP0_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40006018) TX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_RIS  ------------------------------------
// SVD Line: 1492

//  <rtree> SFDITEM_REG__SSP0_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006018) raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_RIS_RORRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP0_RIS_TXRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_MIS  --------------------------------
// SVD Line: 1531

unsigned int SSP0_MIS __AT (0x4000601C);



// -------------------------------  Field Item: SSP0_MIS_RORMIS  ----------------------------------
// SVD Line: 1540

//  <item> SFDITEM_FIELD__SSP0_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000601C) RX overrun masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RTMIS  -----------------------------------
// SVD Line: 1547

//  <item> SFDITEM_FIELD__SSP0_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000601C) RX timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_RXMIS  -----------------------------------
// SVD Line: 1554

//  <item> SFDITEM_FIELD__SSP0_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000601C) RX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP0_MIS_TXMIS  -----------------------------------
// SVD Line: 1561

//  <item> SFDITEM_FIELD__SSP0_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000601C) TX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_MIS  ------------------------------------
// SVD Line: 1531

//  <rtree> SFDITEM_REG__SSP0_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000601C) masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP0_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_MIS_RORMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP0_MIS_TXMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP0_ICR  --------------------------------
// SVD Line: 1570

unsigned int SSP0_ICR __AT (0x40006020);



// -------------------------------  Field Item: SSP0_ICR_RORIC  -----------------------------------
// SVD Line: 1579

//  <item> SFDITEM_FIELD__SSP0_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40006020) RX overrun interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP0_ICR_RTIC  -----------------------------------
// SVD Line: 1586

//  <item> SFDITEM_FIELD__SSP0_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40006020) RX timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP0_ICR  ------------------------------------
// SVD Line: 1570

//  <rtree> SFDITEM_REG__SSP0_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40006020) interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP0_ICR >> 0) & 0xFFFFFFFF), ((SSP0_ICR = (SSP0_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_ICR_RORIC </item>
//    <item> SFDITEM_FIELD__SSP0_ICR_RTIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SSP0_DMA_CR  -------------------------------
// SVD Line: 1595

unsigned int SSP0_DMA_CR __AT (0x40006024);



// -----------------------------  Field Item: SSP0_DMA_CR_RXDMAE  ---------------------------------
// SVD Line: 1604

//  <item> SFDITEM_FIELD__SSP0_DMA_CR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40006024) DMA RX enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_DMA_CR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP0_DMA_CR_TXDMAE  ---------------------------------
// SVD Line: 1611

//  <item> SFDITEM_FIELD__SSP0_DMA_CR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40006024) DMA TX enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP0_DMA_CR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP0_DMA_CR  ----------------------------------
// SVD Line: 1595

//  <rtree> SFDITEM_REG__SSP0_DMA_CR
//    <name> DMA_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40006024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP0_DMA_CR >> 0) & 0xFFFFFFFF), ((SSP0_DMA_CR = (SSP0_DMA_CR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP0_DMA_CR_RXDMAE </item>
//    <item> SFDITEM_FIELD__SSP0_DMA_CR_TXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_PERIPH_ID0  -----------------------------
// SVD Line: 1620

unsigned int SSP0_PERIPH_ID0 __AT (0x40006FE0);



// -------------------------  Field Item: SSP0_PERIPH_ID0_PERIPH_ID0  -----------------------------
// SVD Line: 1629

//  <item> SFDITEM_FIELD__SSP0_PERIPH_ID0_PERIPH_ID0
//    <name> PERIPH_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FE0) PERIPH_ID0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PERIPH_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PERIPH_ID0  --------------------------------
// SVD Line: 1620

//  <rtree> SFDITEM_REG__SSP0_PERIPH_ID0
//    <name> PERIPH_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FE0) peripheral identification register 0 </i>
//    <loc> ( (unsigned int)((SSP0_PERIPH_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PERIPH_ID0_PERIPH_ID0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_PERIPH_ID1  -----------------------------
// SVD Line: 1638

unsigned int SSP0_PERIPH_ID1 __AT (0x40006FE4);



// -------------------------  Field Item: SSP0_PERIPH_ID1_PERIPH_ID1  -----------------------------
// SVD Line: 1647

//  <item> SFDITEM_FIELD__SSP0_PERIPH_ID1_PERIPH_ID1
//    <name> PERIPH_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FE4) PERIPH_ID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PERIPH_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PERIPH_ID1  --------------------------------
// SVD Line: 1638

//  <rtree> SFDITEM_REG__SSP0_PERIPH_ID1
//    <name> PERIPH_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FE4) peripheral identification register 1 </i>
//    <loc> ( (unsigned int)((SSP0_PERIPH_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PERIPH_ID1_PERIPH_ID1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_PERIPH_ID2  -----------------------------
// SVD Line: 1656

unsigned int SSP0_PERIPH_ID2 __AT (0x40006FE8);



// -------------------------  Field Item: SSP0_PERIPH_ID2_PERIPH_ID2  -----------------------------
// SVD Line: 1665

//  <item> SFDITEM_FIELD__SSP0_PERIPH_ID2_PERIPH_ID2
//    <name> PERIPH_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FE8) PERIPH_ID2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PERIPH_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PERIPH_ID2  --------------------------------
// SVD Line: 1656

//  <rtree> SFDITEM_REG__SSP0_PERIPH_ID2
//    <name> PERIPH_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FE8) peripheral identification register 2 </i>
//    <loc> ( (unsigned int)((SSP0_PERIPH_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PERIPH_ID2_PERIPH_ID2 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP0_PERIPH_ID3  -----------------------------
// SVD Line: 1674

unsigned int SSP0_PERIPH_ID3 __AT (0x40006FEC);



// -------------------------  Field Item: SSP0_PERIPH_ID3_PERIPH_ID3  -----------------------------
// SVD Line: 1683

//  <item> SFDITEM_FIELD__SSP0_PERIPH_ID3_PERIPH_ID3
//    <name> PERIPH_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FEC) PERIPH_ID3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PERIPH_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PERIPH_ID3  --------------------------------
// SVD Line: 1674

//  <rtree> SFDITEM_REG__SSP0_PERIPH_ID3
//    <name> PERIPH_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FEC) peripheral identification register 3 </i>
//    <loc> ( (unsigned int)((SSP0_PERIPH_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PERIPH_ID3_PERIPH_ID3 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_PCELL_ID0  -----------------------------
// SVD Line: 1692

unsigned int SSP0_PCELL_ID0 __AT (0x40006FF0);



// --------------------------  Field Item: SSP0_PCELL_ID0_PCELL_ID0  ------------------------------
// SVD Line: 1701

//  <item> SFDITEM_FIELD__SSP0_PCELL_ID0_PCELL_ID0
//    <name> PCELL_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FF0) PCELL_ID0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PCELL_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PCELL_ID0  ---------------------------------
// SVD Line: 1692

//  <rtree> SFDITEM_REG__SSP0_PCELL_ID0
//    <name> PCELL_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FF0) prime cell identification register 0 </i>
//    <loc> ( (unsigned int)((SSP0_PCELL_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PCELL_ID0_PCELL_ID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_PCELL_ID1  -----------------------------
// SVD Line: 1710

unsigned int SSP0_PCELL_ID1 __AT (0x40006FF4);



// --------------------------  Field Item: SSP0_PCELL_ID1_PCELL_ID1  ------------------------------
// SVD Line: 1719

//  <item> SFDITEM_FIELD__SSP0_PCELL_ID1_PCELL_ID1
//    <name> PCELL_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FF4) PCELL_ID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PCELL_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PCELL_ID1  ---------------------------------
// SVD Line: 1710

//  <rtree> SFDITEM_REG__SSP0_PCELL_ID1
//    <name> PCELL_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FF4) prime cell identification register 1 </i>
//    <loc> ( (unsigned int)((SSP0_PCELL_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PCELL_ID1_PCELL_ID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_PCELL_ID2  -----------------------------
// SVD Line: 1728

unsigned int SSP0_PCELL_ID2 __AT (0x40006FF8);



// --------------------------  Field Item: SSP0_PCELL_ID2_PCELL_ID2  ------------------------------
// SVD Line: 1737

//  <item> SFDITEM_FIELD__SSP0_PCELL_ID2_PCELL_ID2
//    <name> PCELL_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FF8) PCELL_ID2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PCELL_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PCELL_ID2  ---------------------------------
// SVD Line: 1728

//  <rtree> SFDITEM_REG__SSP0_PCELL_ID2
//    <name> PCELL_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FF8) prime cell identification register 2 </i>
//    <loc> ( (unsigned int)((SSP0_PCELL_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PCELL_ID2_PCELL_ID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP0_PCELL_ID3  -----------------------------
// SVD Line: 1746

unsigned int SSP0_PCELL_ID3 __AT (0x40006FFC);



// --------------------------  Field Item: SSP0_PCELL_ID3_PCELL_ID3  ------------------------------
// SVD Line: 1755

//  <item> SFDITEM_FIELD__SSP0_PCELL_ID3_PCELL_ID3
//    <name> PCELL_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FFC) PCELL_ID3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP0_PCELL_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP0_PCELL_ID3  ---------------------------------
// SVD Line: 1746

//  <rtree> SFDITEM_REG__SSP0_PCELL_ID3
//    <name> PCELL_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40006FFC) prime cell identification register 3 </i>
//    <loc> ( (unsigned int)((SSP0_PCELL_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP0_PCELL_ID3_PCELL_ID3 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP0  -------------------------------------
// SVD Line: 1272

//  <view> SSP0
//    <name> SSP0 </name>
//    <item> SFDITEM_REG__SSP0_CR0 </item>
//    <item> SFDITEM_REG__SSP0_CR1 </item>
//    <item> SFDITEM_REG__SSP0_DR </item>
//    <item> SFDITEM_REG__SSP0_SR </item>
//    <item> SFDITEM_REG__SSP0_CPSR </item>
//    <item> SFDITEM_REG__SSP0_IMSC </item>
//    <item> SFDITEM_REG__SSP0_RIS </item>
//    <item> SFDITEM_REG__SSP0_MIS </item>
//    <item> SFDITEM_REG__SSP0_ICR </item>
//    <item> SFDITEM_REG__SSP0_DMA_CR </item>
//    <item> SFDITEM_REG__SSP0_PERIPH_ID0 </item>
//    <item> SFDITEM_REG__SSP0_PERIPH_ID1 </item>
//    <item> SFDITEM_REG__SSP0_PERIPH_ID2 </item>
//    <item> SFDITEM_REG__SSP0_PERIPH_ID3 </item>
//    <item> SFDITEM_REG__SSP0_PCELL_ID0 </item>
//    <item> SFDITEM_REG__SSP0_PCELL_ID1 </item>
//    <item> SFDITEM_REG__SSP0_PCELL_ID2 </item>
//    <item> SFDITEM_REG__SSP0_PCELL_ID3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP1_CR0  --------------------------------
// SVD Line: 1780

unsigned int SSP1_CR0 __AT (0x40012000);



// --------------------------------  Field Item: SSP1_CR0_DSS  ------------------------------------
// SVD Line: 1789

//  <item> SFDITEM_FIELD__SSP1_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40012000) Data width setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 0) & 0xF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_FRF  ------------------------------------
// SVD Line: 1796

//  <item> SFDITEM_FIELD__SSP1_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40012000) SSP frame formats setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 4) & 0x3), ((SSP1_CR0 = (SSP1_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SPO  ------------------------------------
// SVD Line: 1803

//  <item> SFDITEM_FIELD__SSP1_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40012000) SSP polarity setting </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SPH  ------------------------------------
// SVD Line: 1810

//  <item> SFDITEM_FIELD__SSP1_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40012000) SSP phase setting </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR0_SCR  ------------------------------------
// SVD Line: 1817

//  <item> SFDITEM_FIELD__SSP1_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40012000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CR0 >> 8) & 0xFF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CR0  ------------------------------------
// SVD Line: 1780

//  <rtree> SFDITEM_REG__SSP1_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012000) control register 0 </i>
//    <loc> ( (unsigned int)((SSP1_CR0 >> 0) & 0xFFFFFFFF), ((SSP1_CR0 = (SSP1_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CR0_DSS </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP1_CR0_SCR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_CR1  --------------------------------
// SVD Line: 1826

unsigned int SSP1_CR1 __AT (0x40012004);



// --------------------------------  Field Item: SSP1_CR1_LBM  ------------------------------------
// SVD Line: 1835

//  <item> SFDITEM_FIELD__SSP1_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012004) loopback mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR1_SSE  ------------------------------------
// SVD Line: 1842

//  <item> SFDITEM_FIELD__SSP1_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012004) SSP enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_CR1_MS  ------------------------------------
// SVD Line: 1849

//  <item> SFDITEM_FIELD__SSP1_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012004) Master/slave mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_CR1_SOD  ------------------------------------
// SVD Line: 1856

//  <item> SFDITEM_FIELD__SSP1_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012004) SSP output disable in slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CR1  ------------------------------------
// SVD Line: 1826

//  <rtree> SFDITEM_REG__SSP1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012004) control register 1 </i>
//    <loc> ( (unsigned int)((SSP1_CR1 >> 0) & 0xFFFFFFFF), ((SSP1_CR1 = (SSP1_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CR1_LBM </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP1_CR1_SOD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_DR  ---------------------------------
// SVD Line: 1865

unsigned int SSP1_DR __AT (0x40012008);



// --------------------------------  Field Item: SSP1_DR_DATA  ------------------------------------
// SVD Line: 1874

//  <item> SFDITEM_FIELD__SSP1_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40012008) SSP TX/RX data </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP1_DR >> 0) & 0xFFFF), ((SSP1_DR = (SSP1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP1_DR  ------------------------------------
// SVD Line: 1865

//  <rtree> SFDITEM_REG__SSP1_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012008) data register </i>
//    <loc> ( (unsigned int)((SSP1_DR >> 0) & 0xFFFFFFFF), ((SSP1_DR = (SSP1_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_DR_DATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_SR  ---------------------------------
// SVD Line: 1883

unsigned int SSP1_SR __AT (0x4001200C);



// ---------------------------------  Field Item: SSP1_SR_TFE  ------------------------------------
// SVD Line: 1892

//  <item> SFDITEM_FIELD__SSP1_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001200C) TX FIFO empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_TNF  ------------------------------------
// SVD Line: 1899

//  <item> SFDITEM_FIELD__SSP1_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001200C) TX FIFO not full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_RNE  ------------------------------------
// SVD Line: 1906

//  <item> SFDITEM_FIELD__SSP1_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001200C) RX FIFO not empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_RFF  ------------------------------------
// SVD Line: 1913

//  <item> SFDITEM_FIELD__SSP1_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001200C) RX FIFO full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP1_SR_BSY  ------------------------------------
// SVD Line: 1920

//  <item> SFDITEM_FIELD__SSP1_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001200C) SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP1_SR  ------------------------------------
// SVD Line: 1883

//  <rtree> SFDITEM_REG__SSP1_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001200C) status register </i>
//    <loc> ( (unsigned int)((SSP1_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_SR_TFE </item>
//    <item> SFDITEM_FIELD__SSP1_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP1_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP1_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP1_SR_BSY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_CPSR  --------------------------------
// SVD Line: 1929

unsigned int SSP1_CPSR __AT (0x40012010);



// ------------------------------  Field Item: SSP1_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 1938

//  <item> SFDITEM_FIELD__SSP1_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40012010) Clock prescaler divider, must be an even number between 2~254 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP1_CPSR >> 0) & 0xFF), ((SSP1_CPSR = (SSP1_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_CPSR  -----------------------------------
// SVD Line: 1929

//  <rtree> SFDITEM_REG__SSP1_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012010) clock prescale register </i>
//    <loc> ( (unsigned int)((SSP1_CPSR >> 0) & 0xFFFFFFFF), ((SSP1_CPSR = (SSP1_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP1_IMSC  --------------------------------
// SVD Line: 1947

unsigned int SSP1_IMSC __AT (0x40012014);



// -------------------------------  Field Item: SSP1_IMSC_RORIM  ----------------------------------
// SVD Line: 1956

//  <item> SFDITEM_FIELD__SSP1_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012014) RX overrun interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RTIM  -----------------------------------
// SVD Line: 1963

//  <item> SFDITEM_FIELD__SSP1_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012014) RX timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_RXIM  -----------------------------------
// SVD Line: 1970

//  <item> SFDITEM_FIELD__SSP1_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40012014) RX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_IMSC_TXIM  -----------------------------------
// SVD Line: 1977

//  <item> SFDITEM_FIELD__SSP1_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40012014) TX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_IMSC  -----------------------------------
// SVD Line: 1947

//  <rtree> SFDITEM_REG__SSP1_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012014) interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP1_IMSC >> 0) & 0xFFFFFFFF), ((SSP1_IMSC = (SSP1_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RORIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP1_IMSC_TXIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_RIS  --------------------------------
// SVD Line: 1986

unsigned int SSP1_RIS __AT (0x40012018);



// -------------------------------  Field Item: SSP1_RIS_RORRIS  ----------------------------------
// SVD Line: 1995

//  <item> SFDITEM_FIELD__SSP1_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40012018) RX overrun raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RTRIS  -----------------------------------
// SVD Line: 2002

//  <item> SFDITEM_FIELD__SSP1_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40012018) RX timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_RXRIS  -----------------------------------
// SVD Line: 2009

//  <item> SFDITEM_FIELD__SSP1_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40012018) RX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_RIS_TXRIS  -----------------------------------
// SVD Line: 2016

//  <item> SFDITEM_FIELD__SSP1_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40012018) TX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_RIS  ------------------------------------
// SVD Line: 1986

//  <rtree> SFDITEM_REG__SSP1_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012018) raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_RIS_RORRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP1_RIS_TXRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_MIS  --------------------------------
// SVD Line: 2025

unsigned int SSP1_MIS __AT (0x4001201C);



// -------------------------------  Field Item: SSP1_MIS_RORMIS  ----------------------------------
// SVD Line: 2034

//  <item> SFDITEM_FIELD__SSP1_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001201C) RX overrun masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RTMIS  -----------------------------------
// SVD Line: 2041

//  <item> SFDITEM_FIELD__SSP1_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001201C) RX timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_RXMIS  -----------------------------------
// SVD Line: 2048

//  <item> SFDITEM_FIELD__SSP1_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001201C) RX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP1_MIS_TXMIS  -----------------------------------
// SVD Line: 2055

//  <item> SFDITEM_FIELD__SSP1_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001201C) TX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_MIS  ------------------------------------
// SVD Line: 2025

//  <rtree> SFDITEM_REG__SSP1_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001201C) masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP1_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_MIS_RORMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP1_MIS_TXMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP1_ICR  --------------------------------
// SVD Line: 2064

unsigned int SSP1_ICR __AT (0x40012020);



// -------------------------------  Field Item: SSP1_ICR_RORIC  -----------------------------------
// SVD Line: 2073

//  <item> SFDITEM_FIELD__SSP1_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40012020) RX overrun interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP1_ICR_RTIC  -----------------------------------
// SVD Line: 2080

//  <item> SFDITEM_FIELD__SSP1_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40012020) RX timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP1_ICR  ------------------------------------
// SVD Line: 2064

//  <rtree> SFDITEM_REG__SSP1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40012020) interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP1_ICR >> 0) & 0xFFFFFFFF), ((SSP1_ICR = (SSP1_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_ICR_RORIC </item>
//    <item> SFDITEM_FIELD__SSP1_ICR_RTIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SSP1_DMA_CR  -------------------------------
// SVD Line: 2089

unsigned int SSP1_DMA_CR __AT (0x40012024);



// -----------------------------  Field Item: SSP1_DMA_CR_RXDMAE  ---------------------------------
// SVD Line: 2098

//  <item> SFDITEM_FIELD__SSP1_DMA_CR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40012024) DMA RX enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_DMA_CR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP1_DMA_CR_TXDMAE  ---------------------------------
// SVD Line: 2105

//  <item> SFDITEM_FIELD__SSP1_DMA_CR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40012024) DMA TX enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP1_DMA_CR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP1_DMA_CR  ----------------------------------
// SVD Line: 2089

//  <rtree> SFDITEM_REG__SSP1_DMA_CR
//    <name> DMA_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40012024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP1_DMA_CR >> 0) & 0xFFFFFFFF), ((SSP1_DMA_CR = (SSP1_DMA_CR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP1_DMA_CR_RXDMAE </item>
//    <item> SFDITEM_FIELD__SSP1_DMA_CR_TXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_PERIPH_ID0  -----------------------------
// SVD Line: 2114

unsigned int SSP1_PERIPH_ID0 __AT (0x40012FE0);



// -------------------------  Field Item: SSP1_PERIPH_ID0_PERIPH_ID0  -----------------------------
// SVD Line: 2123

//  <item> SFDITEM_FIELD__SSP1_PERIPH_ID0_PERIPH_ID0
//    <name> PERIPH_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FE0) PERIPH_ID0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PERIPH_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PERIPH_ID0  --------------------------------
// SVD Line: 2114

//  <rtree> SFDITEM_REG__SSP1_PERIPH_ID0
//    <name> PERIPH_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FE0) peripheral identification register 0 </i>
//    <loc> ( (unsigned int)((SSP1_PERIPH_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PERIPH_ID0_PERIPH_ID0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_PERIPH_ID1  -----------------------------
// SVD Line: 2132

unsigned int SSP1_PERIPH_ID1 __AT (0x40012FE4);



// -------------------------  Field Item: SSP1_PERIPH_ID1_PERIPH_ID1  -----------------------------
// SVD Line: 2141

//  <item> SFDITEM_FIELD__SSP1_PERIPH_ID1_PERIPH_ID1
//    <name> PERIPH_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FE4) PERIPH_ID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PERIPH_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PERIPH_ID1  --------------------------------
// SVD Line: 2132

//  <rtree> SFDITEM_REG__SSP1_PERIPH_ID1
//    <name> PERIPH_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FE4) peripheral identification register 1 </i>
//    <loc> ( (unsigned int)((SSP1_PERIPH_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PERIPH_ID1_PERIPH_ID1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_PERIPH_ID2  -----------------------------
// SVD Line: 2150

unsigned int SSP1_PERIPH_ID2 __AT (0x40012FE8);



// -------------------------  Field Item: SSP1_PERIPH_ID2_PERIPH_ID2  -----------------------------
// SVD Line: 2159

//  <item> SFDITEM_FIELD__SSP1_PERIPH_ID2_PERIPH_ID2
//    <name> PERIPH_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FE8) PERIPH_ID2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PERIPH_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PERIPH_ID2  --------------------------------
// SVD Line: 2150

//  <rtree> SFDITEM_REG__SSP1_PERIPH_ID2
//    <name> PERIPH_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FE8) peripheral identification register 2 </i>
//    <loc> ( (unsigned int)((SSP1_PERIPH_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PERIPH_ID2_PERIPH_ID2 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP1_PERIPH_ID3  -----------------------------
// SVD Line: 2168

unsigned int SSP1_PERIPH_ID3 __AT (0x40012FEC);



// -------------------------  Field Item: SSP1_PERIPH_ID3_PERIPH_ID3  -----------------------------
// SVD Line: 2177

//  <item> SFDITEM_FIELD__SSP1_PERIPH_ID3_PERIPH_ID3
//    <name> PERIPH_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FEC) PERIPH_ID3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PERIPH_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PERIPH_ID3  --------------------------------
// SVD Line: 2168

//  <rtree> SFDITEM_REG__SSP1_PERIPH_ID3
//    <name> PERIPH_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FEC) peripheral identification register 3 </i>
//    <loc> ( (unsigned int)((SSP1_PERIPH_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PERIPH_ID3_PERIPH_ID3 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_PCELL_ID0  -----------------------------
// SVD Line: 2186

unsigned int SSP1_PCELL_ID0 __AT (0x40012FF0);



// --------------------------  Field Item: SSP1_PCELL_ID0_PCELL_ID0  ------------------------------
// SVD Line: 2195

//  <item> SFDITEM_FIELD__SSP1_PCELL_ID0_PCELL_ID0
//    <name> PCELL_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FF0) PCELL_ID0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PCELL_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PCELL_ID0  ---------------------------------
// SVD Line: 2186

//  <rtree> SFDITEM_REG__SSP1_PCELL_ID0
//    <name> PCELL_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FF0) prime cell identification register 0 </i>
//    <loc> ( (unsigned int)((SSP1_PCELL_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PCELL_ID0_PCELL_ID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_PCELL_ID1  -----------------------------
// SVD Line: 2204

unsigned int SSP1_PCELL_ID1 __AT (0x40012FF4);



// --------------------------  Field Item: SSP1_PCELL_ID1_PCELL_ID1  ------------------------------
// SVD Line: 2213

//  <item> SFDITEM_FIELD__SSP1_PCELL_ID1_PCELL_ID1
//    <name> PCELL_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FF4) PCELL_ID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PCELL_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PCELL_ID1  ---------------------------------
// SVD Line: 2204

//  <rtree> SFDITEM_REG__SSP1_PCELL_ID1
//    <name> PCELL_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FF4) prime cell identification register 1 </i>
//    <loc> ( (unsigned int)((SSP1_PCELL_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PCELL_ID1_PCELL_ID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_PCELL_ID2  -----------------------------
// SVD Line: 2222

unsigned int SSP1_PCELL_ID2 __AT (0x40012FF8);



// --------------------------  Field Item: SSP1_PCELL_ID2_PCELL_ID2  ------------------------------
// SVD Line: 2231

//  <item> SFDITEM_FIELD__SSP1_PCELL_ID2_PCELL_ID2
//    <name> PCELL_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FF8) PCELL_ID2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PCELL_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PCELL_ID2  ---------------------------------
// SVD Line: 2222

//  <rtree> SFDITEM_REG__SSP1_PCELL_ID2
//    <name> PCELL_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FF8) prime cell identification register 2 </i>
//    <loc> ( (unsigned int)((SSP1_PCELL_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PCELL_ID2_PCELL_ID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP1_PCELL_ID3  -----------------------------
// SVD Line: 2240

unsigned int SSP1_PCELL_ID3 __AT (0x40012FFC);



// --------------------------  Field Item: SSP1_PCELL_ID3_PCELL_ID3  ------------------------------
// SVD Line: 2249

//  <item> SFDITEM_FIELD__SSP1_PCELL_ID3_PCELL_ID3
//    <name> PCELL_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FFC) PCELL_ID3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP1_PCELL_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP1_PCELL_ID3  ---------------------------------
// SVD Line: 2240

//  <rtree> SFDITEM_REG__SSP1_PCELL_ID3
//    <name> PCELL_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40012FFC) prime cell identification register 3 </i>
//    <loc> ( (unsigned int)((SSP1_PCELL_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP1_PCELL_ID3_PCELL_ID3 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP1  -------------------------------------
// SVD Line: 1766

//  <view> SSP1
//    <name> SSP1 </name>
//    <item> SFDITEM_REG__SSP1_CR0 </item>
//    <item> SFDITEM_REG__SSP1_CR1 </item>
//    <item> SFDITEM_REG__SSP1_DR </item>
//    <item> SFDITEM_REG__SSP1_SR </item>
//    <item> SFDITEM_REG__SSP1_CPSR </item>
//    <item> SFDITEM_REG__SSP1_IMSC </item>
//    <item> SFDITEM_REG__SSP1_RIS </item>
//    <item> SFDITEM_REG__SSP1_MIS </item>
//    <item> SFDITEM_REG__SSP1_ICR </item>
//    <item> SFDITEM_REG__SSP1_DMA_CR </item>
//    <item> SFDITEM_REG__SSP1_PERIPH_ID0 </item>
//    <item> SFDITEM_REG__SSP1_PERIPH_ID1 </item>
//    <item> SFDITEM_REG__SSP1_PERIPH_ID2 </item>
//    <item> SFDITEM_REG__SSP1_PERIPH_ID3 </item>
//    <item> SFDITEM_REG__SSP1_PCELL_ID0 </item>
//    <item> SFDITEM_REG__SSP1_PCELL_ID1 </item>
//    <item> SFDITEM_REG__SSP1_PCELL_ID2 </item>
//    <item> SFDITEM_REG__SSP1_PCELL_ID3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: SSP2_CR0  --------------------------------
// SVD Line: 2274

unsigned int SSP2_CR0 __AT (0x40013000);



// --------------------------------  Field Item: SSP2_CR0_DSS  ------------------------------------
// SVD Line: 2283

//  <item> SFDITEM_FIELD__SSP2_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40013000) Data width setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 0) & 0xF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_FRF  ------------------------------------
// SVD Line: 2290

//  <item> SFDITEM_FIELD__SSP2_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40013000) SSP frame formats setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 4) & 0x3), ((SSP2_CR0 = (SSP2_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SPO  ------------------------------------
// SVD Line: 2297

//  <item> SFDITEM_FIELD__SSP2_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013000) SSP polarity setting </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SPH  ------------------------------------
// SVD Line: 2304

//  <item> SFDITEM_FIELD__SSP2_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013000) SSP phase setting </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR0_SCR  ------------------------------------
// SVD Line: 2311

//  <item> SFDITEM_FIELD__SSP2_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40013000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CR0 >> 8) & 0xFF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CR0  ------------------------------------
// SVD Line: 2274

//  <rtree> SFDITEM_REG__SSP2_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013000) control register 0 </i>
//    <loc> ( (unsigned int)((SSP2_CR0 >> 0) & 0xFFFFFFFF), ((SSP2_CR0 = (SSP2_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CR0_DSS </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_FRF </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SPO </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SPH </item>
//    <item> SFDITEM_FIELD__SSP2_CR0_SCR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_CR1  --------------------------------
// SVD Line: 2320

unsigned int SSP2_CR1 __AT (0x40013004);



// --------------------------------  Field Item: SSP2_CR1_LBM  ------------------------------------
// SVD Line: 2329

//  <item> SFDITEM_FIELD__SSP2_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013004) loopback mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR1_SSE  ------------------------------------
// SVD Line: 2336

//  <item> SFDITEM_FIELD__SSP2_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013004) SSP enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_CR1_MS  ------------------------------------
// SVD Line: 2343

//  <item> SFDITEM_FIELD__SSP2_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013004) Master/slave mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_CR1_SOD  ------------------------------------
// SVD Line: 2350

//  <item> SFDITEM_FIELD__SSP2_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013004) SSP output disable in slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CR1  ------------------------------------
// SVD Line: 2320

//  <rtree> SFDITEM_REG__SSP2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013004) control register 1 </i>
//    <loc> ( (unsigned int)((SSP2_CR1 >> 0) & 0xFFFFFFFF), ((SSP2_CR1 = (SSP2_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CR1_LBM </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_SSE </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_MS </item>
//    <item> SFDITEM_FIELD__SSP2_CR1_SOD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_DR  ---------------------------------
// SVD Line: 2359

unsigned int SSP2_DR __AT (0x40013008);



// --------------------------------  Field Item: SSP2_DR_DATA  ------------------------------------
// SVD Line: 2368

//  <item> SFDITEM_FIELD__SSP2_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013008) SSP TX/RX data </i>
//    <edit> 
//      <loc> ( (unsigned short)((SSP2_DR >> 0) & 0xFFFF), ((SSP2_DR = (SSP2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: SSP2_DR  ------------------------------------
// SVD Line: 2359

//  <rtree> SFDITEM_REG__SSP2_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013008) data register </i>
//    <loc> ( (unsigned int)((SSP2_DR >> 0) & 0xFFFFFFFF), ((SSP2_DR = (SSP2_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_DR_DATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_SR  ---------------------------------
// SVD Line: 2377

unsigned int SSP2_SR __AT (0x4001300C);



// ---------------------------------  Field Item: SSP2_SR_TFE  ------------------------------------
// SVD Line: 2386

//  <item> SFDITEM_FIELD__SSP2_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001300C) TX FIFO empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_TNF  ------------------------------------
// SVD Line: 2393

//  <item> SFDITEM_FIELD__SSP2_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001300C) TX FIFO not full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_RNE  ------------------------------------
// SVD Line: 2400

//  <item> SFDITEM_FIELD__SSP2_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001300C) RX FIFO not empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_RFF  ------------------------------------
// SVD Line: 2407

//  <item> SFDITEM_FIELD__SSP2_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001300C) RX FIFO full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: SSP2_SR_BSY  ------------------------------------
// SVD Line: 2414

//  <item> SFDITEM_FIELD__SSP2_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001300C) SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SSP2_SR  ------------------------------------
// SVD Line: 2377

//  <rtree> SFDITEM_REG__SSP2_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001300C) status register </i>
//    <loc> ( (unsigned int)((SSP2_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_SR_TFE </item>
//    <item> SFDITEM_FIELD__SSP2_SR_TNF </item>
//    <item> SFDITEM_FIELD__SSP2_SR_RNE </item>
//    <item> SFDITEM_FIELD__SSP2_SR_RFF </item>
//    <item> SFDITEM_FIELD__SSP2_SR_BSY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_CPSR  --------------------------------
// SVD Line: 2423

unsigned int SSP2_CPSR __AT (0x40013010);



// ------------------------------  Field Item: SSP2_CPSR_CPSDVSR  ---------------------------------
// SVD Line: 2432

//  <item> SFDITEM_FIELD__SSP2_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40013010) Clock prescaler divider, must be an even number between 2~254 </i>
//    <edit> 
//      <loc> ( (unsigned char)((SSP2_CPSR >> 0) & 0xFF), ((SSP2_CPSR = (SSP2_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_CPSR  -----------------------------------
// SVD Line: 2423

//  <rtree> SFDITEM_REG__SSP2_CPSR
//    <name> CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013010) clock prescale register </i>
//    <loc> ( (unsigned int)((SSP2_CPSR >> 0) & 0xFFFFFFFF), ((SSP2_CPSR = (SSP2_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_CPSR_CPSDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SSP2_IMSC  --------------------------------
// SVD Line: 2441

unsigned int SSP2_IMSC __AT (0x40013014);



// -------------------------------  Field Item: SSP2_IMSC_RORIM  ----------------------------------
// SVD Line: 2450

//  <item> SFDITEM_FIELD__SSP2_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013014) RX overrun interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RTIM  -----------------------------------
// SVD Line: 2457

//  <item> SFDITEM_FIELD__SSP2_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013014) RX timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_RXIM  -----------------------------------
// SVD Line: 2464

//  <item> SFDITEM_FIELD__SSP2_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013014) RX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_IMSC_TXIM  -----------------------------------
// SVD Line: 2471

//  <item> SFDITEM_FIELD__SSP2_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013014) TX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_IMSC  -----------------------------------
// SVD Line: 2441

//  <rtree> SFDITEM_REG__SSP2_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013014) interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((SSP2_IMSC >> 0) & 0xFFFFFFFF), ((SSP2_IMSC = (SSP2_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RORIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__SSP2_IMSC_TXIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_RIS  --------------------------------
// SVD Line: 2480

unsigned int SSP2_RIS __AT (0x40013018);



// -------------------------------  Field Item: SSP2_RIS_RORRIS  ----------------------------------
// SVD Line: 2489

//  <item> SFDITEM_FIELD__SSP2_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40013018) RX overrun raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RTRIS  -----------------------------------
// SVD Line: 2496

//  <item> SFDITEM_FIELD__SSP2_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40013018) RX timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_RXRIS  -----------------------------------
// SVD Line: 2503

//  <item> SFDITEM_FIELD__SSP2_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40013018) RX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_RIS_TXRIS  -----------------------------------
// SVD Line: 2510

//  <item> SFDITEM_FIELD__SSP2_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40013018) TX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_RIS  ------------------------------------
// SVD Line: 2480

//  <rtree> SFDITEM_REG__SSP2_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013018) raw interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_RIS_RORRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__SSP2_RIS_TXRIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_MIS  --------------------------------
// SVD Line: 2519

unsigned int SSP2_MIS __AT (0x4001301C);



// -------------------------------  Field Item: SSP2_MIS_RORMIS  ----------------------------------
// SVD Line: 2528

//  <item> SFDITEM_FIELD__SSP2_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001301C) RX overrun masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RTMIS  -----------------------------------
// SVD Line: 2535

//  <item> SFDITEM_FIELD__SSP2_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001301C) RX timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_RXMIS  -----------------------------------
// SVD Line: 2542

//  <item> SFDITEM_FIELD__SSP2_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001301C) RX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SSP2_MIS_TXMIS  -----------------------------------
// SVD Line: 2549

//  <item> SFDITEM_FIELD__SSP2_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001301C) TX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_MIS  ------------------------------------
// SVD Line: 2519

//  <rtree> SFDITEM_REG__SSP2_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001301C) masked interrupt status register </i>
//    <loc> ( (unsigned int)((SSP2_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_MIS_RORMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__SSP2_MIS_TXMIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SSP2_ICR  --------------------------------
// SVD Line: 2558

unsigned int SSP2_ICR __AT (0x40013020);



// -------------------------------  Field Item: SSP2_ICR_RORIC  -----------------------------------
// SVD Line: 2567

//  <item> SFDITEM_FIELD__SSP2_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40013020) RX overrun interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: SSP2_ICR_RTIC  -----------------------------------
// SVD Line: 2574

//  <item> SFDITEM_FIELD__SSP2_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40013020) RX timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SSP2_ICR  ------------------------------------
// SVD Line: 2558

//  <rtree> SFDITEM_REG__SSP2_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40013020) interrupt clear register </i>
//    <loc> ( (unsigned int)((SSP2_ICR >> 0) & 0xFFFFFFFF), ((SSP2_ICR = (SSP2_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_ICR_RORIC </item>
//    <item> SFDITEM_FIELD__SSP2_ICR_RTIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SSP2_DMA_CR  -------------------------------
// SVD Line: 2583

unsigned int SSP2_DMA_CR __AT (0x40013024);



// -----------------------------  Field Item: SSP2_DMA_CR_RXDMAE  ---------------------------------
// SVD Line: 2592

//  <item> SFDITEM_FIELD__SSP2_DMA_CR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013024) DMA RX enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_DMA_CR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: SSP2_DMA_CR_TXDMAE  ---------------------------------
// SVD Line: 2599

//  <item> SFDITEM_FIELD__SSP2_DMA_CR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013024) DMA TX enable </i>
//    <check> 
//      <loc> ( (unsigned int) SSP2_DMA_CR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SSP2_DMA_CR  ----------------------------------
// SVD Line: 2583

//  <rtree> SFDITEM_REG__SSP2_DMA_CR
//    <name> DMA_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013024) DMA control register </i>
//    <loc> ( (unsigned int)((SSP2_DMA_CR >> 0) & 0xFFFFFFFF), ((SSP2_DMA_CR = (SSP2_DMA_CR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SSP2_DMA_CR_RXDMAE </item>
//    <item> SFDITEM_FIELD__SSP2_DMA_CR_TXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_PERIPH_ID0  -----------------------------
// SVD Line: 2608

unsigned int SSP2_PERIPH_ID0 __AT (0x40013FE0);



// -------------------------  Field Item: SSP2_PERIPH_ID0_PERIPH_ID0  -----------------------------
// SVD Line: 2617

//  <item> SFDITEM_FIELD__SSP2_PERIPH_ID0_PERIPH_ID0
//    <name> PERIPH_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FE0) PERIPH_ID0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PERIPH_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PERIPH_ID0  --------------------------------
// SVD Line: 2608

//  <rtree> SFDITEM_REG__SSP2_PERIPH_ID0
//    <name> PERIPH_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FE0) peripheral identification register 0 </i>
//    <loc> ( (unsigned int)((SSP2_PERIPH_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PERIPH_ID0_PERIPH_ID0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_PERIPH_ID1  -----------------------------
// SVD Line: 2626

unsigned int SSP2_PERIPH_ID1 __AT (0x40013FE4);



// -------------------------  Field Item: SSP2_PERIPH_ID1_PERIPH_ID1  -----------------------------
// SVD Line: 2635

//  <item> SFDITEM_FIELD__SSP2_PERIPH_ID1_PERIPH_ID1
//    <name> PERIPH_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FE4) PERIPH_ID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PERIPH_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PERIPH_ID1  --------------------------------
// SVD Line: 2626

//  <rtree> SFDITEM_REG__SSP2_PERIPH_ID1
//    <name> PERIPH_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FE4) peripheral identification register 1 </i>
//    <loc> ( (unsigned int)((SSP2_PERIPH_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PERIPH_ID1_PERIPH_ID1 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_PERIPH_ID2  -----------------------------
// SVD Line: 2644

unsigned int SSP2_PERIPH_ID2 __AT (0x40013FE8);



// -------------------------  Field Item: SSP2_PERIPH_ID2_PERIPH_ID2  -----------------------------
// SVD Line: 2653

//  <item> SFDITEM_FIELD__SSP2_PERIPH_ID2_PERIPH_ID2
//    <name> PERIPH_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FE8) PERIPH_ID2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PERIPH_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PERIPH_ID2  --------------------------------
// SVD Line: 2644

//  <rtree> SFDITEM_REG__SSP2_PERIPH_ID2
//    <name> PERIPH_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FE8) peripheral identification register 2 </i>
//    <loc> ( (unsigned int)((SSP2_PERIPH_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PERIPH_ID2_PERIPH_ID2 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SSP2_PERIPH_ID3  -----------------------------
// SVD Line: 2662

unsigned int SSP2_PERIPH_ID3 __AT (0x40013FEC);



// -------------------------  Field Item: SSP2_PERIPH_ID3_PERIPH_ID3  -----------------------------
// SVD Line: 2671

//  <item> SFDITEM_FIELD__SSP2_PERIPH_ID3_PERIPH_ID3
//    <name> PERIPH_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FEC) PERIPH_ID3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PERIPH_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PERIPH_ID3  --------------------------------
// SVD Line: 2662

//  <rtree> SFDITEM_REG__SSP2_PERIPH_ID3
//    <name> PERIPH_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FEC) peripheral identification register 3 </i>
//    <loc> ( (unsigned int)((SSP2_PERIPH_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PERIPH_ID3_PERIPH_ID3 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_PCELL_ID0  -----------------------------
// SVD Line: 2680

unsigned int SSP2_PCELL_ID0 __AT (0x40013FF0);



// --------------------------  Field Item: SSP2_PCELL_ID0_PCELL_ID0  ------------------------------
// SVD Line: 2689

//  <item> SFDITEM_FIELD__SSP2_PCELL_ID0_PCELL_ID0
//    <name> PCELL_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FF0) PCELL_ID0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PCELL_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PCELL_ID0  ---------------------------------
// SVD Line: 2680

//  <rtree> SFDITEM_REG__SSP2_PCELL_ID0
//    <name> PCELL_ID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FF0) prime cell identification register 0 </i>
//    <loc> ( (unsigned int)((SSP2_PCELL_ID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PCELL_ID0_PCELL_ID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_PCELL_ID1  -----------------------------
// SVD Line: 2698

unsigned int SSP2_PCELL_ID1 __AT (0x40013FF4);



// --------------------------  Field Item: SSP2_PCELL_ID1_PCELL_ID1  ------------------------------
// SVD Line: 2707

//  <item> SFDITEM_FIELD__SSP2_PCELL_ID1_PCELL_ID1
//    <name> PCELL_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FF4) PCELL_ID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PCELL_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PCELL_ID1  ---------------------------------
// SVD Line: 2698

//  <rtree> SFDITEM_REG__SSP2_PCELL_ID1
//    <name> PCELL_ID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FF4) prime cell identification register 1 </i>
//    <loc> ( (unsigned int)((SSP2_PCELL_ID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PCELL_ID1_PCELL_ID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_PCELL_ID2  -----------------------------
// SVD Line: 2716

unsigned int SSP2_PCELL_ID2 __AT (0x40013FF8);



// --------------------------  Field Item: SSP2_PCELL_ID2_PCELL_ID2  ------------------------------
// SVD Line: 2725

//  <item> SFDITEM_FIELD__SSP2_PCELL_ID2_PCELL_ID2
//    <name> PCELL_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FF8) PCELL_ID2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PCELL_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PCELL_ID2  ---------------------------------
// SVD Line: 2716

//  <rtree> SFDITEM_REG__SSP2_PCELL_ID2
//    <name> PCELL_ID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FF8) prime cell identification register 2 </i>
//    <loc> ( (unsigned int)((SSP2_PCELL_ID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PCELL_ID2_PCELL_ID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SSP2_PCELL_ID3  -----------------------------
// SVD Line: 2734

unsigned int SSP2_PCELL_ID3 __AT (0x40013FFC);



// --------------------------  Field Item: SSP2_PCELL_ID3_PCELL_ID3  ------------------------------
// SVD Line: 2743

//  <item> SFDITEM_FIELD__SSP2_PCELL_ID3_PCELL_ID3
//    <name> PCELL_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FFC) PCELL_ID3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((SSP2_PCELL_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: SSP2_PCELL_ID3  ---------------------------------
// SVD Line: 2734

//  <rtree> SFDITEM_REG__SSP2_PCELL_ID3
//    <name> PCELL_ID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40013FFC) prime cell identification register 3 </i>
//    <loc> ( (unsigned int)((SSP2_PCELL_ID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__SSP2_PCELL_ID3_PCELL_ID3 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SSP2  -------------------------------------
// SVD Line: 2260

//  <view> SSP2
//    <name> SSP2 </name>
//    <item> SFDITEM_REG__SSP2_CR0 </item>
//    <item> SFDITEM_REG__SSP2_CR1 </item>
//    <item> SFDITEM_REG__SSP2_DR </item>
//    <item> SFDITEM_REG__SSP2_SR </item>
//    <item> SFDITEM_REG__SSP2_CPSR </item>
//    <item> SFDITEM_REG__SSP2_IMSC </item>
//    <item> SFDITEM_REG__SSP2_RIS </item>
//    <item> SFDITEM_REG__SSP2_MIS </item>
//    <item> SFDITEM_REG__SSP2_ICR </item>
//    <item> SFDITEM_REG__SSP2_DMA_CR </item>
//    <item> SFDITEM_REG__SSP2_PERIPH_ID0 </item>
//    <item> SFDITEM_REG__SSP2_PERIPH_ID1 </item>
//    <item> SFDITEM_REG__SSP2_PERIPH_ID2 </item>
//    <item> SFDITEM_REG__SSP2_PERIPH_ID3 </item>
//    <item> SFDITEM_REG__SSP2_PCELL_ID0 </item>
//    <item> SFDITEM_REG__SSP2_PCELL_ID1 </item>
//    <item> SFDITEM_REG__SSP2_PCELL_ID2 </item>
//    <item> SFDITEM_REG__SSP2_PCELL_ID3 </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIOA_OER  --------------------------------
// SVD Line: 2768

unsigned int GPIOA_OER __AT (0x4001F000);



// --------------------------------  Field Item: GPIOA_OER_OEN  -----------------------------------
// SVD Line: 2777

//  <item> SFDITEM_FIELD__GPIOA_OER_OEN
//    <name> OEN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F000) Portx Pin[15:0] output enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_OER >> 0) & 0xFFFF), ((GPIOA_OER = (GPIOA_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_OER  -----------------------------------
// SVD Line: 2768

//  <rtree> SFDITEM_REG__GPIOA_OER
//    <name> OER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F000) output enable register </i>
//    <loc> ( (unsigned int)((GPIOA_OER >> 0) & 0xFFFFFFFF), ((GPIOA_OER = (GPIOA_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_OER_OEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOA_OTYPER  ------------------------------
// SVD Line: 2786

unsigned int GPIOA_OTYPER __AT (0x4001F004);



// -----------------------------  Field Item: GPIOA_OTYPER_OTYPE  ---------------------------------
// SVD Line: 2795

//  <item> SFDITEM_FIELD__GPIOA_OTYPER_OTYPE
//    <name> OTYPE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F004) Portx Pin[15:0] output type control </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_OTYPER >> 0) & 0xFFFF), ((GPIOA_OTYPER = (GPIOA_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOA_OTYPER  ----------------------------------
// SVD Line: 2786

//  <rtree> SFDITEM_REG__GPIOA_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F004) output type register </i>
//    <loc> ( (unsigned int)((GPIOA_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOA_OTYPER = (GPIOA_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_OTYPER_OTYPE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_IER  --------------------------------
// SVD Line: 2804

unsigned int GPIOA_IER __AT (0x4001F008);



// --------------------------------  Field Item: GPIOA_IER_IE  ------------------------------------
// SVD Line: 2813

//  <item> SFDITEM_FIELD__GPIOA_IER_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F008) Portx Pin[15:0] input enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_IER >> 0) & 0xFFFF), ((GPIOA_IER = (GPIOA_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_IER  -----------------------------------
// SVD Line: 2804

//  <rtree> SFDITEM_REG__GPIOA_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F008) input enable register </i>
//    <loc> ( (unsigned int)((GPIOA_IER >> 0) & 0xFFFFFFFF), ((GPIOA_IER = (GPIOA_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_IER_IE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_PER  --------------------------------
// SVD Line: 2822

unsigned int GPIOA_PER __AT (0x4001F00C);



// --------------------------------  Field Item: GPIOA_PER_PE  ------------------------------------
// SVD Line: 2831

//  <item> SFDITEM_FIELD__GPIOA_PER_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F00C) Portx Pin[15:0] pull-up/pull-down enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_PER >> 0) & 0xFFFF), ((GPIOA_PER = (GPIOA_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_PER  -----------------------------------
// SVD Line: 2822

//  <rtree> SFDITEM_REG__GPIOA_PER
//    <name> PER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F00C) pull enable register </i>
//    <loc> ( (unsigned int)((GPIOA_PER >> 0) & 0xFFFFFFFF), ((GPIOA_PER = (GPIOA_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_PER_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_PSR  --------------------------------
// SVD Line: 2840

unsigned int GPIOA_PSR __AT (0x4001F010);



// --------------------------------  Field Item: GPIOA_PSR_PS  ------------------------------------
// SVD Line: 2849

//  <item> SFDITEM_FIELD__GPIOA_PSR_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F010) Portx Pin[15:0] pull-up/pull-down selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_PSR >> 0) & 0xFFFF), ((GPIOA_PSR = (GPIOA_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_PSR  -----------------------------------
// SVD Line: 2840

//  <rtree> SFDITEM_REG__GPIOA_PSR
//    <name> PSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F010) pull select register </i>
//    <loc> ( (unsigned int)((GPIOA_PSR >> 0) & 0xFFFFFFFF), ((GPIOA_PSR = (GPIOA_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_PSR_PS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_IDR  --------------------------------
// SVD Line: 2858

unsigned int GPIOA_IDR __AT (0x4001F014);



// --------------------------------  Field Item: GPIOA_IDR_ID  ------------------------------------
// SVD Line: 2867

//  <item> SFDITEM_FIELD__GPIOA_IDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001F014) Portx Pin[15:0] input </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIOA_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_IDR  -----------------------------------
// SVD Line: 2858

//  <rtree> SFDITEM_REG__GPIOA_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001F014) input data register </i>
//    <loc> ( (unsigned int)((GPIOA_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOA_IDR_ID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_ODR  --------------------------------
// SVD Line: 2876

unsigned int GPIOA_ODR __AT (0x4001F018);



// --------------------------------  Field Item: GPIOA_ODR_OD  ------------------------------------
// SVD Line: 2885

//  <item> SFDITEM_FIELD__GPIOA_ODR_OD
//    <name> OD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F018) Portx Pin[15:0] output </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_ODR >> 0) & 0xFFFF), ((GPIOA_ODR = (GPIOA_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_ODR  -----------------------------------
// SVD Line: 2876

//  <rtree> SFDITEM_REG__GPIOA_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F018) output data register </i>
//    <loc> ( (unsigned int)((GPIOA_ODR >> 0) & 0xFFFFFFFF), ((GPIOA_ODR = (GPIOA_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_ODR_OD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_BRR  --------------------------------
// SVD Line: 2894

unsigned int GPIOA_BRR __AT (0x4001F01C);



// --------------------------------  Field Item: GPIOA_BRR_BR  ------------------------------------
// SVD Line: 2903

//  <item> SFDITEM_FIELD__GPIOA_BRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F01C) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_BRR >> 0) & 0x0), ((GPIOA_BRR = (GPIOA_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_BRR  -----------------------------------
// SVD Line: 2894

//  <rtree> SFDITEM_REG__GPIOA_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F01C) bit reset register </i>
//    <loc> ( (unsigned int)((GPIOA_BRR >> 0) & 0xFFFFFFFF), ((GPIOA_BRR = (GPIOA_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_BRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_BSRR  -------------------------------
// SVD Line: 2912

unsigned int GPIOA_BSRR __AT (0x4001F020);



// -------------------------------  Field Item: GPIOA_BSRR_BSR  -----------------------------------
// SVD Line: 2921

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BSR
//    <name> BSR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F020) Portx Pin[15:0] output data set </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_BSRR >> 0) & 0x0), ((GPIOA_BSRR = (GPIOA_BSRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: GPIOA_BSRR_BR  -----------------------------------
// SVD Line: 2928

//  <item> SFDITEM_FIELD__GPIOA_BSRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x4001F020) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_BSRR >> 16) & 0x0), ((GPIOA_BSRR = (GPIOA_BSRR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_BSRR  -----------------------------------
// SVD Line: 2912

//  <rtree> SFDITEM_REG__GPIOA_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F020) bit set-clear register </i>
//    <loc> ( (unsigned int)((GPIOA_BSRR >> 0) & 0xFFFFFFFF), ((GPIOA_BSRR = (GPIOA_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BSR </item>
//    <item> SFDITEM_FIELD__GPIOA_BSRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_DSR  --------------------------------
// SVD Line: 2937

unsigned int GPIOA_DSR __AT (0x4001F024);



// --------------------------------  Field Item: GPIOA_DSR_DS  ------------------------------------
// SVD Line: 2946

//  <item> SFDITEM_FIELD__GPIOA_DSR_DS
//    <name> DS </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F024) DS </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_DSR >> 0) & 0x0), ((GPIOA_DSR = (GPIOA_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_DSR  -----------------------------------
// SVD Line: 2937

//  <rtree> SFDITEM_REG__GPIOA_DSR
//    <name> DSR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F024) drive set register </i>
//    <loc> ( (unsigned int)((GPIOA_DSR >> 0) & 0xFFFFFFFF), ((GPIOA_DSR = (GPIOA_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_DSR_DS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOA_INT_CR  ------------------------------
// SVD Line: 2955

unsigned int GPIOA_INT_CR __AT (0x4001F028);



// ---------------------------  Field Item: GPIOA_INT_CR_POS_INT_EN  ------------------------------
// SVD Line: 2964

//  <item> SFDITEM_FIELD__GPIOA_INT_CR_POS_INT_EN
//    <name> POS_INT_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F028) Portx Pin[15:0] enable interrupt triggered by rising edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_INT_CR >> 0) & 0xFFFF), ((GPIOA_INT_CR = (GPIOA_INT_CR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOA_INT_CR_NEG_INT_EN  ------------------------------
// SVD Line: 2971

//  <item> SFDITEM_FIELD__GPIOA_INT_CR_NEG_INT_EN
//    <name> NEG_INT_EN </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001F028) Portx Pin[15:0] enable interrupt triggered by falling edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_INT_CR >> 16) & 0xFFFF), ((GPIOA_INT_CR = (GPIOA_INT_CR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOA_INT_CR  ----------------------------------
// SVD Line: 2955

//  <rtree> SFDITEM_REG__GPIOA_INT_CR
//    <name> INT_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F028) interrupt control register </i>
//    <loc> ( (unsigned int)((GPIOA_INT_CR >> 0) & 0xFFFFFFFF), ((GPIOA_INT_CR = (GPIOA_INT_CR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_INT_CR_POS_INT_EN </item>
//    <item> SFDITEM_FIELD__GPIOA_INT_CR_NEG_INT_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIOA_FR  --------------------------------
// SVD Line: 2980

unsigned int GPIOA_FR __AT (0x4001F02C);



// -------------------------------  Field Item: GPIOA_FR_POS_F  -----------------------------------
// SVD Line: 2989

//  <item> SFDITEM_FIELD__GPIOA_FR_POS_F
//    <name> POS_F </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F02C) Portx Pin[15:0] interrupt flag (rising edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_FR >> 0) & 0xFFFF), ((GPIOA_FR = (GPIOA_FR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_FR_NEG_F  -----------------------------------
// SVD Line: 2996

//  <item> SFDITEM_FIELD__GPIOA_FR_NEG_F
//    <name> NEG_F </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001F02C) Portx Pin[15:0] interrupt flag (falling edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_FR >> 16) & 0xFFFF), ((GPIOA_FR = (GPIOA_FR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOA_FR  ------------------------------------
// SVD Line: 2980

//  <rtree> SFDITEM_REG__GPIOA_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F02C) interrupt flag register </i>
//    <loc> ( (unsigned int)((GPIOA_FR >> 0) & 0xFFFFFFFF), ((GPIOA_FR = (GPIOA_FR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_FR_POS_F </item>
//    <item> SFDITEM_FIELD__GPIOA_FR_NEG_F </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_WUCR  -------------------------------
// SVD Line: 3005

unsigned int GPIOA_WUCR __AT (0x4001F030);



// ------------------------------  Field Item: GPIOA_WUCR_WU_EN  ----------------------------------
// SVD Line: 3014

//  <item> SFDITEM_FIELD__GPIOA_WUCR_WU_EN
//    <name> WU_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F030) Enable/disable Portx Pin[15:0] to wake-up CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_WUCR >> 0) & 0xFFFF), ((GPIOA_WUCR = (GPIOA_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_WUCR  -----------------------------------
// SVD Line: 3005

//  <rtree> SFDITEM_REG__GPIOA_WUCR
//    <name> WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F030) wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOA_WUCR >> 0) & 0xFFFFFFFF), ((GPIOA_WUCR = (GPIOA_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_WUCR_WU_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOA_WULVL  -------------------------------
// SVD Line: 3023

unsigned int GPIOA_WULVL __AT (0x4001F034);



// -----------------------------  Field Item: GPIOA_WULVL_WU_LVL  ---------------------------------
// SVD Line: 3032

//  <item> SFDITEM_FIELD__GPIOA_WULVL_WU_LVL
//    <name> WU_LVL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F034) Configure the Portx Pin[15:0] to wakeup CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOA_WULVL >> 0) & 0xFFFF), ((GPIOA_WULVL = (GPIOA_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_WULVL  ----------------------------------
// SVD Line: 3023

//  <rtree> SFDITEM_REG__GPIOA_WULVL
//    <name> WULVL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F034) wakeup level register </i>
//    <loc> ( (unsigned int)((GPIOA_WULVL >> 0) & 0xFFFFFFFF), ((GPIOA_WULVL = (GPIOA_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_WULVL_WU_LVL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_AFRL  -------------------------------
// SVD Line: 3041

unsigned int GPIOA_AFRL __AT (0x4001F038);



// -------------------------------  Field Item: GPIOA_AFRL_AF0  -----------------------------------
// SVD Line: 3050

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF0
//    <name> AF0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001F038) Portx Pin0 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 0) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF1  -----------------------------------
// SVD Line: 3057

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001F038) Portx Pin1 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 4) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF2  -----------------------------------
// SVD Line: 3064

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF2
//    <name> AF2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001F038) Portx Pin2 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 8) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF3  -----------------------------------
// SVD Line: 3071

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF3
//    <name> AF3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001F038) Portx Pin3 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 12) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF4  -----------------------------------
// SVD Line: 3078

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF4
//    <name> AF4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001F038) Portx Pin4 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 16) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF5  -----------------------------------
// SVD Line: 3085

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF5
//    <name> AF5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001F038) Portx Pin5 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 20) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF6  -----------------------------------
// SVD Line: 3092

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF6
//    <name> AF6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001F038) Portx Pin6 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 24) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRL_AF7  -----------------------------------
// SVD Line: 3099

//  <item> SFDITEM_FIELD__GPIOA_AFRL_AF7
//    <name> AF7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001F038) Portx Pin7 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRL >> 28) & 0xF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_AFRL  -----------------------------------
// SVD Line: 3041

//  <rtree> SFDITEM_REG__GPIOA_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F038) alternate function low register </i>
//    <loc> ( (unsigned int)((GPIOA_AFRL >> 0) & 0xFFFFFFFF), ((GPIOA_AFRL = (GPIOA_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF0 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF1 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF2 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF3 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF4 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF5 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF6 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRL_AF7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOA_AFRH  -------------------------------
// SVD Line: 3108

unsigned int GPIOA_AFRH __AT (0x4001F03C);



// -------------------------------  Field Item: GPIOA_AFRH_AF8  -----------------------------------
// SVD Line: 3117

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF8
//    <name> AF8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001F03C) Portx Pin8 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 0) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF9  -----------------------------------
// SVD Line: 3124

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF9
//    <name> AF9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001F03C) Portx Pin9 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 4) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF10  ----------------------------------
// SVD Line: 3131

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF10
//    <name> AF10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001F03C) Portx Pin10 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 8) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF11  ----------------------------------
// SVD Line: 3138

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF11
//    <name> AF11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001F03C) Portx Pin11 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 12) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF12  ----------------------------------
// SVD Line: 3145

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF12
//    <name> AF12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001F03C) Portx Pin12 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 16) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF13  ----------------------------------
// SVD Line: 3152

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF13
//    <name> AF13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001F03C) Portx Pin13 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 20) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF14  ----------------------------------
// SVD Line: 3159

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF14
//    <name> AF14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001F03C) Portx Pin14 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 24) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOA_AFRH_AF15  ----------------------------------
// SVD Line: 3166

//  <item> SFDITEM_FIELD__GPIOA_AFRH_AF15
//    <name> AF15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001F03C) Portx Pin15 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_AFRH >> 28) & 0xF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOA_AFRH  -----------------------------------
// SVD Line: 3108

//  <rtree> SFDITEM_REG__GPIOA_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F03C) alternate function high register </i>
//    <loc> ( (unsigned int)((GPIOA_AFRH >> 0) & 0xFFFFFFFF), ((GPIOA_AFRH = (GPIOA_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF8 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF9 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF10 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF11 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF12 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF13 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF14 </item>
//    <item> SFDITEM_FIELD__GPIOA_AFRH_AF15 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIOA_STOP3_WUCR  ----------------------------
// SVD Line: 3175

unsigned int GPIOA_STOP3_WUCR __AT (0x4001F040);



// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_SEL_G0  --------------------------
// SVD Line: 3184

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G0
//    <name> STOP3_WU_SEL_G0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001F040) PortA Pin Group0 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_STOP3_WUCR >> 0) & 0x3), ((GPIOA_STOP3_WUCR = (GPIOA_STOP3_WUCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_LVL_G0  --------------------------
// SVD Line: 3191

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G0
//    <name> STOP3_WU_LVL_G0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001F040) PortA Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.2..2> STOP3_WU_LVL_G0
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_EN_G0  --------------------------
// SVD Line: 3198

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G0
//    <name> STOP3_WU_EN_G0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001F040) PortA Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.3..3> STOP3_WU_EN_G0
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_SEL_G1  --------------------------
// SVD Line: 3205

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G1
//    <name> STOP3_WU_SEL_G1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4001F040) PortA Pin Group1 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_STOP3_WUCR >> 4) & 0x3), ((GPIOA_STOP3_WUCR = (GPIOA_STOP3_WUCR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_LVL_G1  --------------------------
// SVD Line: 3212

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G1
//    <name> STOP3_WU_LVL_G1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001F040) PortA Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.6..6> STOP3_WU_LVL_G1
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_EN_G1  --------------------------
// SVD Line: 3219

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G1
//    <name> STOP3_WU_EN_G1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001F040) PortA Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.7..7> STOP3_WU_EN_G1
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_SEL_G2  --------------------------
// SVD Line: 3226

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G2
//    <name> STOP3_WU_SEL_G2 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001F040) PortA Pin Group2 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_STOP3_WUCR >> 8) & 0x3), ((GPIOA_STOP3_WUCR = (GPIOA_STOP3_WUCR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_LVL_G2  --------------------------
// SVD Line: 3233

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G2
//    <name> STOP3_WU_LVL_G2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001F040) PortA Group2 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.10..10> STOP3_WU_LVL_G2
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_EN_G2  --------------------------
// SVD Line: 3240

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G2
//    <name> STOP3_WU_EN_G2 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001F040) PortA Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.11..11> STOP3_WU_EN_G2
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_SEL_G3  --------------------------
// SVD Line: 3247

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G3
//    <name> STOP3_WU_SEL_G3 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4001F040) PortA Pin Group3 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOA_STOP3_WUCR >> 12) & 0x3), ((GPIOA_STOP3_WUCR = (GPIOA_STOP3_WUCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_LVL_G3  --------------------------
// SVD Line: 3254

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G3
//    <name> STOP3_WU_LVL_G3 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001F040) PortA Group2 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.14..14> STOP3_WU_LVL_G3
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOA_STOP3_WUCR_STOP3_WU_EN_G3  --------------------------
// SVD Line: 3261

//  <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G3
//    <name> STOP3_WU_EN_G3 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001F040) PortA Group3 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOA_STOP3_WUCR ) </loc>
//      <o.15..15> STOP3_WU_EN_G3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: GPIOA_STOP3_WUCR  --------------------------------
// SVD Line: 3175

//  <rtree> SFDITEM_REG__GPIOA_STOP3_WUCR
//    <name> STOP3_WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F040) stop3 wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOA_STOP3_WUCR >> 0) & 0xFFFFFFFF), ((GPIOA_STOP3_WUCR = (GPIOA_STOP3_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G0 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G1 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G2 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G2 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G2 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_SEL_G3 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_LVL_G3 </item>
//    <item> SFDITEM_FIELD__GPIOA_STOP3_WUCR_STOP3_WU_EN_G3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOA  -------------------------------------
// SVD Line: 2754

//  <view> GPIOA
//    <name> GPIOA </name>
//    <item> SFDITEM_REG__GPIOA_OER </item>
//    <item> SFDITEM_REG__GPIOA_OTYPER </item>
//    <item> SFDITEM_REG__GPIOA_IER </item>
//    <item> SFDITEM_REG__GPIOA_PER </item>
//    <item> SFDITEM_REG__GPIOA_PSR </item>
//    <item> SFDITEM_REG__GPIOA_IDR </item>
//    <item> SFDITEM_REG__GPIOA_ODR </item>
//    <item> SFDITEM_REG__GPIOA_BRR </item>
//    <item> SFDITEM_REG__GPIOA_BSRR </item>
//    <item> SFDITEM_REG__GPIOA_DSR </item>
//    <item> SFDITEM_REG__GPIOA_INT_CR </item>
//    <item> SFDITEM_REG__GPIOA_FR </item>
//    <item> SFDITEM_REG__GPIOA_WUCR </item>
//    <item> SFDITEM_REG__GPIOA_WULVL </item>
//    <item> SFDITEM_REG__GPIOA_AFRL </item>
//    <item> SFDITEM_REG__GPIOA_AFRH </item>
//    <item> SFDITEM_REG__GPIOA_STOP3_WUCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIOB_OER  --------------------------------
// SVD Line: 3286

unsigned int GPIOB_OER __AT (0x4001F400);



// --------------------------------  Field Item: GPIOB_OER_OEN  -----------------------------------
// SVD Line: 3295

//  <item> SFDITEM_FIELD__GPIOB_OER_OEN
//    <name> OEN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F400) Portx Pin[15:0] output enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_OER >> 0) & 0xFFFF), ((GPIOB_OER = (GPIOB_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_OER  -----------------------------------
// SVD Line: 3286

//  <rtree> SFDITEM_REG__GPIOB_OER
//    <name> OER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F400) output enable register </i>
//    <loc> ( (unsigned int)((GPIOB_OER >> 0) & 0xFFFFFFFF), ((GPIOB_OER = (GPIOB_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_OER_OEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOB_OTYPER  ------------------------------
// SVD Line: 3304

unsigned int GPIOB_OTYPER __AT (0x4001F404);



// -----------------------------  Field Item: GPIOB_OTYPER_OTYPE  ---------------------------------
// SVD Line: 3313

//  <item> SFDITEM_FIELD__GPIOB_OTYPER_OTYPE
//    <name> OTYPE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F404) Portx Pin[15:0] output type control </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_OTYPER >> 0) & 0xFFFF), ((GPIOB_OTYPER = (GPIOB_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOB_OTYPER  ----------------------------------
// SVD Line: 3304

//  <rtree> SFDITEM_REG__GPIOB_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F404) output type register </i>
//    <loc> ( (unsigned int)((GPIOB_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOB_OTYPER = (GPIOB_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_OTYPER_OTYPE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_IER  --------------------------------
// SVD Line: 3322

unsigned int GPIOB_IER __AT (0x4001F408);



// --------------------------------  Field Item: GPIOB_IER_IE  ------------------------------------
// SVD Line: 3331

//  <item> SFDITEM_FIELD__GPIOB_IER_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F408) Portx Pin[15:0] input enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_IER >> 0) & 0xFFFF), ((GPIOB_IER = (GPIOB_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_IER  -----------------------------------
// SVD Line: 3322

//  <rtree> SFDITEM_REG__GPIOB_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F408) input enable register </i>
//    <loc> ( (unsigned int)((GPIOB_IER >> 0) & 0xFFFFFFFF), ((GPIOB_IER = (GPIOB_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_IER_IE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_PER  --------------------------------
// SVD Line: 3340

unsigned int GPIOB_PER __AT (0x4001F40C);



// --------------------------------  Field Item: GPIOB_PER_PE  ------------------------------------
// SVD Line: 3349

//  <item> SFDITEM_FIELD__GPIOB_PER_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F40C) Portx Pin[15:0] pull-up/pull-down enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_PER >> 0) & 0xFFFF), ((GPIOB_PER = (GPIOB_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_PER  -----------------------------------
// SVD Line: 3340

//  <rtree> SFDITEM_REG__GPIOB_PER
//    <name> PER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F40C) pull enable register </i>
//    <loc> ( (unsigned int)((GPIOB_PER >> 0) & 0xFFFFFFFF), ((GPIOB_PER = (GPIOB_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_PER_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_PSR  --------------------------------
// SVD Line: 3358

unsigned int GPIOB_PSR __AT (0x4001F410);



// --------------------------------  Field Item: GPIOB_PSR_PS  ------------------------------------
// SVD Line: 3367

//  <item> SFDITEM_FIELD__GPIOB_PSR_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F410) Portx Pin[15:0] pull-up/pull-down selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_PSR >> 0) & 0xFFFF), ((GPIOB_PSR = (GPIOB_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_PSR  -----------------------------------
// SVD Line: 3358

//  <rtree> SFDITEM_REG__GPIOB_PSR
//    <name> PSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F410) pull select register </i>
//    <loc> ( (unsigned int)((GPIOB_PSR >> 0) & 0xFFFFFFFF), ((GPIOB_PSR = (GPIOB_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_PSR_PS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_IDR  --------------------------------
// SVD Line: 3376

unsigned int GPIOB_IDR __AT (0x4001F414);



// --------------------------------  Field Item: GPIOB_IDR_ID  ------------------------------------
// SVD Line: 3385

//  <item> SFDITEM_FIELD__GPIOB_IDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001F414) Portx Pin[15:0] input </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIOB_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_IDR  -----------------------------------
// SVD Line: 3376

//  <rtree> SFDITEM_REG__GPIOB_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001F414) input data register </i>
//    <loc> ( (unsigned int)((GPIOB_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOB_IDR_ID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_ODR  --------------------------------
// SVD Line: 3394

unsigned int GPIOB_ODR __AT (0x4001F418);



// --------------------------------  Field Item: GPIOB_ODR_OD  ------------------------------------
// SVD Line: 3403

//  <item> SFDITEM_FIELD__GPIOB_ODR_OD
//    <name> OD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F418) Portx Pin[15:0] output </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_ODR >> 0) & 0xFFFF), ((GPIOB_ODR = (GPIOB_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_ODR  -----------------------------------
// SVD Line: 3394

//  <rtree> SFDITEM_REG__GPIOB_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F418) output data register </i>
//    <loc> ( (unsigned int)((GPIOB_ODR >> 0) & 0xFFFFFFFF), ((GPIOB_ODR = (GPIOB_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_ODR_OD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_BRR  --------------------------------
// SVD Line: 3412

unsigned int GPIOB_BRR __AT (0x4001F41C);



// --------------------------------  Field Item: GPIOB_BRR_BR  ------------------------------------
// SVD Line: 3421

//  <item> SFDITEM_FIELD__GPIOB_BRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F41C) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_BRR >> 0) & 0x0), ((GPIOB_BRR = (GPIOB_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_BRR  -----------------------------------
// SVD Line: 3412

//  <rtree> SFDITEM_REG__GPIOB_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F41C) bit reset register </i>
//    <loc> ( (unsigned int)((GPIOB_BRR >> 0) & 0xFFFFFFFF), ((GPIOB_BRR = (GPIOB_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_BRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_BSRR  -------------------------------
// SVD Line: 3430

unsigned int GPIOB_BSRR __AT (0x4001F420);



// -------------------------------  Field Item: GPIOB_BSRR_BSR  -----------------------------------
// SVD Line: 3439

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BSR
//    <name> BSR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F420) Portx Pin[15:0] output data set </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_BSRR >> 0) & 0x0), ((GPIOB_BSRR = (GPIOB_BSRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: GPIOB_BSRR_BR  -----------------------------------
// SVD Line: 3446

//  <item> SFDITEM_FIELD__GPIOB_BSRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x4001F420) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_BSRR >> 16) & 0x0), ((GPIOB_BSRR = (GPIOB_BSRR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_BSRR  -----------------------------------
// SVD Line: 3430

//  <rtree> SFDITEM_REG__GPIOB_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F420) bit set-clear register </i>
//    <loc> ( (unsigned int)((GPIOB_BSRR >> 0) & 0xFFFFFFFF), ((GPIOB_BSRR = (GPIOB_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BSR </item>
//    <item> SFDITEM_FIELD__GPIOB_BSRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_DSR  --------------------------------
// SVD Line: 3455

unsigned int GPIOB_DSR __AT (0x4001F424);



// --------------------------------  Field Item: GPIOB_DSR_DS  ------------------------------------
// SVD Line: 3464

//  <item> SFDITEM_FIELD__GPIOB_DSR_DS
//    <name> DS </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F424) DS </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_DSR >> 0) & 0x0), ((GPIOB_DSR = (GPIOB_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_DSR  -----------------------------------
// SVD Line: 3455

//  <rtree> SFDITEM_REG__GPIOB_DSR
//    <name> DSR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F424) drive set register </i>
//    <loc> ( (unsigned int)((GPIOB_DSR >> 0) & 0xFFFFFFFF), ((GPIOB_DSR = (GPIOB_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_DSR_DS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOB_INT_CR  ------------------------------
// SVD Line: 3473

unsigned int GPIOB_INT_CR __AT (0x4001F428);



// ---------------------------  Field Item: GPIOB_INT_CR_POS_INT_EN  ------------------------------
// SVD Line: 3482

//  <item> SFDITEM_FIELD__GPIOB_INT_CR_POS_INT_EN
//    <name> POS_INT_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F428) Portx Pin[15:0] enable interrupt triggered by rising edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_INT_CR >> 0) & 0xFFFF), ((GPIOB_INT_CR = (GPIOB_INT_CR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOB_INT_CR_NEG_INT_EN  ------------------------------
// SVD Line: 3489

//  <item> SFDITEM_FIELD__GPIOB_INT_CR_NEG_INT_EN
//    <name> NEG_INT_EN </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001F428) Portx Pin[15:0] enable interrupt triggered by falling edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_INT_CR >> 16) & 0xFFFF), ((GPIOB_INT_CR = (GPIOB_INT_CR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOB_INT_CR  ----------------------------------
// SVD Line: 3473

//  <rtree> SFDITEM_REG__GPIOB_INT_CR
//    <name> INT_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F428) interrupt control register </i>
//    <loc> ( (unsigned int)((GPIOB_INT_CR >> 0) & 0xFFFFFFFF), ((GPIOB_INT_CR = (GPIOB_INT_CR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_INT_CR_POS_INT_EN </item>
//    <item> SFDITEM_FIELD__GPIOB_INT_CR_NEG_INT_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIOB_FR  --------------------------------
// SVD Line: 3498

unsigned int GPIOB_FR __AT (0x4001F42C);



// -------------------------------  Field Item: GPIOB_FR_POS_F  -----------------------------------
// SVD Line: 3507

//  <item> SFDITEM_FIELD__GPIOB_FR_POS_F
//    <name> POS_F </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F42C) Portx Pin[15:0] interrupt flag (rising edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_FR >> 0) & 0xFFFF), ((GPIOB_FR = (GPIOB_FR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_FR_NEG_F  -----------------------------------
// SVD Line: 3514

//  <item> SFDITEM_FIELD__GPIOB_FR_NEG_F
//    <name> NEG_F </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001F42C) Portx Pin[15:0] interrupt flag (falling edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_FR >> 16) & 0xFFFF), ((GPIOB_FR = (GPIOB_FR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOB_FR  ------------------------------------
// SVD Line: 3498

//  <rtree> SFDITEM_REG__GPIOB_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F42C) interrupt flag register </i>
//    <loc> ( (unsigned int)((GPIOB_FR >> 0) & 0xFFFFFFFF), ((GPIOB_FR = (GPIOB_FR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_FR_POS_F </item>
//    <item> SFDITEM_FIELD__GPIOB_FR_NEG_F </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_WUCR  -------------------------------
// SVD Line: 3523

unsigned int GPIOB_WUCR __AT (0x4001F430);



// ------------------------------  Field Item: GPIOB_WUCR_WU_EN  ----------------------------------
// SVD Line: 3532

//  <item> SFDITEM_FIELD__GPIOB_WUCR_WU_EN
//    <name> WU_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F430) Enable/disable Portx Pin[15:0] to wake-up CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_WUCR >> 0) & 0xFFFF), ((GPIOB_WUCR = (GPIOB_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_WUCR  -----------------------------------
// SVD Line: 3523

//  <rtree> SFDITEM_REG__GPIOB_WUCR
//    <name> WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F430) wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOB_WUCR >> 0) & 0xFFFFFFFF), ((GPIOB_WUCR = (GPIOB_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_WUCR_WU_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOB_WULVL  -------------------------------
// SVD Line: 3541

unsigned int GPIOB_WULVL __AT (0x4001F434);



// -----------------------------  Field Item: GPIOB_WULVL_WU_LVL  ---------------------------------
// SVD Line: 3550

//  <item> SFDITEM_FIELD__GPIOB_WULVL_WU_LVL
//    <name> WU_LVL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F434) Configure the Portx Pin[15:0] to wakeup CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOB_WULVL >> 0) & 0xFFFF), ((GPIOB_WULVL = (GPIOB_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_WULVL  ----------------------------------
// SVD Line: 3541

//  <rtree> SFDITEM_REG__GPIOB_WULVL
//    <name> WULVL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F434) wakeup level register </i>
//    <loc> ( (unsigned int)((GPIOB_WULVL >> 0) & 0xFFFFFFFF), ((GPIOB_WULVL = (GPIOB_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_WULVL_WU_LVL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_AFRL  -------------------------------
// SVD Line: 3559

unsigned int GPIOB_AFRL __AT (0x4001F438);



// -------------------------------  Field Item: GPIOB_AFRL_AF0  -----------------------------------
// SVD Line: 3568

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF0
//    <name> AF0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001F438) Portx Pin0 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 0) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF1  -----------------------------------
// SVD Line: 3575

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001F438) Portx Pin1 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 4) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF2  -----------------------------------
// SVD Line: 3582

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF2
//    <name> AF2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001F438) Portx Pin2 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 8) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF3  -----------------------------------
// SVD Line: 3589

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF3
//    <name> AF3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001F438) Portx Pin3 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 12) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF4  -----------------------------------
// SVD Line: 3596

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF4
//    <name> AF4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001F438) Portx Pin4 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 16) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF5  -----------------------------------
// SVD Line: 3603

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF5
//    <name> AF5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001F438) Portx Pin5 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 20) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF6  -----------------------------------
// SVD Line: 3610

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF6
//    <name> AF6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001F438) Portx Pin6 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 24) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRL_AF7  -----------------------------------
// SVD Line: 3617

//  <item> SFDITEM_FIELD__GPIOB_AFRL_AF7
//    <name> AF7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001F438) Portx Pin7 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRL >> 28) & 0xF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_AFRL  -----------------------------------
// SVD Line: 3559

//  <rtree> SFDITEM_REG__GPIOB_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F438) alternate function low register </i>
//    <loc> ( (unsigned int)((GPIOB_AFRL >> 0) & 0xFFFFFFFF), ((GPIOB_AFRL = (GPIOB_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF0 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF1 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF2 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF3 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF4 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF5 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF6 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRL_AF7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOB_AFRH  -------------------------------
// SVD Line: 3626

unsigned int GPIOB_AFRH __AT (0x4001F43C);



// -------------------------------  Field Item: GPIOB_AFRH_AF8  -----------------------------------
// SVD Line: 3635

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF8
//    <name> AF8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001F43C) Portx Pin8 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 0) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF9  -----------------------------------
// SVD Line: 3642

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF9
//    <name> AF9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001F43C) Portx Pin9 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 4) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF10  ----------------------------------
// SVD Line: 3649

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF10
//    <name> AF10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001F43C) Portx Pin10 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 8) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF11  ----------------------------------
// SVD Line: 3656

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF11
//    <name> AF11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001F43C) Portx Pin11 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 12) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF12  ----------------------------------
// SVD Line: 3663

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF12
//    <name> AF12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001F43C) Portx Pin12 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 16) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF13  ----------------------------------
// SVD Line: 3670

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF13
//    <name> AF13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001F43C) Portx Pin13 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 20) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF14  ----------------------------------
// SVD Line: 3677

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF14
//    <name> AF14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001F43C) Portx Pin14 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 24) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOB_AFRH_AF15  ----------------------------------
// SVD Line: 3684

//  <item> SFDITEM_FIELD__GPIOB_AFRH_AF15
//    <name> AF15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001F43C) Portx Pin15 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_AFRH >> 28) & 0xF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOB_AFRH  -----------------------------------
// SVD Line: 3626

//  <rtree> SFDITEM_REG__GPIOB_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F43C) alternate function high register </i>
//    <loc> ( (unsigned int)((GPIOB_AFRH >> 0) & 0xFFFFFFFF), ((GPIOB_AFRH = (GPIOB_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF8 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF9 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF10 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF11 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF12 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF13 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF14 </item>
//    <item> SFDITEM_FIELD__GPIOB_AFRH_AF15 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIOB_STOP3_WUCR  ----------------------------
// SVD Line: 3693

unsigned int GPIOB_STOP3_WUCR __AT (0x4001F440);



// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_SEL_G0  --------------------------
// SVD Line: 3702

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G0
//    <name> STOP3_WU_SEL_G0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001F440) PortB Pin Group0 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_STOP3_WUCR >> 0) & 0x3), ((GPIOB_STOP3_WUCR = (GPIOB_STOP3_WUCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_LVL_G0  --------------------------
// SVD Line: 3709

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G0
//    <name> STOP3_WU_LVL_G0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001F440) PortB Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.2..2> STOP3_WU_LVL_G0
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_EN_G0  --------------------------
// SVD Line: 3716

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G0
//    <name> STOP3_WU_EN_G0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001F440) PortB Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.3..3> STOP3_WU_EN_G0
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_SEL_G1  --------------------------
// SVD Line: 3723

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G1
//    <name> STOP3_WU_SEL_G1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4001F440) PortB Pin Group1 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_STOP3_WUCR >> 4) & 0x3), ((GPIOB_STOP3_WUCR = (GPIOB_STOP3_WUCR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_LVL_G1  --------------------------
// SVD Line: 3730

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G1
//    <name> STOP3_WU_LVL_G1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001F440) PortB Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.6..6> STOP3_WU_LVL_G1
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_EN_G1  --------------------------
// SVD Line: 3737

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G1
//    <name> STOP3_WU_EN_G1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001F440) PortB Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.7..7> STOP3_WU_EN_G1
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_SEL_G2  --------------------------
// SVD Line: 3744

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G2
//    <name> STOP3_WU_SEL_G2 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001F440) PortB Pin Group2 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_STOP3_WUCR >> 8) & 0x3), ((GPIOB_STOP3_WUCR = (GPIOB_STOP3_WUCR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_LVL_G2  --------------------------
// SVD Line: 3751

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G2
//    <name> STOP3_WU_LVL_G2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001F440) PortB Group2 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.10..10> STOP3_WU_LVL_G2
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_EN_G2  --------------------------
// SVD Line: 3758

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G2
//    <name> STOP3_WU_EN_G2 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001F440) PortB Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.11..11> STOP3_WU_EN_G2
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_SEL_G3  --------------------------
// SVD Line: 3765

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G3
//    <name> STOP3_WU_SEL_G3 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4001F440) PortB Pin Group3 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOB_STOP3_WUCR >> 12) & 0x3), ((GPIOB_STOP3_WUCR = (GPIOB_STOP3_WUCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_LVL_G3  --------------------------
// SVD Line: 3772

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G3
//    <name> STOP3_WU_LVL_G3 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001F440) PortB Group2 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.14..14> STOP3_WU_LVL_G3
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOB_STOP3_WUCR_STOP3_WU_EN_G3  --------------------------
// SVD Line: 3779

//  <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G3
//    <name> STOP3_WU_EN_G3 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001F440) PortB Group3 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOB_STOP3_WUCR ) </loc>
//      <o.15..15> STOP3_WU_EN_G3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: GPIOB_STOP3_WUCR  --------------------------------
// SVD Line: 3693

//  <rtree> SFDITEM_REG__GPIOB_STOP3_WUCR
//    <name> STOP3_WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F440) stop3 wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOB_STOP3_WUCR >> 0) & 0xFFFFFFFF), ((GPIOB_STOP3_WUCR = (GPIOB_STOP3_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G0 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G1 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G2 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G2 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G2 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_SEL_G3 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_LVL_G3 </item>
//    <item> SFDITEM_FIELD__GPIOB_STOP3_WUCR_STOP3_WU_EN_G3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOB  -------------------------------------
// SVD Line: 3272

//  <view> GPIOB
//    <name> GPIOB </name>
//    <item> SFDITEM_REG__GPIOB_OER </item>
//    <item> SFDITEM_REG__GPIOB_OTYPER </item>
//    <item> SFDITEM_REG__GPIOB_IER </item>
//    <item> SFDITEM_REG__GPIOB_PER </item>
//    <item> SFDITEM_REG__GPIOB_PSR </item>
//    <item> SFDITEM_REG__GPIOB_IDR </item>
//    <item> SFDITEM_REG__GPIOB_ODR </item>
//    <item> SFDITEM_REG__GPIOB_BRR </item>
//    <item> SFDITEM_REG__GPIOB_BSRR </item>
//    <item> SFDITEM_REG__GPIOB_DSR </item>
//    <item> SFDITEM_REG__GPIOB_INT_CR </item>
//    <item> SFDITEM_REG__GPIOB_FR </item>
//    <item> SFDITEM_REG__GPIOB_WUCR </item>
//    <item> SFDITEM_REG__GPIOB_WULVL </item>
//    <item> SFDITEM_REG__GPIOB_AFRL </item>
//    <item> SFDITEM_REG__GPIOB_AFRH </item>
//    <item> SFDITEM_REG__GPIOB_STOP3_WUCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIOC_OER  --------------------------------
// SVD Line: 3804

unsigned int GPIOC_OER __AT (0x4001F800);



// --------------------------------  Field Item: GPIOC_OER_OEN  -----------------------------------
// SVD Line: 3813

//  <item> SFDITEM_FIELD__GPIOC_OER_OEN
//    <name> OEN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F800) Portx Pin[15:0] output enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_OER >> 0) & 0xFFFF), ((GPIOC_OER = (GPIOC_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_OER  -----------------------------------
// SVD Line: 3804

//  <rtree> SFDITEM_REG__GPIOC_OER
//    <name> OER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F800) output enable register </i>
//    <loc> ( (unsigned int)((GPIOC_OER >> 0) & 0xFFFFFFFF), ((GPIOC_OER = (GPIOC_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_OER_OEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOC_OTYPER  ------------------------------
// SVD Line: 3822

unsigned int GPIOC_OTYPER __AT (0x4001F804);



// -----------------------------  Field Item: GPIOC_OTYPER_OTYPE  ---------------------------------
// SVD Line: 3831

//  <item> SFDITEM_FIELD__GPIOC_OTYPER_OTYPE
//    <name> OTYPE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F804) Portx Pin[15:0] output type control </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_OTYPER >> 0) & 0xFFFF), ((GPIOC_OTYPER = (GPIOC_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOC_OTYPER  ----------------------------------
// SVD Line: 3822

//  <rtree> SFDITEM_REG__GPIOC_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F804) output type register </i>
//    <loc> ( (unsigned int)((GPIOC_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOC_OTYPER = (GPIOC_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_OTYPER_OTYPE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_IER  --------------------------------
// SVD Line: 3840

unsigned int GPIOC_IER __AT (0x4001F808);



// --------------------------------  Field Item: GPIOC_IER_IE  ------------------------------------
// SVD Line: 3849

//  <item> SFDITEM_FIELD__GPIOC_IER_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F808) Portx Pin[15:0] input enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_IER >> 0) & 0xFFFF), ((GPIOC_IER = (GPIOC_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_IER  -----------------------------------
// SVD Line: 3840

//  <rtree> SFDITEM_REG__GPIOC_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F808) input enable register </i>
//    <loc> ( (unsigned int)((GPIOC_IER >> 0) & 0xFFFFFFFF), ((GPIOC_IER = (GPIOC_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_IER_IE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_PER  --------------------------------
// SVD Line: 3858

unsigned int GPIOC_PER __AT (0x4001F80C);



// --------------------------------  Field Item: GPIOC_PER_PE  ------------------------------------
// SVD Line: 3867

//  <item> SFDITEM_FIELD__GPIOC_PER_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F80C) Portx Pin[15:0] pull-up/pull-down enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_PER >> 0) & 0xFFFF), ((GPIOC_PER = (GPIOC_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_PER  -----------------------------------
// SVD Line: 3858

//  <rtree> SFDITEM_REG__GPIOC_PER
//    <name> PER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F80C) pull enable register </i>
//    <loc> ( (unsigned int)((GPIOC_PER >> 0) & 0xFFFFFFFF), ((GPIOC_PER = (GPIOC_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_PER_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_PSR  --------------------------------
// SVD Line: 3876

unsigned int GPIOC_PSR __AT (0x4001F810);



// --------------------------------  Field Item: GPIOC_PSR_PS  ------------------------------------
// SVD Line: 3885

//  <item> SFDITEM_FIELD__GPIOC_PSR_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F810) Portx Pin[15:0] pull-up/pull-down selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_PSR >> 0) & 0xFFFF), ((GPIOC_PSR = (GPIOC_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_PSR  -----------------------------------
// SVD Line: 3876

//  <rtree> SFDITEM_REG__GPIOC_PSR
//    <name> PSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F810) pull select register </i>
//    <loc> ( (unsigned int)((GPIOC_PSR >> 0) & 0xFFFFFFFF), ((GPIOC_PSR = (GPIOC_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_PSR_PS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_IDR  --------------------------------
// SVD Line: 3894

unsigned int GPIOC_IDR __AT (0x4001F814);



// --------------------------------  Field Item: GPIOC_IDR_ID  ------------------------------------
// SVD Line: 3903

//  <item> SFDITEM_FIELD__GPIOC_IDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001F814) Portx Pin[15:0] input </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIOC_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_IDR  -----------------------------------
// SVD Line: 3894

//  <rtree> SFDITEM_REG__GPIOC_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001F814) input data register </i>
//    <loc> ( (unsigned int)((GPIOC_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOC_IDR_ID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_ODR  --------------------------------
// SVD Line: 3912

unsigned int GPIOC_ODR __AT (0x4001F818);



// --------------------------------  Field Item: GPIOC_ODR_OD  ------------------------------------
// SVD Line: 3921

//  <item> SFDITEM_FIELD__GPIOC_ODR_OD
//    <name> OD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F818) Portx Pin[15:0] output </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_ODR >> 0) & 0xFFFF), ((GPIOC_ODR = (GPIOC_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_ODR  -----------------------------------
// SVD Line: 3912

//  <rtree> SFDITEM_REG__GPIOC_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F818) output data register </i>
//    <loc> ( (unsigned int)((GPIOC_ODR >> 0) & 0xFFFFFFFF), ((GPIOC_ODR = (GPIOC_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_ODR_OD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_BRR  --------------------------------
// SVD Line: 3930

unsigned int GPIOC_BRR __AT (0x4001F81C);



// --------------------------------  Field Item: GPIOC_BRR_BR  ------------------------------------
// SVD Line: 3939

//  <item> SFDITEM_FIELD__GPIOC_BRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F81C) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_BRR >> 0) & 0x0), ((GPIOC_BRR = (GPIOC_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_BRR  -----------------------------------
// SVD Line: 3930

//  <rtree> SFDITEM_REG__GPIOC_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F81C) bit reset register </i>
//    <loc> ( (unsigned int)((GPIOC_BRR >> 0) & 0xFFFFFFFF), ((GPIOC_BRR = (GPIOC_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_BRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_BSRR  -------------------------------
// SVD Line: 3948

unsigned int GPIOC_BSRR __AT (0x4001F820);



// -------------------------------  Field Item: GPIOC_BSRR_BSR  -----------------------------------
// SVD Line: 3957

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BSR
//    <name> BSR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F820) Portx Pin[15:0] output data set </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_BSRR >> 0) & 0x0), ((GPIOC_BSRR = (GPIOC_BSRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: GPIOC_BSRR_BR  -----------------------------------
// SVD Line: 3964

//  <item> SFDITEM_FIELD__GPIOC_BSRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x4001F820) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_BSRR >> 16) & 0x0), ((GPIOC_BSRR = (GPIOC_BSRR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_BSRR  -----------------------------------
// SVD Line: 3948

//  <rtree> SFDITEM_REG__GPIOC_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F820) bit set-clear register </i>
//    <loc> ( (unsigned int)((GPIOC_BSRR >> 0) & 0xFFFFFFFF), ((GPIOC_BSRR = (GPIOC_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BSR </item>
//    <item> SFDITEM_FIELD__GPIOC_BSRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_DSR  --------------------------------
// SVD Line: 3973

unsigned int GPIOC_DSR __AT (0x4001F824);



// --------------------------------  Field Item: GPIOC_DSR_DS  ------------------------------------
// SVD Line: 3982

//  <item> SFDITEM_FIELD__GPIOC_DSR_DS
//    <name> DS </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001F824) DS </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_DSR >> 0) & 0x0), ((GPIOC_DSR = (GPIOC_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_DSR  -----------------------------------
// SVD Line: 3973

//  <rtree> SFDITEM_REG__GPIOC_DSR
//    <name> DSR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001F824) drive set register </i>
//    <loc> ( (unsigned int)((GPIOC_DSR >> 0) & 0xFFFFFFFF), ((GPIOC_DSR = (GPIOC_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_DSR_DS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOC_INT_CR  ------------------------------
// SVD Line: 3991

unsigned int GPIOC_INT_CR __AT (0x4001F828);



// ---------------------------  Field Item: GPIOC_INT_CR_POS_INT_EN  ------------------------------
// SVD Line: 4000

//  <item> SFDITEM_FIELD__GPIOC_INT_CR_POS_INT_EN
//    <name> POS_INT_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F828) Portx Pin[15:0] enable interrupt triggered by rising edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_INT_CR >> 0) & 0xFFFF), ((GPIOC_INT_CR = (GPIOC_INT_CR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOC_INT_CR_NEG_INT_EN  ------------------------------
// SVD Line: 4007

//  <item> SFDITEM_FIELD__GPIOC_INT_CR_NEG_INT_EN
//    <name> NEG_INT_EN </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001F828) Portx Pin[15:0] enable interrupt triggered by falling edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_INT_CR >> 16) & 0xFFFF), ((GPIOC_INT_CR = (GPIOC_INT_CR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOC_INT_CR  ----------------------------------
// SVD Line: 3991

//  <rtree> SFDITEM_REG__GPIOC_INT_CR
//    <name> INT_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F828) interrupt control register </i>
//    <loc> ( (unsigned int)((GPIOC_INT_CR >> 0) & 0xFFFFFFFF), ((GPIOC_INT_CR = (GPIOC_INT_CR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_INT_CR_POS_INT_EN </item>
//    <item> SFDITEM_FIELD__GPIOC_INT_CR_NEG_INT_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIOC_FR  --------------------------------
// SVD Line: 4016

unsigned int GPIOC_FR __AT (0x4001F82C);



// -------------------------------  Field Item: GPIOC_FR_POS_F  -----------------------------------
// SVD Line: 4025

//  <item> SFDITEM_FIELD__GPIOC_FR_POS_F
//    <name> POS_F </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F82C) Portx Pin[15:0] interrupt flag (rising edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_FR >> 0) & 0xFFFF), ((GPIOC_FR = (GPIOC_FR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_FR_NEG_F  -----------------------------------
// SVD Line: 4032

//  <item> SFDITEM_FIELD__GPIOC_FR_NEG_F
//    <name> NEG_F </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001F82C) Portx Pin[15:0] interrupt flag (falling edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_FR >> 16) & 0xFFFF), ((GPIOC_FR = (GPIOC_FR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOC_FR  ------------------------------------
// SVD Line: 4016

//  <rtree> SFDITEM_REG__GPIOC_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F82C) interrupt flag register </i>
//    <loc> ( (unsigned int)((GPIOC_FR >> 0) & 0xFFFFFFFF), ((GPIOC_FR = (GPIOC_FR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_FR_POS_F </item>
//    <item> SFDITEM_FIELD__GPIOC_FR_NEG_F </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_WUCR  -------------------------------
// SVD Line: 4041

unsigned int GPIOC_WUCR __AT (0x4001F830);



// ------------------------------  Field Item: GPIOC_WUCR_WU_EN  ----------------------------------
// SVD Line: 4050

//  <item> SFDITEM_FIELD__GPIOC_WUCR_WU_EN
//    <name> WU_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F830) Enable/disable Portx Pin[15:0] to wake-up CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_WUCR >> 0) & 0xFFFF), ((GPIOC_WUCR = (GPIOC_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_WUCR  -----------------------------------
// SVD Line: 4041

//  <rtree> SFDITEM_REG__GPIOC_WUCR
//    <name> WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F830) wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOC_WUCR >> 0) & 0xFFFFFFFF), ((GPIOC_WUCR = (GPIOC_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_WUCR_WU_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOC_WULVL  -------------------------------
// SVD Line: 4059

unsigned int GPIOC_WULVL __AT (0x4001F834);



// -----------------------------  Field Item: GPIOC_WULVL_WU_LVL  ---------------------------------
// SVD Line: 4068

//  <item> SFDITEM_FIELD__GPIOC_WULVL_WU_LVL
//    <name> WU_LVL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001F834) Configure the Portx Pin[15:0] to wakeup CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOC_WULVL >> 0) & 0xFFFF), ((GPIOC_WULVL = (GPIOC_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_WULVL  ----------------------------------
// SVD Line: 4059

//  <rtree> SFDITEM_REG__GPIOC_WULVL
//    <name> WULVL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F834) wakeup level register </i>
//    <loc> ( (unsigned int)((GPIOC_WULVL >> 0) & 0xFFFFFFFF), ((GPIOC_WULVL = (GPIOC_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_WULVL_WU_LVL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_AFRL  -------------------------------
// SVD Line: 4077

unsigned int GPIOC_AFRL __AT (0x4001F838);



// -------------------------------  Field Item: GPIOC_AFRL_AF0  -----------------------------------
// SVD Line: 4086

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF0
//    <name> AF0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001F838) Portx Pin0 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 0) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF1  -----------------------------------
// SVD Line: 4093

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001F838) Portx Pin1 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 4) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF2  -----------------------------------
// SVD Line: 4100

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF2
//    <name> AF2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001F838) Portx Pin2 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 8) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF3  -----------------------------------
// SVD Line: 4107

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF3
//    <name> AF3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001F838) Portx Pin3 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 12) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF4  -----------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF4
//    <name> AF4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001F838) Portx Pin4 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 16) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF5  -----------------------------------
// SVD Line: 4121

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF5
//    <name> AF5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001F838) Portx Pin5 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 20) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF6  -----------------------------------
// SVD Line: 4128

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF6
//    <name> AF6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001F838) Portx Pin6 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 24) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRL_AF7  -----------------------------------
// SVD Line: 4135

//  <item> SFDITEM_FIELD__GPIOC_AFRL_AF7
//    <name> AF7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001F838) Portx Pin7 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRL >> 28) & 0xF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_AFRL  -----------------------------------
// SVD Line: 4077

//  <rtree> SFDITEM_REG__GPIOC_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F838) alternate function low register </i>
//    <loc> ( (unsigned int)((GPIOC_AFRL >> 0) & 0xFFFFFFFF), ((GPIOC_AFRL = (GPIOC_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF0 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF1 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF2 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF3 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF4 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF5 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF6 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRL_AF7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOC_AFRH  -------------------------------
// SVD Line: 4144

unsigned int GPIOC_AFRH __AT (0x4001F83C);



// -------------------------------  Field Item: GPIOC_AFRH_AF8  -----------------------------------
// SVD Line: 4153

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF8
//    <name> AF8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001F83C) Portx Pin8 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 0) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF9  -----------------------------------
// SVD Line: 4160

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF9
//    <name> AF9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001F83C) Portx Pin9 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 4) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF10  ----------------------------------
// SVD Line: 4167

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF10
//    <name> AF10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001F83C) Portx Pin10 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 8) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF11  ----------------------------------
// SVD Line: 4174

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF11
//    <name> AF11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001F83C) Portx Pin11 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 12) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF12  ----------------------------------
// SVD Line: 4181

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF12
//    <name> AF12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001F83C) Portx Pin12 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 16) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF13  ----------------------------------
// SVD Line: 4188

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF13
//    <name> AF13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001F83C) Portx Pin13 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 20) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF14  ----------------------------------
// SVD Line: 4195

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF14
//    <name> AF14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001F83C) Portx Pin14 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 24) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOC_AFRH_AF15  ----------------------------------
// SVD Line: 4202

//  <item> SFDITEM_FIELD__GPIOC_AFRH_AF15
//    <name> AF15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001F83C) Portx Pin15 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_AFRH >> 28) & 0xF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOC_AFRH  -----------------------------------
// SVD Line: 4144

//  <rtree> SFDITEM_REG__GPIOC_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F83C) alternate function high register </i>
//    <loc> ( (unsigned int)((GPIOC_AFRH >> 0) & 0xFFFFFFFF), ((GPIOC_AFRH = (GPIOC_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF8 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF9 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF10 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF11 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF12 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF13 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF14 </item>
//    <item> SFDITEM_FIELD__GPIOC_AFRH_AF15 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIOC_STOP3_WUCR  ----------------------------
// SVD Line: 4211

unsigned int GPIOC_STOP3_WUCR __AT (0x4001F840);



// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_SEL_G0  --------------------------
// SVD Line: 4220

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G0
//    <name> STOP3_WU_SEL_G0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001F840) PortC Pin Group0 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_STOP3_WUCR >> 0) & 0x3), ((GPIOC_STOP3_WUCR = (GPIOC_STOP3_WUCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_LVL_G0  --------------------------
// SVD Line: 4227

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G0
//    <name> STOP3_WU_LVL_G0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001F840) PortC Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.2..2> STOP3_WU_LVL_G0
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_EN_G0  --------------------------
// SVD Line: 4234

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G0
//    <name> STOP3_WU_EN_G0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001F840) PortC Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.3..3> STOP3_WU_EN_G0
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_SEL_G1  --------------------------
// SVD Line: 4241

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G1
//    <name> STOP3_WU_SEL_G1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4001F840) PortC Pin Group1 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_STOP3_WUCR >> 4) & 0x3), ((GPIOC_STOP3_WUCR = (GPIOC_STOP3_WUCR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_LVL_G1  --------------------------
// SVD Line: 4248

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G1
//    <name> STOP3_WU_LVL_G1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001F840) PortC Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.6..6> STOP3_WU_LVL_G1
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_EN_G1  --------------------------
// SVD Line: 4255

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G1
//    <name> STOP3_WU_EN_G1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001F840) PortC Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.7..7> STOP3_WU_EN_G1
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_SEL_G2  --------------------------
// SVD Line: 4262

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G2
//    <name> STOP3_WU_SEL_G2 </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001F840) PortC Pin Group2 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_STOP3_WUCR >> 8) & 0x3), ((GPIOC_STOP3_WUCR = (GPIOC_STOP3_WUCR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_LVL_G2  --------------------------
// SVD Line: 4269

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G2
//    <name> STOP3_WU_LVL_G2 </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001F840) PortC Group2 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.10..10> STOP3_WU_LVL_G2
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_EN_G2  --------------------------
// SVD Line: 4276

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G2
//    <name> STOP3_WU_EN_G2 </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001F840) PortC Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.11..11> STOP3_WU_EN_G2
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_SEL_G3  --------------------------
// SVD Line: 4283

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G3
//    <name> STOP3_WU_SEL_G3 </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4001F840) PortC Pin Group3 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOC_STOP3_WUCR >> 12) & 0x3), ((GPIOC_STOP3_WUCR = (GPIOC_STOP3_WUCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_LVL_G3  --------------------------
// SVD Line: 4290

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G3
//    <name> STOP3_WU_LVL_G3 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001F840) PortC Group2 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.14..14> STOP3_WU_LVL_G3
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOC_STOP3_WUCR_STOP3_WU_EN_G3  --------------------------
// SVD Line: 4297

//  <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G3
//    <name> STOP3_WU_EN_G3 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001F840) PortC Group3 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOC_STOP3_WUCR ) </loc>
//      <o.15..15> STOP3_WU_EN_G3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: GPIOC_STOP3_WUCR  --------------------------------
// SVD Line: 4211

//  <rtree> SFDITEM_REG__GPIOC_STOP3_WUCR
//    <name> STOP3_WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001F840) stop3 wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOC_STOP3_WUCR >> 0) & 0xFFFFFFFF), ((GPIOC_STOP3_WUCR = (GPIOC_STOP3_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G0 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G1 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G2 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G2 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G2 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_SEL_G3 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_LVL_G3 </item>
//    <item> SFDITEM_FIELD__GPIOC_STOP3_WUCR_STOP3_WU_EN_G3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOC  -------------------------------------
// SVD Line: 3790

//  <view> GPIOC
//    <name> GPIOC </name>
//    <item> SFDITEM_REG__GPIOC_OER </item>
//    <item> SFDITEM_REG__GPIOC_OTYPER </item>
//    <item> SFDITEM_REG__GPIOC_IER </item>
//    <item> SFDITEM_REG__GPIOC_PER </item>
//    <item> SFDITEM_REG__GPIOC_PSR </item>
//    <item> SFDITEM_REG__GPIOC_IDR </item>
//    <item> SFDITEM_REG__GPIOC_ODR </item>
//    <item> SFDITEM_REG__GPIOC_BRR </item>
//    <item> SFDITEM_REG__GPIOC_BSRR </item>
//    <item> SFDITEM_REG__GPIOC_DSR </item>
//    <item> SFDITEM_REG__GPIOC_INT_CR </item>
//    <item> SFDITEM_REG__GPIOC_FR </item>
//    <item> SFDITEM_REG__GPIOC_WUCR </item>
//    <item> SFDITEM_REG__GPIOC_WULVL </item>
//    <item> SFDITEM_REG__GPIOC_AFRL </item>
//    <item> SFDITEM_REG__GPIOC_AFRH </item>
//    <item> SFDITEM_REG__GPIOC_STOP3_WUCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: GPIOD_OER  --------------------------------
// SVD Line: 4322

unsigned int GPIOD_OER __AT (0x4001FC00);



// --------------------------------  Field Item: GPIOD_OER_OEN  -----------------------------------
// SVD Line: 4331

//  <item> SFDITEM_FIELD__GPIOD_OER_OEN
//    <name> OEN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC00) Portx Pin[15:0] output enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_OER >> 0) & 0xFFFF), ((GPIOD_OER = (GPIOD_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_OER  -----------------------------------
// SVD Line: 4322

//  <rtree> SFDITEM_REG__GPIOD_OER
//    <name> OER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC00) output enable register </i>
//    <loc> ( (unsigned int)((GPIOD_OER >> 0) & 0xFFFFFFFF), ((GPIOD_OER = (GPIOD_OER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_OER_OEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOD_OTYPER  ------------------------------
// SVD Line: 4340

unsigned int GPIOD_OTYPER __AT (0x4001FC04);



// -----------------------------  Field Item: GPIOD_OTYPER_OTYPE  ---------------------------------
// SVD Line: 4349

//  <item> SFDITEM_FIELD__GPIOD_OTYPER_OTYPE
//    <name> OTYPE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC04) Portx Pin[15:0] output type control </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_OTYPER >> 0) & 0xFFFF), ((GPIOD_OTYPER = (GPIOD_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOD_OTYPER  ----------------------------------
// SVD Line: 4340

//  <rtree> SFDITEM_REG__GPIOD_OTYPER
//    <name> OTYPER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC04) output type register </i>
//    <loc> ( (unsigned int)((GPIOD_OTYPER >> 0) & 0xFFFFFFFF), ((GPIOD_OTYPER = (GPIOD_OTYPER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_OTYPER_OTYPE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_IER  --------------------------------
// SVD Line: 4358

unsigned int GPIOD_IER __AT (0x4001FC08);



// --------------------------------  Field Item: GPIOD_IER_IE  ------------------------------------
// SVD Line: 4367

//  <item> SFDITEM_FIELD__GPIOD_IER_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC08) Portx Pin[15:0] input enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_IER >> 0) & 0xFFFF), ((GPIOD_IER = (GPIOD_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_IER  -----------------------------------
// SVD Line: 4358

//  <rtree> SFDITEM_REG__GPIOD_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC08) input enable register </i>
//    <loc> ( (unsigned int)((GPIOD_IER >> 0) & 0xFFFFFFFF), ((GPIOD_IER = (GPIOD_IER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_IER_IE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_PER  --------------------------------
// SVD Line: 4376

unsigned int GPIOD_PER __AT (0x4001FC0C);



// --------------------------------  Field Item: GPIOD_PER_PE  ------------------------------------
// SVD Line: 4385

//  <item> SFDITEM_FIELD__GPIOD_PER_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC0C) Portx Pin[15:0] pull-up/pull-down enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_PER >> 0) & 0xFFFF), ((GPIOD_PER = (GPIOD_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_PER  -----------------------------------
// SVD Line: 4376

//  <rtree> SFDITEM_REG__GPIOD_PER
//    <name> PER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC0C) pull enable register </i>
//    <loc> ( (unsigned int)((GPIOD_PER >> 0) & 0xFFFFFFFF), ((GPIOD_PER = (GPIOD_PER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_PER_PE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_PSR  --------------------------------
// SVD Line: 4394

unsigned int GPIOD_PSR __AT (0x4001FC10);



// --------------------------------  Field Item: GPIOD_PSR_PS  ------------------------------------
// SVD Line: 4403

//  <item> SFDITEM_FIELD__GPIOD_PSR_PS
//    <name> PS </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC10) Portx Pin[15:0] pull-up/pull-down selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_PSR >> 0) & 0xFFFF), ((GPIOD_PSR = (GPIOD_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_PSR  -----------------------------------
// SVD Line: 4394

//  <rtree> SFDITEM_REG__GPIOD_PSR
//    <name> PSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC10) pull select register </i>
//    <loc> ( (unsigned int)((GPIOD_PSR >> 0) & 0xFFFFFFFF), ((GPIOD_PSR = (GPIOD_PSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_PSR_PS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_IDR  --------------------------------
// SVD Line: 4412

unsigned int GPIOD_IDR __AT (0x4001FC14);



// --------------------------------  Field Item: GPIOD_IDR_ID  ------------------------------------
// SVD Line: 4421

//  <item> SFDITEM_FIELD__GPIOD_IDR_ID
//    <name> ID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001FC14) Portx Pin[15:0] input </i>
//    <edit> 
//      <loc> ( (unsigned int)((GPIOD_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_IDR  -----------------------------------
// SVD Line: 4412

//  <rtree> SFDITEM_REG__GPIOD_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001FC14) input data register </i>
//    <loc> ( (unsigned int)((GPIOD_IDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__GPIOD_IDR_ID </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_ODR  --------------------------------
// SVD Line: 4430

unsigned int GPIOD_ODR __AT (0x4001FC18);



// --------------------------------  Field Item: GPIOD_ODR_OD  ------------------------------------
// SVD Line: 4439

//  <item> SFDITEM_FIELD__GPIOD_ODR_OD
//    <name> OD </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC18) Portx Pin[15:0] output </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_ODR >> 0) & 0xFFFF), ((GPIOD_ODR = (GPIOD_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_ODR  -----------------------------------
// SVD Line: 4430

//  <rtree> SFDITEM_REG__GPIOD_ODR
//    <name> ODR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC18) output data register </i>
//    <loc> ( (unsigned int)((GPIOD_ODR >> 0) & 0xFFFFFFFF), ((GPIOD_ODR = (GPIOD_ODR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_ODR_OD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_BRR  --------------------------------
// SVD Line: 4448

unsigned int GPIOD_BRR __AT (0x4001FC1C);



// --------------------------------  Field Item: GPIOD_BRR_BR  ------------------------------------
// SVD Line: 4457

//  <item> SFDITEM_FIELD__GPIOD_BRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001FC1C) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_BRR >> 0) & 0x0), ((GPIOD_BRR = (GPIOD_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_BRR  -----------------------------------
// SVD Line: 4448

//  <rtree> SFDITEM_REG__GPIOD_BRR
//    <name> BRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001FC1C) bit reset register </i>
//    <loc> ( (unsigned int)((GPIOD_BRR >> 0) & 0xFFFFFFFF), ((GPIOD_BRR = (GPIOD_BRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_BRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_BSRR  -------------------------------
// SVD Line: 4466

unsigned int GPIOD_BSRR __AT (0x4001FC20);



// -------------------------------  Field Item: GPIOD_BSRR_BSR  -----------------------------------
// SVD Line: 4475

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BSR
//    <name> BSR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001FC20) Portx Pin[15:0] output data set </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_BSRR >> 0) & 0x0), ((GPIOD_BSRR = (GPIOD_BSRR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: GPIOD_BSRR_BR  -----------------------------------
// SVD Line: 4482

//  <item> SFDITEM_FIELD__GPIOD_BSRR_BR
//    <name> BR </name>
//    <w> 
//    <i> [Bits 31..16] WO (@ 0x4001FC20) Portx Pin[15:0] output data clear </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_BSRR >> 16) & 0x0), ((GPIOD_BSRR = (GPIOD_BSRR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_BSRR  -----------------------------------
// SVD Line: 4466

//  <rtree> SFDITEM_REG__GPIOD_BSRR
//    <name> BSRR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001FC20) bit set-clear register </i>
//    <loc> ( (unsigned int)((GPIOD_BSRR >> 0) & 0xFFFFFFFF), ((GPIOD_BSRR = (GPIOD_BSRR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BSR </item>
//    <item> SFDITEM_FIELD__GPIOD_BSRR_BR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_DSR  --------------------------------
// SVD Line: 4491

unsigned int GPIOD_DSR __AT (0x4001FC24);



// --------------------------------  Field Item: GPIOD_DSR_DS  ------------------------------------
// SVD Line: 4500

//  <item> SFDITEM_FIELD__GPIOD_DSR_DS
//    <name> DS </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001FC24) DS </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_DSR >> 0) & 0x0), ((GPIOD_DSR = (GPIOD_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_DSR  -----------------------------------
// SVD Line: 4491

//  <rtree> SFDITEM_REG__GPIOD_DSR
//    <name> DSR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001FC24) drive set register </i>
//    <loc> ( (unsigned int)((GPIOD_DSR >> 0) & 0xFFFFFFFF), ((GPIOD_DSR = (GPIOD_DSR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_DSR_DS </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOD_INT_CR  ------------------------------
// SVD Line: 4509

unsigned int GPIOD_INT_CR __AT (0x4001FC28);



// ---------------------------  Field Item: GPIOD_INT_CR_POS_INT_EN  ------------------------------
// SVD Line: 4518

//  <item> SFDITEM_FIELD__GPIOD_INT_CR_POS_INT_EN
//    <name> POS_INT_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC28) Portx Pin[15:0] enable interrupt triggered by rising edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_INT_CR >> 0) & 0xFFFF), ((GPIOD_INT_CR = (GPIOD_INT_CR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: GPIOD_INT_CR_NEG_INT_EN  ------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__GPIOD_INT_CR_NEG_INT_EN
//    <name> NEG_INT_EN </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001FC28) Portx Pin[15:0] enable interrupt triggered by falling edge </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_INT_CR >> 16) & 0xFFFF), ((GPIOD_INT_CR = (GPIOD_INT_CR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: GPIOD_INT_CR  ----------------------------------
// SVD Line: 4509

//  <rtree> SFDITEM_REG__GPIOD_INT_CR
//    <name> INT_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC28) interrupt control register </i>
//    <loc> ( (unsigned int)((GPIOD_INT_CR >> 0) & 0xFFFFFFFF), ((GPIOD_INT_CR = (GPIOD_INT_CR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_INT_CR_POS_INT_EN </item>
//    <item> SFDITEM_FIELD__GPIOD_INT_CR_NEG_INT_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: GPIOD_FR  --------------------------------
// SVD Line: 4534

unsigned int GPIOD_FR __AT (0x4001FC2C);



// -------------------------------  Field Item: GPIOD_FR_POS_F  -----------------------------------
// SVD Line: 4543

//  <item> SFDITEM_FIELD__GPIOD_FR_POS_F
//    <name> POS_F </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC2C) Portx Pin[15:0] interrupt flag (rising edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_FR >> 0) & 0xFFFF), ((GPIOD_FR = (GPIOD_FR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_FR_NEG_F  -----------------------------------
// SVD Line: 4550

//  <item> SFDITEM_FIELD__GPIOD_FR_NEG_F
//    <name> NEG_F </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x4001FC2C) Portx Pin[15:0] interrupt flag (falling edge) </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_FR >> 16) & 0xFFFF), ((GPIOD_FR = (GPIOD_FR & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: GPIOD_FR  ------------------------------------
// SVD Line: 4534

//  <rtree> SFDITEM_REG__GPIOD_FR
//    <name> FR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC2C) interrupt flag register </i>
//    <loc> ( (unsigned int)((GPIOD_FR >> 0) & 0xFFFFFFFF), ((GPIOD_FR = (GPIOD_FR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_FR_POS_F </item>
//    <item> SFDITEM_FIELD__GPIOD_FR_NEG_F </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_WUCR  -------------------------------
// SVD Line: 4559

unsigned int GPIOD_WUCR __AT (0x4001FC30);



// ------------------------------  Field Item: GPIOD_WUCR_WU_EN  ----------------------------------
// SVD Line: 4568

//  <item> SFDITEM_FIELD__GPIOD_WUCR_WU_EN
//    <name> WU_EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC30) Enable/disable Portx Pin[15:0] to wake-up CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_WUCR >> 0) & 0xFFFF), ((GPIOD_WUCR = (GPIOD_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_WUCR  -----------------------------------
// SVD Line: 4559

//  <rtree> SFDITEM_REG__GPIOD_WUCR
//    <name> WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC30) wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOD_WUCR >> 0) & 0xFFFFFFFF), ((GPIOD_WUCR = (GPIOD_WUCR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_WUCR_WU_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: GPIOD_WULVL  -------------------------------
// SVD Line: 4577

unsigned int GPIOD_WULVL __AT (0x4001FC34);



// -----------------------------  Field Item: GPIOD_WULVL_WU_LVL  ---------------------------------
// SVD Line: 4586

//  <item> SFDITEM_FIELD__GPIOD_WULVL_WU_LVL
//    <name> WU_LVL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001FC34) Configure the Portx Pin[15:0] to wakeup CPU </i>
//    <edit> 
//      <loc> ( (unsigned short)((GPIOD_WULVL >> 0) & 0xFFFF), ((GPIOD_WULVL = (GPIOD_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_WULVL  ----------------------------------
// SVD Line: 4577

//  <rtree> SFDITEM_REG__GPIOD_WULVL
//    <name> WULVL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC34) wakeup level register </i>
//    <loc> ( (unsigned int)((GPIOD_WULVL >> 0) & 0xFFFFFFFF), ((GPIOD_WULVL = (GPIOD_WULVL & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_WULVL_WU_LVL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_AFRL  -------------------------------
// SVD Line: 4595

unsigned int GPIOD_AFRL __AT (0x4001FC38);



// -------------------------------  Field Item: GPIOD_AFRL_AF0  -----------------------------------
// SVD Line: 4604

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF0
//    <name> AF0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001FC38) Portx Pin0 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 0) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF1  -----------------------------------
// SVD Line: 4611

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF1
//    <name> AF1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001FC38) Portx Pin1 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 4) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF2  -----------------------------------
// SVD Line: 4618

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF2
//    <name> AF2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001FC38) Portx Pin2 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 8) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF3  -----------------------------------
// SVD Line: 4625

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF3
//    <name> AF3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001FC38) Portx Pin3 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 12) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF4  -----------------------------------
// SVD Line: 4632

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF4
//    <name> AF4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001FC38) Portx Pin4 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 16) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF5  -----------------------------------
// SVD Line: 4639

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF5
//    <name> AF5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001FC38) Portx Pin5 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 20) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF6  -----------------------------------
// SVD Line: 4646

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF6
//    <name> AF6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001FC38) Portx Pin6 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 24) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRL_AF7  -----------------------------------
// SVD Line: 4653

//  <item> SFDITEM_FIELD__GPIOD_AFRL_AF7
//    <name> AF7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001FC38) Portx Pin7 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRL >> 28) & 0xF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_AFRL  -----------------------------------
// SVD Line: 4595

//  <rtree> SFDITEM_REG__GPIOD_AFRL
//    <name> AFRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC38) alternate function low register </i>
//    <loc> ( (unsigned int)((GPIOD_AFRL >> 0) & 0xFFFFFFFF), ((GPIOD_AFRL = (GPIOD_AFRL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF0 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF1 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF2 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF3 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF4 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF5 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF6 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRL_AF7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: GPIOD_AFRH  -------------------------------
// SVD Line: 4662

unsigned int GPIOD_AFRH __AT (0x4001FC3C);



// -------------------------------  Field Item: GPIOD_AFRH_AF8  -----------------------------------
// SVD Line: 4671

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF8
//    <name> AF8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001FC3C) Portx Pin8 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 0) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF9  -----------------------------------
// SVD Line: 4678

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF9
//    <name> AF9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001FC3C) Portx Pin9 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 4) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF10  ----------------------------------
// SVD Line: 4685

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF10
//    <name> AF10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001FC3C) Portx Pin10 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 8) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF11  ----------------------------------
// SVD Line: 4692

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF11
//    <name> AF11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001FC3C) Portx Pin11 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 12) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF12  ----------------------------------
// SVD Line: 4699

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF12
//    <name> AF12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001FC3C) Portx Pin12 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 16) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF13  ----------------------------------
// SVD Line: 4706

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF13
//    <name> AF13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001FC3C) Portx Pin13 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 20) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF14  ----------------------------------
// SVD Line: 4713

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF14
//    <name> AF14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001FC3C) Portx Pin14 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 24) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: GPIOD_AFRH_AF15  ----------------------------------
// SVD Line: 4720

//  <item> SFDITEM_FIELD__GPIOD_AFRH_AF15
//    <name> AF15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001FC3C) Portx Pin15 function selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_AFRH >> 28) & 0xF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: GPIOD_AFRH  -----------------------------------
// SVD Line: 4662

//  <rtree> SFDITEM_REG__GPIOD_AFRH
//    <name> AFRH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC3C) alternate function high register </i>
//    <loc> ( (unsigned int)((GPIOD_AFRH >> 0) & 0xFFFFFFFF), ((GPIOD_AFRH = (GPIOD_AFRH & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF8 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF9 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF10 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF11 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF12 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF13 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF14 </item>
//    <item> SFDITEM_FIELD__GPIOD_AFRH_AF15 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: GPIOD_STOP3_WUCR  ----------------------------
// SVD Line: 4729

unsigned int GPIOD_STOP3_WUCR __AT (0x4001FC40);



// ----------------------  Field Item: GPIOD_STOP3_WUCR_STOP3_WU_SEL_G0  --------------------------
// SVD Line: 4738

//  <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_SEL_G0
//    <name> STOP3_WU_SEL_G0 </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001FC40) PortD Pin Group0 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_STOP3_WUCR >> 0) & 0x3), ((GPIOD_STOP3_WUCR = (GPIOD_STOP3_WUCR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOD_STOP3_WUCR_STOP3_WU_LVL_G0  --------------------------
// SVD Line: 4745

//  <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_LVL_G0
//    <name> STOP3_WU_LVL_G0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001FC40) PortD Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_STOP3_WUCR ) </loc>
//      <o.2..2> STOP3_WU_LVL_G0
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOD_STOP3_WUCR_STOP3_WU_EN_G0  --------------------------
// SVD Line: 4752

//  <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_EN_G0
//    <name> STOP3_WU_EN_G0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001FC40) PortD Group0 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_STOP3_WUCR ) </loc>
//      <o.3..3> STOP3_WU_EN_G0
//    </check>
//  </item>
//  


// ----------------------  Field Item: GPIOD_STOP3_WUCR_STOP3_WU_SEL_G1  --------------------------
// SVD Line: 4759

//  <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_SEL_G1
//    <name> STOP3_WU_SEL_G1 </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x4001FC40) PortD Pin Group1 wake-up source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((GPIOD_STOP3_WUCR >> 4) & 0x3), ((GPIOD_STOP3_WUCR = (GPIOD_STOP3_WUCR & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: GPIOD_STOP3_WUCR_STOP3_WU_LVL_G1  --------------------------
// SVD Line: 4766

//  <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_LVL_G1
//    <name> STOP3_WU_LVL_G1 </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001FC40) PortD Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_STOP3_WUCR ) </loc>
//      <o.6..6> STOP3_WU_LVL_G1
//    </check>
//  </item>
//  


// -----------------------  Field Item: GPIOD_STOP3_WUCR_STOP3_WU_EN_G1  --------------------------
// SVD Line: 4773

//  <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_EN_G1
//    <name> STOP3_WU_EN_G1 </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001FC40) PortD Group1 wake-up pin level selection </i>
//    <check> 
//      <loc> ( (unsigned int) GPIOD_STOP3_WUCR ) </loc>
//      <o.7..7> STOP3_WU_EN_G1
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: GPIOD_STOP3_WUCR  --------------------------------
// SVD Line: 4729

//  <rtree> SFDITEM_REG__GPIOD_STOP3_WUCR
//    <name> STOP3_WUCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001FC40) stop3 wakeup control register </i>
//    <loc> ( (unsigned int)((GPIOD_STOP3_WUCR >> 0) & 0xFFFFFFFF), ((GPIOD_STOP3_WUCR = (GPIOD_STOP3_WUCR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_SEL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_LVL_G0 </item>
//    <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_EN_G0 </item>
//    <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_SEL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_LVL_G1 </item>
//    <item> SFDITEM_FIELD__GPIOD_STOP3_WUCR_STOP3_WU_EN_G1 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: GPIOD  -------------------------------------
// SVD Line: 4308

//  <view> GPIOD
//    <name> GPIOD </name>
//    <item> SFDITEM_REG__GPIOD_OER </item>
//    <item> SFDITEM_REG__GPIOD_OTYPER </item>
//    <item> SFDITEM_REG__GPIOD_IER </item>
//    <item> SFDITEM_REG__GPIOD_PER </item>
//    <item> SFDITEM_REG__GPIOD_PSR </item>
//    <item> SFDITEM_REG__GPIOD_IDR </item>
//    <item> SFDITEM_REG__GPIOD_ODR </item>
//    <item> SFDITEM_REG__GPIOD_BRR </item>
//    <item> SFDITEM_REG__GPIOD_BSRR </item>
//    <item> SFDITEM_REG__GPIOD_DSR </item>
//    <item> SFDITEM_REG__GPIOD_INT_CR </item>
//    <item> SFDITEM_REG__GPIOD_FR </item>
//    <item> SFDITEM_REG__GPIOD_WUCR </item>
//    <item> SFDITEM_REG__GPIOD_WULVL </item>
//    <item> SFDITEM_REG__GPIOD_AFRL </item>
//    <item> SFDITEM_REG__GPIOD_AFRH </item>
//    <item> SFDITEM_REG__GPIOD_STOP3_WUCR </item>
//  </view>
//  


// -----------------------------  Register Item Address: RTC_CTRL  --------------------------------
// SVD Line: 4798

unsigned int RTC_CTRL __AT (0x4000E000);



// -------------------------  Field Item: RTC_CTRL_WAKEUP2_FILTER_CFG  ----------------------------
// SVD Line: 4807

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_FILTER_CFG
//    <name> WAKEUP2_FILTER_CFG </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000E000) WAKEUP2 filter control </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CTRL >> 0) & 0x3), ((RTC_CTRL = (RTC_CTRL & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_WAKEUP2_WKEN1  -------------------------------
// SVD Line: 4814

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_WKEN1
//    <name> WAKEUP2_WKEN1 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000E000) WAKEUP2_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.2..2> WAKEUP2_WKEN1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_WAKEUP2_WKEN0  -------------------------------
// SVD Line: 4821

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_WKEN0
//    <name> WAKEUP2_WKEN0 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000E000) WAKEUP2 level wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.3..3> WAKEUP2_WKEN0
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_WAKEUP2_LEVEL_SEL  -----------------------------
// SVD Line: 4828

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_LEVEL_SEL
//    <name> WAKEUP2_LEVEL_SEL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E000) WAKEUP2 active level selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.4..4> WAKEUP2_LEVEL_SEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTC_CTRL_WAKEUP2_EN  --------------------------------
// SVD Line: 4835

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_EN
//    <name> WAKEUP2_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000E000) WAKEUP2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.5..5> WAKEUP2_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_WAKEUP1_FILTER_CFG  ----------------------------
// SVD Line: 4842

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_FILTER_CFG
//    <name> WAKEUP1_FILTER_CFG </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4000E000) WAKEUP1 filter control </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CTRL >> 6) & 0x3), ((RTC_CTRL = (RTC_CTRL & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_WAKEUP1_WKEN1  -------------------------------
// SVD Line: 4849

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_WKEN1
//    <name> WAKEUP1_WKEN1 </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000E000) WAKEUP1_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.8..8> WAKEUP1_WKEN1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_WAKEUP1_WKEN0  -------------------------------
// SVD Line: 4856

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_WKEN0
//    <name> WAKEUP1_WKEN0 </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000E000) WAKEUP1 level wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.9..9> WAKEUP1_WKEN0
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_WAKEUP1_LEVEL_SEL  -----------------------------
// SVD Line: 4863

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_LEVEL_SEL
//    <name> WAKEUP1_LEVEL_SEL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000E000) WAKEUP1 active level selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.10..10> WAKEUP1_LEVEL_SEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTC_CTRL_WAKEUP1_EN  --------------------------------
// SVD Line: 4870

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_EN
//    <name> WAKEUP1_EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000E000) WAKEUP1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.11..11> WAKEUP1_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_WAKEUP0_FILTER_CFG  ----------------------------
// SVD Line: 4877

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_FILTER_CFG
//    <name> WAKEUP0_FILTER_CFG </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000E000) WAKEUP0 filter control </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CTRL >> 12) & 0x3), ((RTC_CTRL = (RTC_CTRL & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_WAKEUP0_WKEN1  -------------------------------
// SVD Line: 4884

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_WKEN1
//    <name> WAKEUP0_WKEN1 </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000E000) WAKEUP0_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.14..14> WAKEUP0_WKEN1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_WAKEUP0_WKEN0  -------------------------------
// SVD Line: 4891

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_WKEN0
//    <name> WAKEUP0_WKEN0 </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000E000) WAKEUP0 level wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.15..15> WAKEUP0_WKEN0
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_WAKEUP0_LEVEL_SEL  -----------------------------
// SVD Line: 4898

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_LEVEL_SEL
//    <name> WAKEUP0_LEVEL_SEL </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000E000) WAKEUP0 active level selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.16..16> WAKEUP0_LEVEL_SEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTC_CTRL_WAKEUP0_EN  --------------------------------
// SVD Line: 4905

//  <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_EN
//    <name> WAKEUP0_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000E000) WAKEUP0 enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.17..17> WAKEUP0_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_TAMPER_FILTER_CFG  -----------------------------
// SVD Line: 4912

//  <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_FILTER_CFG
//    <name> TAMPER_FILTER_CFG </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x4000E000) Tamper filter control </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CTRL >> 18) & 0x3), ((RTC_CTRL = (RTC_CTRL & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: RTC_CTRL_TAMPER_WKEN1  -------------------------------
// SVD Line: 4919

//  <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_WKEN1
//    <name> TAMPER_WKEN1 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4000E000) TAMPER_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.20..20> TAMPER_WKEN1
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RTC_CTRL_TAMPER_WKEN0  -------------------------------
// SVD Line: 4926

//  <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_WKEN0
//    <name> TAMPER_WKEN0 </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4000E000) Tamper level wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.21..21> TAMPER_WKEN0
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CTRL_TAMPER_LEVEL_SEL  -----------------------------
// SVD Line: 4933

//  <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_LEVEL_SEL
//    <name> TAMPER_LEVEL_SEL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4000E000) Tamper active level selection </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.22..22> TAMPER_LEVEL_SEL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: RTC_CTRL_TAMPER_EN  ---------------------------------
// SVD Line: 4940

//  <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_EN
//    <name> TAMPER_EN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x4000E000) Tamper enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.23..23> TAMPER_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_CTRL_CYC_START_COUNTER  -----------------------------
// SVD Line: 4947

//  <item> SFDITEM_FIELD__RTC_CTRL_CYC_START_COUNTER
//    <name> CYC_START_COUNTER </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x4000E000) Periodic counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.24..24> CYC_START_COUNTER
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_CTRL_CYC_WKEN  ---------------------------------
// SVD Line: 4954

//  <item> SFDITEM_FIELD__RTC_CTRL_CYC_WKEN
//    <name> CYC_WKEN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4000E000) CYC_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.25..25> CYC_WKEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CTRL_RTC_ALARM1_WKEN  ------------------------------
// SVD Line: 4961

//  <item> SFDITEM_FIELD__RTC_CTRL_RTC_ALARM1_WKEN
//    <name> RTC_ALARM1_WKEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4000E000) ALARM1_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.26..26> RTC_ALARM1_WKEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CTRL_RTC_ALARM0_WKEN  ------------------------------
// SVD Line: 4968

//  <item> SFDITEM_FIELD__RTC_CTRL_RTC_ALARM0_WKEN
//    <name> RTC_ALARM0_WKEN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x4000E000) ALARM0_SR wake-up enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.27..27> RTC_ALARM0_WKEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: RTC_CTRL_RTC_START_RTC  -------------------------------
// SVD Line: 4975

//  <item> SFDITEM_FIELD__RTC_CTRL_RTC_START_RTC
//    <name> RTC_START_RTC </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000E000) RTC calendar enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CTRL ) </loc>
//      <o.28..28> RTC_START_RTC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RTC_CTRL  ------------------------------------
// SVD Line: 4798

//  <rtree> SFDITEM_REG__RTC_CTRL
//    <name> CTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E000) control register </i>
//    <loc> ( (unsigned int)((RTC_CTRL >> 0) & 0xFFFFFFFF), ((RTC_CTRL = (RTC_CTRL & ~(0x1FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_FILTER_CFG </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_WKEN1 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_WKEN0 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_LEVEL_SEL </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP2_EN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_FILTER_CFG </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_WKEN1 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_WKEN0 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_LEVEL_SEL </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP1_EN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_FILTER_CFG </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_WKEN1 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_WKEN0 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_LEVEL_SEL </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_WAKEUP0_EN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_FILTER_CFG </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_WKEN1 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_WKEN0 </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_LEVEL_SEL </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_TAMPER_EN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_CYC_START_COUNTER </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_CYC_WKEN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_RTC_ALARM1_WKEN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_RTC_ALARM0_WKEN </item>
//    <item> SFDITEM_FIELD__RTC_CTRL_RTC_START_RTC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_ALARM0  -------------------------------
// SVD Line: 4984

unsigned int RTC_ALARM0 __AT (0x4000E004);



// ---------------------------  Field Item: RTC_ALARM0_ALARM0_VALUE  ------------------------------
// SVD Line: 4993

//  <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_VALUE
//    <name> ALARM0_VALUE </name>
//    <rw> 
//    <i> [Bits 25..0] RW (@ 0x4000E004) Alarm 0 value configuration </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_ALARM0 >> 0) & 0x3FFFFFF), ((RTC_ALARM0 = (RTC_ALARM0 & ~(0x3FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RTC_ALARM0_ALARM0_MASK  -------------------------------
// SVD Line: 5000

//  <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_MASK
//    <name> ALARM0_MASK </name>
//    <rw> 
//    <i> [Bits 29..26] RW (@ 0x4000E004) Alarm 0 mask configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARM0 >> 26) & 0xF), ((RTC_ALARM0 = (RTC_ALARM0 & ~(0xFUL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RTC_ALARM0_ALARM0_WEEK_SEL  -----------------------------
// SVD Line: 5007

//  <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_WEEK_SEL
//    <name> ALARM0_WEEK_SEL </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000E004) Date or day of week selection for Alarm 0 </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALARM0 ) </loc>
//      <o.30..30> ALARM0_WEEK_SEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RTC_ALARM0_ALARM0_EN  --------------------------------
// SVD Line: 5014

//  <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_EN
//    <name> ALARM0_EN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4000E004) Alarm 0 enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALARM0 ) </loc>
//      <o.31..31> ALARM0_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RTC_ALARM0  -----------------------------------
// SVD Line: 4984

//  <rtree> SFDITEM_REG__RTC_ALARM0
//    <name> ALARM0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E004) alarm 0 </i>
//    <loc> ( (unsigned int)((RTC_ALARM0 >> 0) & 0xFFFFFFFF), ((RTC_ALARM0 = (RTC_ALARM0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_VALUE </item>
//    <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_MASK </item>
//    <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_WEEK_SEL </item>
//    <item> SFDITEM_FIELD__RTC_ALARM0_ALARM0_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_ALARM1  -------------------------------
// SVD Line: 5023

unsigned int RTC_ALARM1 __AT (0x4000E008);



// ---------------------------  Field Item: RTC_ALARM1_ALARM1_VALUE  ------------------------------
// SVD Line: 5032

//  <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_VALUE
//    <name> ALARM1_VALUE </name>
//    <rw> 
//    <i> [Bits 25..0] RW (@ 0x4000E008) Alarm 1 value configuration </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_ALARM1 >> 0) & 0x3FFFFFF), ((RTC_ALARM1 = (RTC_ALARM1 & ~(0x3FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: RTC_ALARM1_ALARM1_MASK  -------------------------------
// SVD Line: 5039

//  <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_MASK
//    <name> ALARM1_MASK </name>
//    <rw> 
//    <i> [Bits 29..26] RW (@ 0x4000E008) Alarm 1 mask configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARM1 >> 26) & 0xF), ((RTC_ALARM1 = (RTC_ALARM1 & ~(0xFUL << 26 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 26 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: RTC_ALARM1_ALARM1_WEEK_SEL  -----------------------------
// SVD Line: 5046

//  <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_WEEK_SEL
//    <name> ALARM1_WEEK_SEL </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000E008) Date or day of week selection for Alarm 1 </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALARM1 ) </loc>
//      <o.30..30> ALARM1_WEEK_SEL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RTC_ALARM1_ALARM1_EN  --------------------------------
// SVD Line: 5053

//  <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_EN
//    <name> ALARM1_EN </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x4000E008) Alarm 1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_ALARM1 ) </loc>
//      <o.31..31> ALARM1_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RTC_ALARM1  -----------------------------------
// SVD Line: 5023

//  <rtree> SFDITEM_REG__RTC_ALARM1
//    <name> ALARM1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E008) alarm 1 </i>
//    <loc> ( (unsigned int)((RTC_ALARM1 >> 0) & 0xFFFFFFFF), ((RTC_ALARM1 = (RTC_ALARM1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_VALUE </item>
//    <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_MASK </item>
//    <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_WEEK_SEL </item>
//    <item> SFDITEM_FIELD__RTC_ALARM1_ALARM1_EN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTC_PPM_ADJUST  -----------------------------
// SVD Line: 5062

unsigned int RTC_PPM_ADJUST __AT (0x4000E00C);



// -----------------------  Field Item: RTC_PPM_ADJUST_PPMADJUST_VALUE  ---------------------------
// SVD Line: 5071

//  <item> SFDITEM_FIELD__RTC_PPM_ADJUST_PPMADJUST_VALUE
//    <name> PPMADJUST_VALUE </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000E00C) PPMADJUST_VALUE </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_PPM_ADJUST >> 0) & 0xFFFF), ((RTC_PPM_ADJUST = (RTC_PPM_ADJUST & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTC_PPM_ADJUST  ---------------------------------
// SVD Line: 5062

//  <rtree> SFDITEM_REG__RTC_PPM_ADJUST
//    <name> PPM_ADJUST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E00C) ppm adjust value </i>
//    <loc> ( (unsigned int)((RTC_PPM_ADJUST >> 0) & 0xFFFFFFFF), ((RTC_PPM_ADJUST = (RTC_PPM_ADJUST & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_PPM_ADJUST_PPMADJUST_VALUE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTC_CALENDAR  ------------------------------
// SVD Line: 5080

unsigned int RTC_CALENDAR __AT (0x4000E010);



// -------------------------  Field Item: RTC_CALENDAR_CALENDAR_VALUE  ----------------------------
// SVD Line: 5089

//  <item> SFDITEM_FIELD__RTC_CALENDAR_CALENDAR_VALUE
//    <name> CALENDAR_VALUE </name>
//    <w> 
//    <i> [Bits 19..0] WO (@ 0x4000E010) RTC calendar time values </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CALENDAR >> 0) & 0x0), ((RTC_CALENDAR = (RTC_CALENDAR & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTC_CALENDAR  ----------------------------------
// SVD Line: 5080

//  <rtree> SFDITEM_REG__RTC_CALENDAR
//    <name> CALENDAR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000E010) time hour/minute/second </i>
//    <loc> ( (unsigned int)((RTC_CALENDAR >> 0) & 0xFFFFFFFF), ((RTC_CALENDAR = (RTC_CALENDAR & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CALENDAR_CALENDAR_VALUE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTC_CALENDAR_H  -----------------------------
// SVD Line: 5098

unsigned int RTC_CALENDAR_H __AT (0x4000E014);



// -----------------------  Field Item: RTC_CALENDAR_H_CALENDAR_H_VALUE  --------------------------
// SVD Line: 5107

//  <item> SFDITEM_FIELD__RTC_CALENDAR_H_CALENDAR_H_VALUE
//    <name> CALENDAR_H_VALUE </name>
//    <w> 
//    <i> [Bits 21..0] WO (@ 0x4000E014) RTC calendar date values </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CALENDAR_H >> 0) & 0x0), ((RTC_CALENDAR_H = (RTC_CALENDAR_H & ~(0x3FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTC_CALENDAR_H  ---------------------------------
// SVD Line: 5098

//  <rtree> SFDITEM_REG__RTC_CALENDAR_H
//    <name> CALENDAR_H </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000E014) time year/month/date </i>
//    <loc> ( (unsigned int)((RTC_CALENDAR_H >> 0) & 0xFFFFFFFF), ((RTC_CALENDAR_H = (RTC_CALENDAR_H & ~(0x3FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CALENDAR_H_CALENDAR_H_VALUE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTC_CYC_MAX  -------------------------------
// SVD Line: 5116

unsigned int RTC_CYC_MAX __AT (0x4000E018);



// --------------------------  Field Item: RTC_CYC_MAX_CYC_MAX_VALUE  -----------------------------
// SVD Line: 5125

//  <item> SFDITEM_FIELD__RTC_CYC_MAX_CYC_MAX_VALUE
//    <name> CYC_MAX_VALUE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E018) The programmed count value for the periodic counter to reach </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CYC_MAX >> 0) & 0xFFFFFFFF), ((RTC_CYC_MAX = (RTC_CYC_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTC_CYC_MAX  ----------------------------------
// SVD Line: 5116

//  <rtree> SFDITEM_REG__RTC_CYC_MAX
//    <name> CYC_MAX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E018) cyc max value </i>
//    <loc> ( (unsigned int)((RTC_CYC_MAX >> 0) & 0xFFFFFFFF), ((RTC_CYC_MAX = (RTC_CYC_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CYC_MAX_CYC_MAX_VALUE </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: RTC_SR  ---------------------------------
// SVD Line: 5134

unsigned int RTC_SR __AT (0x4000E01C);



// ------------------------------  Field Item: RTC_SR_WAKEUP2_SR  ---------------------------------
// SVD Line: 5143

//  <item> SFDITEM_FIELD__RTC_SR_WAKEUP2_SR
//    <name> WAKEUP2_SR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E01C) Wakeup2 flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.0..0> WAKEUP2_SR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SR_WAKEUP1_SR  ---------------------------------
// SVD Line: 5150

//  <item> SFDITEM_FIELD__RTC_SR_WAKEUP1_SR
//    <name> WAKEUP1_SR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000E01C) Wakeup1 flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.1..1> WAKEUP1_SR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SR_WAKEUP0_SR  ---------------------------------
// SVD Line: 5157

//  <item> SFDITEM_FIELD__RTC_SR_WAKEUP0_SR
//    <name> WAKEUP0_SR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000E01C) Wakeup0 flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.2..2> WAKEUP0_SR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SR_TAMPER_SR  ----------------------------------
// SVD Line: 5164

//  <item> SFDITEM_FIELD__RTC_SR_TAMPER_SR
//    <name> TAMPER_SR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000E01C) Tamper flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.3..3> TAMPER_SR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SR_CYC_SR  -----------------------------------
// SVD Line: 5171

//  <item> SFDITEM_FIELD__RTC_SR_CYC_SR
//    <name> CYC_SR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E01C) Periodic counter flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.4..4> CYC_SR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SR_ALARM1_SR  ----------------------------------
// SVD Line: 5178

//  <item> SFDITEM_FIELD__RTC_SR_ALARM1_SR
//    <name> ALARM1_SR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000E01C) Alarm 1 flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.5..5> ALARM1_SR
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SR_ALARM0_SR  ----------------------------------
// SVD Line: 5185

//  <item> SFDITEM_FIELD__RTC_SR_ALARM0_SR
//    <name> ALARM0_SR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E01C) Alarm 0 flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR ) </loc>
//      <o.6..6> ALARM0_SR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_SR  -------------------------------------
// SVD Line: 5134

//  <rtree> SFDITEM_REG__RTC_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E01C) status register </i>
//    <loc> ( (unsigned int)((RTC_SR >> 0) & 0xFFFFFFFF), ((RTC_SR = (RTC_SR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SR_WAKEUP2_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR_WAKEUP1_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR_WAKEUP0_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR_TAMPER_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR_CYC_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR_ALARM1_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR_ALARM0_SR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTC_ASYN_DATA  ------------------------------
// SVD Line: 5194

unsigned int RTC_ASYN_DATA __AT (0x4000E020);



// ---------------------------  Field Item: RTC_ASYN_DATA_SYN_DATA  -------------------------------
// SVD Line: 5203

//  <item> SFDITEM_FIELD__RTC_ASYN_DATA_SYN_DATA
//    <name> SYN_DATA </name>
//    <r> 
//    <i> [Bits 19..0] RO (@ 0x4000E020) SYN_DATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_ASYN_DATA >> 0) & 0xFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: RTC_ASYN_DATA  ---------------------------------
// SVD Line: 5194

//  <rtree> SFDITEM_REG__RTC_ASYN_DATA
//    <name> ASYN_DATA </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000E020) asynchronization time hour/minute/second </i>
//    <loc> ( (unsigned int)((RTC_ASYN_DATA >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_ASYN_DATA_SYN_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RTC_ASYN_DATA_H  -----------------------------
// SVD Line: 5212

unsigned int RTC_ASYN_DATA_H __AT (0x4000E024);



// -------------------------  Field Item: RTC_ASYN_DATA_H_SYN_DATA_H  -----------------------------
// SVD Line: 5221

//  <item> SFDITEM_FIELD__RTC_ASYN_DATA_H_SYN_DATA_H
//    <name> SYN_DATA_H </name>
//    <r> 
//    <i> [Bits 21..0] RO (@ 0x4000E024) SYN_DATA_H </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_ASYN_DATA_H >> 0) & 0x3FFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTC_ASYN_DATA_H  --------------------------------
// SVD Line: 5212

//  <rtree> SFDITEM_REG__RTC_ASYN_DATA_H
//    <name> ASYN_DATA_H </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000E024) asynchronization time year/month/date </i>
//    <loc> ( (unsigned int)((RTC_ASYN_DATA_H >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_ASYN_DATA_H_SYN_DATA_H </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_CR1  ---------------------------------
// SVD Line: 5230

unsigned int RTC_CR1 __AT (0x4000E028);



// --------------------------  Field Item: RTC_CR1_WAKEUP2_SR_INT_EN  -----------------------------
// SVD Line: 5239

//  <item> SFDITEM_FIELD__RTC_CR1_WAKEUP2_SR_INT_EN
//    <name> WAKEUP2_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E028) WAKEUP2_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.0..0> WAKEUP2_SR_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CR1_WAKEUP1_SR_INT_EN  -----------------------------
// SVD Line: 5246

//  <item> SFDITEM_FIELD__RTC_CR1_WAKEUP1_SR_INT_EN
//    <name> WAKEUP1_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000E028) WAKEUP1_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.1..1> WAKEUP1_SR_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CR1_WAKEUP0_SR_INT_EN  -----------------------------
// SVD Line: 5253

//  <item> SFDITEM_FIELD__RTC_CR1_WAKEUP0_SR_INT_EN
//    <name> WAKEUP0_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000E028) WAKEUP0_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.2..2> WAKEUP0_SR_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CR1_TAMPER_SR_INT_EN  ------------------------------
// SVD Line: 5260

//  <item> SFDITEM_FIELD__RTC_CR1_TAMPER_SR_INT_EN
//    <name> TAMPER_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000E028) TAMPER_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.3..3> TAMPER_SR_INT_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: RTC_CR1_CYC_SR_INT_EN  -------------------------------
// SVD Line: 5267

//  <item> SFDITEM_FIELD__RTC_CR1_CYC_SR_INT_EN
//    <name> CYC_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E028) CYC_SR (periodic counter) interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.4..4> CYC_SR_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CR1_ALARM1_SR_INT_EN  ------------------------------
// SVD Line: 5274

//  <item> SFDITEM_FIELD__RTC_CR1_ALARM1_SR_INT_EN
//    <name> ALARM1_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000E028) ALARM1_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.5..5> ALARM1_SR_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CR1_ALARM0_SR_INT_EN  ------------------------------
// SVD Line: 5281

//  <item> SFDITEM_FIELD__RTC_CR1_ALARM0_SR_INT_EN
//    <name> ALARM0_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E028) ALARM0_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.6..6> ALARM0_SR_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_CR1_SECOND_SR_INT_EN  ------------------------------
// SVD Line: 5288

//  <item> SFDITEM_FIELD__RTC_CR1_SECOND_SR_INT_EN
//    <name> SECOND_SR_INT_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000E028) SECOND_SR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR1 ) </loc>
//      <o.7..7> SECOND_SR_INT_EN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_CR1  ------------------------------------
// SVD Line: 5230

//  <rtree> SFDITEM_REG__RTC_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E028) control register 1 </i>
//    <loc> ( (unsigned int)((RTC_CR1 >> 0) & 0xFFFFFFFF), ((RTC_CR1 = (RTC_CR1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CR1_WAKEUP2_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_WAKEUP1_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_WAKEUP0_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_TAMPER_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_CYC_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_ALARM1_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_ALARM0_SR_INT_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR1_SECOND_SR_INT_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_SR1  ---------------------------------
// SVD Line: 5297

unsigned int RTC_SR1 __AT (0x4000E02C);



// -------------------------  Field Item: RTC_SR1_READ_CALENDAR_DONE  -----------------------------
// SVD Line: 5306

//  <item> SFDITEM_FIELD__RTC_SR1_READ_CALENDAR_DONE
//    <name> READ_CALENDAR_DONE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000E02C) The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.0..0> READ_CALENDAR_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_SR1_WRITE_RTCSR_DONE  ------------------------------
// SVD Line: 5316

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_RTCSR_DONE
//    <name> WRITE_RTCSR_DONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000E02C) The complete flag of the write operation to register RTC_SR  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.1..1> WRITE_RTCSR_DONE
//    </check>
//  </item>
//  


// ----------------------  Field Item: RTC_SR1_WRITE_CYC_MAX_VALUE_DONE  --------------------------
// SVD Line: 5326

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_CYC_MAX_VALUE_DONE
//    <name> WRITE_CYC_MAX_VALUE_DONE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_CYC_MAX_VALUE  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.2..2> WRITE_CYC_MAX_VALUE_DONE
//    </check>
//  </item>
//  


// -------------------------  Field Item: RTC_SR1_WRITE_CALENDAR_DONE  ----------------------------
// SVD Line: 5336

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_CALENDAR_DONE
//    <name> WRITE_CALENDAR_DONE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000E02C) The complete flag of the write operations to registers RTC_CALENDAR and RTC_CALENDAR_H  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.3..3> WRITE_CALENDAR_DONE
//    </check>
//  </item>
//  


// ------------------------  Field Item: RTC_SR1_WRITE_PPMADJUST_DONE  ----------------------------
// SVD Line: 5346

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_PPMADJUST_DONE
//    <name> WRITE_PPMADJUST_DONE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_PPMADJUST  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.4..4> WRITE_PPMADJUST_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_SR1_WRITE_ALARM1_DONE  -----------------------------
// SVD Line: 5356

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM1_DONE
//    <name> WRITE_ALARM1_DONE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_ALARM1  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.5..5> WRITE_ALARM1_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_SR1_WRITE_ALARM0_DONE  -----------------------------
// SVD Line: 5366

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM0_DONE
//    <name> WRITE_ALARM0_DONE </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_ALARM0  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.6..6> WRITE_ALARM0_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_SR1_WRITE_RTCCR_DONE  ------------------------------
// SVD Line: 5376

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_RTCCR_DONE
//    <name> WRITE_RTCCR_DONE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_CR  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.7..7> WRITE_RTCCR_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: RTC_SR1_WRITE_RTCCR2_DONE  -----------------------------
// SVD Line: 5386

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_RTCCR2_DONE
//    <name> WRITE_RTCCR2_DONE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_CR2  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.8..8> WRITE_RTCCR2_DONE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: RTC_SR1_SECOND_SR  ---------------------------------
// SVD Line: 5396

//  <item> SFDITEM_FIELD__RTC_SR1_SECOND_SR
//    <name> SECOND_SR </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000E02C) Second signal interrupt status  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.9..9> SECOND_SR
//    </check>
//  </item>
//  


// ------------------------  Field Item: RTC_SR1_WRITE_ALARM1_SUB_DONE  ---------------------------
// SVD Line: 5406

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM1_SUB_DONE
//    <name> WRITE_ALARM1_SUB_DONE </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_ALARM1_SUB  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.10..10> WRITE_ALARM1_SUB_DONE
//    </check>
//  </item>
//  


// ------------------------  Field Item: RTC_SR1_WRITE_ALARM0_SUB_DONE  ---------------------------
// SVD Line: 5416

//  <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM0_SUB_DONE
//    <name> WRITE_ALARM0_SUB_DONE </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x4000E02C) The complete flag of the write operations to register RTC_ALARM0_SUB  The complete flag of the read operations to registers RTC_CALENDAR_R and RTC_CALENDAR_R_H. </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SR1 ) </loc>
//      <o.11..11> WRITE_ALARM0_SUB_DONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_SR1  ------------------------------------
// SVD Line: 5297

//  <rtree> SFDITEM_REG__RTC_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000E02C) status register 1 </i>
//    <loc> ( (unsigned int)((RTC_SR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_SR1_READ_CALENDAR_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_RTCSR_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_CYC_MAX_VALUE_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_CALENDAR_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_PPMADJUST_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM1_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM0_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_RTCCR_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_RTCCR2_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_SECOND_SR </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM1_SUB_DONE </item>
//    <item> SFDITEM_FIELD__RTC_SR1_WRITE_ALARM0_SUB_DONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_CR2  ---------------------------------
// SVD Line: 5428

unsigned int RTC_CR2 __AT (0x4000E030);



// ------------------------  Field Item: RTC_CR2_RTC_RET_SRAM_ERASE_EN  ---------------------------
// SVD Line: 5437

//  <item> SFDITEM_FIELD__RTC_CR2_RTC_RET_SRAM_ERASE_EN
//    <name> RTC_RET_SRAM_ERASE_EN </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000E030) If enabled, the Retention SRAM is erased upon a tamper or a wakeup event </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CR2 >> 0) & 0xF), ((RTC_CR2 = (RTC_CR2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTC_CR2_RTC_OUT_SEL  --------------------------------
// SVD Line: 5444

//  <item> SFDITEM_FIELD__RTC_CR2_RTC_OUT_SEL
//    <name> RTC_OUT_SEL </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000E030) RTC IO output selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_CR2 >> 4) & 0x7), ((RTC_CR2 = (RTC_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: RTC_CR2_RTC_OUT_POL  --------------------------------
// SVD Line: 5451

//  <item> SFDITEM_FIELD__RTC_CR2_RTC_OUT_POL
//    <name> RTC_OUT_POL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000E030) RTC IO output polarity </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_CR2 ) </loc>
//      <o.7..7> RTC_OUT_POL
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_CR2  ------------------------------------
// SVD Line: 5428

//  <rtree> SFDITEM_REG__RTC_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E030) control register 2 </i>
//    <loc> ( (unsigned int)((RTC_CR2 >> 0) & 0xFFFFFFFF), ((RTC_CR2 = (RTC_CR2 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CR2_RTC_RET_SRAM_ERASE_EN </item>
//    <item> SFDITEM_FIELD__RTC_CR2_RTC_OUT_SEL </item>
//    <item> SFDITEM_FIELD__RTC_CR2_RTC_OUT_POL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: RTC_SUB_SECOND_CNT  ---------------------------
// SVD Line: 5460

unsigned int RTC_SUB_SECOND_CNT __AT (0x4000E034);



// -------------------  Field Item: RTC_SUB_SECOND_CNT_RTC_SUB_SECOND_VALUE  ----------------------
// SVD Line: 5469

//  <item> SFDITEM_FIELD__RTC_SUB_SECOND_CNT_RTC_SUB_SECOND_VALUE
//    <name> RTC_SUB_SECOND_VALUE </name>
//    <r> 
//    <i> [Bits 14..0] RO (@ 0x4000E034) The subsecond count value of the RTC calendar counter </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_SUB_SECOND_CNT >> 0) & 0x7FFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: RTC_SUB_SECOND_CNT  -------------------------------
// SVD Line: 5460

//  <rtree> SFDITEM_REG__RTC_SUB_SECOND_CNT
//    <name> SUB_SECOND_CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000E034) subsecond counter </i>
//    <loc> ( (unsigned int)((RTC_SUB_SECOND_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_SUB_SECOND_CNT_RTC_SUB_SECOND_VALUE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RTC_CYC_CNT  -------------------------------
// SVD Line: 5478

unsigned int RTC_CYC_CNT __AT (0x4000E038);



// --------------------------  Field Item: RTC_CYC_CNT_CYC_CNT_VALUE  -----------------------------
// SVD Line: 5487

//  <item> SFDITEM_FIELD__RTC_CYC_CNT_CYC_CNT_VALUE
//    <name> CYC_CNT_VALUE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000E038) Periodic counter value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CYC_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: RTC_CYC_CNT  ----------------------------------
// SVD Line: 5478

//  <rtree> SFDITEM_REG__RTC_CYC_CNT
//    <name> CYC_CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000E038) cyc counter </i>
//    <loc> ( (unsigned int)((RTC_CYC_CNT >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__RTC_CYC_CNT_CYC_CNT_VALUE </item>
//  </rtree>
//  


// -----------------------  Register Item Address: RTC_ALARM0_SUBSECOND  --------------------------
// SVD Line: 5496

unsigned int RTC_ALARM0_SUBSECOND __AT (0x4000E03C);



// ------------------  Field Item: RTC_ALARM0_SUBSECOND_RTC_ALARM0_SUB_VALUE  ---------------------
// SVD Line: 5505

//  <item> SFDITEM_FIELD__RTC_ALARM0_SUBSECOND_RTC_ALARM0_SUB_VALUE
//    <name> RTC_ALARM0_SUB_VALUE </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x4000E03C) Alarm 0 sub-seconds value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ALARM0_SUBSECOND >> 0) & 0x7FFF), ((RTC_ALARM0_SUBSECOND = (RTC_ALARM0_SUBSECOND & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: RTC_ALARM0_SUBSECOND_RTC_ALARM0_SUB_MASK  ----------------------
// SVD Line: 5512

//  <item> SFDITEM_FIELD__RTC_ALARM0_SUBSECOND_RTC_ALARM0_SUB_MASK
//    <name> RTC_ALARM0_SUB_MASK </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000E03C) Alarm 0 sub-second mask configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARM0_SUBSECOND >> 16) & 0xF), ((RTC_ALARM0_SUBSECOND = (RTC_ALARM0_SUBSECOND & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: RTC_ALARM0_SUBSECOND  ------------------------------
// SVD Line: 5496

//  <rtree> SFDITEM_REG__RTC_ALARM0_SUBSECOND
//    <name> ALARM0_SUBSECOND </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E03C) alarm0 subsecond </i>
//    <loc> ( (unsigned int)((RTC_ALARM0_SUBSECOND >> 0) & 0xFFFFFFFF), ((RTC_ALARM0_SUBSECOND = (RTC_ALARM0_SUBSECOND & ~(0xF7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALARM0_SUBSECOND_RTC_ALARM0_SUB_VALUE </item>
//    <item> SFDITEM_FIELD__RTC_ALARM0_SUBSECOND_RTC_ALARM0_SUB_MASK </item>
//  </rtree>
//  


// -----------------------  Register Item Address: RTC_ALARM1_SUBSECOND  --------------------------
// SVD Line: 5521

unsigned int RTC_ALARM1_SUBSECOND __AT (0x4000E040);



// ------------------  Field Item: RTC_ALARM1_SUBSECOND_RTC_ALARM1_SUB_VALUE  ---------------------
// SVD Line: 5530

//  <item> SFDITEM_FIELD__RTC_ALARM1_SUBSECOND_RTC_ALARM1_SUB_VALUE
//    <name> RTC_ALARM1_SUB_VALUE </name>
//    <rw> 
//    <i> [Bits 14..0] RW (@ 0x4000E040) Alarm 1 sub-seconds value </i>
//    <edit> 
//      <loc> ( (unsigned short)((RTC_ALARM1_SUBSECOND >> 0) & 0x7FFF), ((RTC_ALARM1_SUBSECOND = (RTC_ALARM1_SUBSECOND & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: RTC_ALARM1_SUBSECOND_RTC_ALARM1_SUB_MASK  ----------------------
// SVD Line: 5537

//  <item> SFDITEM_FIELD__RTC_ALARM1_SUBSECOND_RTC_ALARM1_SUB_MASK
//    <name> RTC_ALARM1_SUB_MASK </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4000E040) Alarm 1 sub-second mask configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((RTC_ALARM1_SUBSECOND >> 16) & 0xF), ((RTC_ALARM1_SUBSECOND = (RTC_ALARM1_SUBSECOND & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: RTC_ALARM1_SUBSECOND  ------------------------------
// SVD Line: 5521

//  <rtree> SFDITEM_REG__RTC_ALARM1_SUBSECOND
//    <name> ALARM1_SUBSECOND </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E040) alarm1 subsecond </i>
//    <loc> ( (unsigned int)((RTC_ALARM1_SUBSECOND >> 0) & 0xFFFFFFFF), ((RTC_ALARM1_SUBSECOND = (RTC_ALARM1_SUBSECOND & ~(0xF7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_ALARM1_SUBSECOND_RTC_ALARM1_SUB_VALUE </item>
//    <item> SFDITEM_FIELD__RTC_ALARM1_SUBSECOND_RTC_ALARM1_SUB_MASK </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RTC_CALENDAR_R  -----------------------------
// SVD Line: 5546

unsigned int RTC_CALENDAR_R __AT (0x4000E044);



// ------------------------  Field Item: RTC_CALENDAR_R_CALENDAR_SYNC  ----------------------------
// SVD Line: 5555

//  <item> SFDITEM_FIELD__RTC_CALENDAR_R_CALENDAR_SYNC
//    <name> CALENDAR_SYNC </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000E044) CALENDAR_SYNC </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CALENDAR_R >> 0) & 0xFFFFF), ((RTC_CALENDAR_R = (RTC_CALENDAR_R & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: RTC_CALENDAR_R  ---------------------------------
// SVD Line: 5546

//  <rtree> SFDITEM_REG__RTC_CALENDAR_R
//    <name> CALENDAR_R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E044) read time hour/minute/second </i>
//    <loc> ( (unsigned int)((RTC_CALENDAR_R >> 0) & 0xFFFFFFFF), ((RTC_CALENDAR_R = (RTC_CALENDAR_R & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CALENDAR_R_CALENDAR_SYNC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: RTC_CALENDAR_R_H  ----------------------------
// SVD Line: 5564

unsigned int RTC_CALENDAR_R_H __AT (0x4000E048);



// ----------------------  Field Item: RTC_CALENDAR_R_H_CALENDAR_H_SYNC  --------------------------
// SVD Line: 5573

//  <item> SFDITEM_FIELD__RTC_CALENDAR_R_H_CALENDAR_H_SYNC
//    <name> CALENDAR_H_SYNC </name>
//    <rw> 
//    <i> [Bits 21..0] RW (@ 0x4000E048) CALENDAR_H_SYNC </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CALENDAR_R_H >> 0) & 0x3FFFFF), ((RTC_CALENDAR_R_H = (RTC_CALENDAR_R_H & ~(0x3FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: RTC_CALENDAR_R_H  --------------------------------
// SVD Line: 5564

//  <rtree> SFDITEM_REG__RTC_CALENDAR_R_H
//    <name> CALENDAR_R_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E048) read time year/month/date </i>
//    <loc> ( (unsigned int)((RTC_CALENDAR_R_H >> 0) & 0xFFFFFFFF), ((RTC_CALENDAR_R_H = (RTC_CALENDAR_R_H & ~(0x3FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CALENDAR_R_H_CALENDAR_H_SYNC </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTC  --------------------------------------
// SVD Line: 4784

//  <view> RTC
//    <name> RTC </name>
//    <item> SFDITEM_REG__RTC_CTRL </item>
//    <item> SFDITEM_REG__RTC_ALARM0 </item>
//    <item> SFDITEM_REG__RTC_ALARM1 </item>
//    <item> SFDITEM_REG__RTC_PPM_ADJUST </item>
//    <item> SFDITEM_REG__RTC_CALENDAR </item>
//    <item> SFDITEM_REG__RTC_CALENDAR_H </item>
//    <item> SFDITEM_REG__RTC_CYC_MAX </item>
//    <item> SFDITEM_REG__RTC_SR </item>
//    <item> SFDITEM_REG__RTC_ASYN_DATA </item>
//    <item> SFDITEM_REG__RTC_ASYN_DATA_H </item>
//    <item> SFDITEM_REG__RTC_CR1 </item>
//    <item> SFDITEM_REG__RTC_SR1 </item>
//    <item> SFDITEM_REG__RTC_CR2 </item>
//    <item> SFDITEM_REG__RTC_SUB_SECOND_CNT </item>
//    <item> SFDITEM_REG__RTC_CYC_CNT </item>
//    <item> SFDITEM_REG__RTC_ALARM0_SUBSECOND </item>
//    <item> SFDITEM_REG__RTC_ALARM1_SUBSECOND </item>
//    <item> SFDITEM_REG__RTC_CALENDAR_R </item>
//    <item> SFDITEM_REG__RTC_CALENDAR_R_H </item>
//  </view>
//  


// -----------------------------  Register Item Address: UART0_DR  --------------------------------
// SVD Line: 5598

unsigned int UART0_DR __AT (0x40003000);



// --------------------------------  Field Item: UART0_DR_DATA  -----------------------------------
// SVD Line: 5607

//  <item> SFDITEM_FIELD__UART0_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40003000) Transmit data character/Receive data character </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_DR >> 0) & 0xFF), ((UART0_DR = (UART0_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: UART0_DR_FE  ------------------------------------
// SVD Line: 5614

//  <item> SFDITEM_FIELD__UART0_DR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40003000) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DR ) </loc>
//      <o.8..8> FE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART0_DR_PE  ------------------------------------
// SVD Line: 5621

//  <item> SFDITEM_FIELD__UART0_DR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40003000) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DR ) </loc>
//      <o.9..9> PE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART0_DR_BE  ------------------------------------
// SVD Line: 5628

//  <item> SFDITEM_FIELD__UART0_DR_BE
//    <name> BE </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40003000) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DR ) </loc>
//      <o.10..10> BE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART0_DR_OE  ------------------------------------
// SVD Line: 5635

//  <item> SFDITEM_FIELD__UART0_DR_OE
//    <name> OE </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40003000) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DR ) </loc>
//      <o.11..11> OE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART0_DR  ------------------------------------
// SVD Line: 5598

//  <rtree> SFDITEM_REG__UART0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003000) data register </i>
//    <loc> ( (unsigned int)((UART0_DR >> 0) & 0xFFFFFFFF), ((UART0_DR = (UART0_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_DR_DATA </item>
//    <item> SFDITEM_FIELD__UART0_DR_FE </item>
//    <item> SFDITEM_FIELD__UART0_DR_PE </item>
//    <item> SFDITEM_FIELD__UART0_DR_BE </item>
//    <item> SFDITEM_FIELD__UART0_DR_OE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_RSR_ECR  ------------------------------
// SVD Line: 5644

unsigned int UART0_RSR_ECR __AT (0x40003004);



// ------------------------------  Field Item: UART0_RSR_ECR_FE  ----------------------------------
// SVD Line: 5653

//  <item> SFDITEM_FIELD__UART0_RSR_ECR_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003004) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RSR_ECR ) </loc>
//      <o.0..0> FE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_RSR_ECR_PE  ----------------------------------
// SVD Line: 5660

//  <item> SFDITEM_FIELD__UART0_RSR_ECR_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40003004) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RSR_ECR ) </loc>
//      <o.1..1> PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_RSR_ECR_BE  ----------------------------------
// SVD Line: 5667

//  <item> SFDITEM_FIELD__UART0_RSR_ECR_BE
//    <name> BE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40003004) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RSR_ECR ) </loc>
//      <o.2..2> BE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_RSR_ECR_OE  ----------------------------------
// SVD Line: 5674

//  <item> SFDITEM_FIELD__UART0_RSR_ECR_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40003004) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RSR_ECR ) </loc>
//      <o.3..3> OE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART0_RSR_ECR  ---------------------------------
// SVD Line: 5644

//  <rtree> SFDITEM_REG__UART0_RSR_ECR
//    <name> RSR_ECR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003004) receive status register/error clear register </i>
//    <loc> ( (unsigned int)((UART0_RSR_ECR >> 0) & 0xFFFFFFFF), ((UART0_RSR_ECR = (UART0_RSR_ECR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_RSR_ECR_FE </item>
//    <item> SFDITEM_FIELD__UART0_RSR_ECR_PE </item>
//    <item> SFDITEM_FIELD__UART0_RSR_ECR_BE </item>
//    <item> SFDITEM_FIELD__UART0_RSR_ECR_OE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART0_FR  --------------------------------
// SVD Line: 5683

unsigned int UART0_FR __AT (0x40003018);



// --------------------------------  Field Item: UART0_FR_BUSY  -----------------------------------
// SVD Line: 5692

//  <item> SFDITEM_FIELD__UART0_FR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40003018) UART busy </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_FR ) </loc>
//      <o.3..3> BUSY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_FR_RXFE  -----------------------------------
// SVD Line: 5699

//  <item> SFDITEM_FIELD__UART0_FR_RXFE
//    <name> RXFE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40003018) Receive FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_FR ) </loc>
//      <o.4..4> RXFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_FR_TXFF  -----------------------------------
// SVD Line: 5706

//  <item> SFDITEM_FIELD__UART0_FR_TXFF
//    <name> TXFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40003018) Transmit FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_FR ) </loc>
//      <o.5..5> TXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_FR_RXFF  -----------------------------------
// SVD Line: 5713

//  <item> SFDITEM_FIELD__UART0_FR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40003018) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_FR ) </loc>
//      <o.6..6> RXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_FR_TXFE  -----------------------------------
// SVD Line: 5720

//  <item> SFDITEM_FIELD__UART0_FR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40003018) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_FR ) </loc>
//      <o.7..7> TXFE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART0_FR  ------------------------------------
// SVD Line: 5683

//  <rtree> SFDITEM_REG__UART0_FR
//    <name> FR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003018) flag register </i>
//    <loc> ( (unsigned int)((UART0_FR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_FR_BUSY </item>
//    <item> SFDITEM_FIELD__UART0_FR_RXFE </item>
//    <item> SFDITEM_FIELD__UART0_FR_TXFF </item>
//    <item> SFDITEM_FIELD__UART0_FR_RXFF </item>
//    <item> SFDITEM_FIELD__UART0_FR_TXFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_ILPR  -------------------------------
// SVD Line: 5729

unsigned int UART0_ILPR __AT (0x40003020);



// -----------------------------  Field Item: UART0_ILPR_ILPDVSR  ---------------------------------
// SVD Line: 5738

//  <item> SFDITEM_FIELD__UART0_ILPR_ILPDVSR
//    <name> ILPDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40003020) low-power divisor value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_ILPR >> 0) & 0xFF), ((UART0_ILPR = (UART0_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART0_ILPR  -----------------------------------
// SVD Line: 5729

//  <rtree> SFDITEM_REG__UART0_ILPR
//    <name> ILPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003020) IRDA low power counter register </i>
//    <loc> ( (unsigned int)((UART0_ILPR >> 0) & 0xFFFFFFFF), ((UART0_ILPR = (UART0_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_ILPR_ILPDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_IBRD  -------------------------------
// SVD Line: 5747

unsigned int UART0_IBRD __AT (0x40003024);



// ---------------------------  Field Item: UART0_IBRD_BAUD_DIVINT  -------------------------------
// SVD Line: 5756

//  <item> SFDITEM_FIELD__UART0_IBRD_BAUD_DIVINT
//    <name> BAUD_DIVINT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40003024) The integer baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned short)((UART0_IBRD >> 0) & 0xFFFF), ((UART0_IBRD = (UART0_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART0_IBRD  -----------------------------------
// SVD Line: 5747

//  <rtree> SFDITEM_REG__UART0_IBRD
//    <name> IBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003024) integer baudrate register </i>
//    <loc> ( (unsigned int)((UART0_IBRD >> 0) & 0xFFFFFFFF), ((UART0_IBRD = (UART0_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_IBRD_BAUD_DIVINT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_FBRD  -------------------------------
// SVD Line: 5765

unsigned int UART0_FBRD __AT (0x40003028);



// ---------------------------  Field Item: UART0_FBRD_BAUD_DIVFRAC  ------------------------------
// SVD Line: 5774

//  <item> SFDITEM_FIELD__UART0_FBRD_BAUD_DIVFRAC
//    <name> BAUD_DIVFRAC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40003028) The fractional baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_FBRD >> 0) & 0x3F), ((UART0_FBRD = (UART0_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART0_FBRD  -----------------------------------
// SVD Line: 5765

//  <rtree> SFDITEM_REG__UART0_FBRD
//    <name> FBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003028) fractional baudrate register </i>
//    <loc> ( (unsigned int)((UART0_FBRD >> 0) & 0xFFFFFFFF), ((UART0_FBRD = (UART0_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_FBRD_BAUD_DIVFRAC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART0_LCR_H  -------------------------------
// SVD Line: 5783

unsigned int UART0_LCR_H __AT (0x4000302C);



// -------------------------------  Field Item: UART0_LCR_H_BRK  ----------------------------------
// SVD Line: 5792

//  <item> SFDITEM_FIELD__UART0_LCR_H_BRK
//    <name> BRK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000302C) Send break </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_LCR_H ) </loc>
//      <o.0..0> BRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_LCR_H_PEN  ----------------------------------
// SVD Line: 5799

//  <item> SFDITEM_FIELD__UART0_LCR_H_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000302C) Parity enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_LCR_H ) </loc>
//      <o.1..1> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_LCR_H_EPS  ----------------------------------
// SVD Line: 5806

//  <item> SFDITEM_FIELD__UART0_LCR_H_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000302C) Even parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_LCR_H ) </loc>
//      <o.2..2> EPS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_LCR_H_STP2  ----------------------------------
// SVD Line: 5813

//  <item> SFDITEM_FIELD__UART0_LCR_H_STP2
//    <name> STP2 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000302C) Stop bits selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_LCR_H ) </loc>
//      <o.3..3> STP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_LCR_H_FEN  ----------------------------------
// SVD Line: 5820

//  <item> SFDITEM_FIELD__UART0_LCR_H_FEN
//    <name> FEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000302C) FIFO enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_LCR_H ) </loc>
//      <o.4..4> FEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_LCR_H_WLEN  ----------------------------------
// SVD Line: 5827

//  <item> SFDITEM_FIELD__UART0_LCR_H_WLEN
//    <name> WLEN </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4000302C) Word length </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_LCR_H >> 5) & 0x3), ((UART0_LCR_H = (UART0_LCR_H & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART0_LCR_H  ----------------------------------
// SVD Line: 5783

//  <rtree> SFDITEM_REG__UART0_LCR_H
//    <name> LCR_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000302C) line control register </i>
//    <loc> ( (unsigned int)((UART0_LCR_H >> 0) & 0xFFFFFFFF), ((UART0_LCR_H = (UART0_LCR_H & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_LCR_H_BRK </item>
//    <item> SFDITEM_FIELD__UART0_LCR_H_PEN </item>
//    <item> SFDITEM_FIELD__UART0_LCR_H_EPS </item>
//    <item> SFDITEM_FIELD__UART0_LCR_H_STP2 </item>
//    <item> SFDITEM_FIELD__UART0_LCR_H_FEN </item>
//    <item> SFDITEM_FIELD__UART0_LCR_H_WLEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART0_CR  --------------------------------
// SVD Line: 5836

unsigned int UART0_CR __AT (0x40003030);



// -------------------------------  Field Item: UART0_CR_UARTEN  ----------------------------------
// SVD Line: 5845

//  <item> SFDITEM_FIELD__UART0_CR_UARTEN
//    <name> UARTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003030) UART enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.0..0> UARTEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_CR_SIRE  -----------------------------------
// SVD Line: 5852

//  <item> SFDITEM_FIELD__UART0_CR_SIRE
//    <name> SIRE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40003030) IrDA SIR enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.1..1> SIRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_CR_SIRLP  -----------------------------------
// SVD Line: 5859

//  <item> SFDITEM_FIELD__UART0_CR_SIRLP
//    <name> SIRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40003030) Low-power IrDA SIR encoding mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.2..2> SIRLP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_CR_TXE  ------------------------------------
// SVD Line: 5866

//  <item> SFDITEM_FIELD__UART0_CR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40003030) Transmit enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.8..8> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART0_CR_RXE  ------------------------------------
// SVD Line: 5873

//  <item> SFDITEM_FIELD__UART0_CR_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40003030) Receive enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.9..9> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_CR_RTSEN  -----------------------------------
// SVD Line: 5880

//  <item> SFDITEM_FIELD__UART0_CR_RTSEN
//    <name> RTSEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40003030) RTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.14..14> RTSEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_CR_CTSEN  -----------------------------------
// SVD Line: 5887

//  <item> SFDITEM_FIELD__UART0_CR_CTSEN
//    <name> CTSEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40003030) CTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_CR ) </loc>
//      <o.15..15> CTSEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART0_CR  ------------------------------------
// SVD Line: 5836

//  <rtree> SFDITEM_REG__UART0_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003030) control register </i>
//    <loc> ( (unsigned int)((UART0_CR >> 0) & 0xFFFFFFFF), ((UART0_CR = (UART0_CR & ~(0xC307UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC307) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_CR_UARTEN </item>
//    <item> SFDITEM_FIELD__UART0_CR_SIRE </item>
//    <item> SFDITEM_FIELD__UART0_CR_SIRLP </item>
//    <item> SFDITEM_FIELD__UART0_CR_TXE </item>
//    <item> SFDITEM_FIELD__UART0_CR_RXE </item>
//    <item> SFDITEM_FIELD__UART0_CR_RTSEN </item>
//    <item> SFDITEM_FIELD__UART0_CR_CTSEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_IFLS  -------------------------------
// SVD Line: 5896

unsigned int UART0_IFLS __AT (0x40003034);



// -----------------------------  Field Item: UART0_IFLS_TXIFLSEL  --------------------------------
// SVD Line: 5905

//  <item> SFDITEM_FIELD__UART0_IFLS_TXIFLSEL
//    <name> TXIFLSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40003034) Transmit interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_IFLS >> 0) & 0x7), ((UART0_IFLS = (UART0_IFLS & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UART0_IFLS_RXIFLSEL  --------------------------------
// SVD Line: 5912

//  <item> SFDITEM_FIELD__UART0_IFLS_RXIFLSEL
//    <name> RXIFLSEL </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40003034) Receive interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_IFLS >> 3) & 0x7), ((UART0_IFLS = (UART0_IFLS & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART0_IFLS  -----------------------------------
// SVD Line: 5896

//  <rtree> SFDITEM_REG__UART0_IFLS
//    <name> IFLS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003034) interrupt fifo level select register </i>
//    <loc> ( (unsigned int)((UART0_IFLS >> 0) & 0xFFFFFFFF), ((UART0_IFLS = (UART0_IFLS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_IFLS_TXIFLSEL </item>
//    <item> SFDITEM_FIELD__UART0_IFLS_RXIFLSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_IMSC  -------------------------------
// SVD Line: 5921

unsigned int UART0_IMSC __AT (0x40003038);



// -------------------------------  Field Item: UART0_IMSC_RXIM  ----------------------------------
// SVD Line: 5930

//  <item> SFDITEM_FIELD__UART0_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40003038) Reception completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.4..4> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_IMSC_TXIM  ----------------------------------
// SVD Line: 5937

//  <item> SFDITEM_FIELD__UART0_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40003038) Transmission completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.5..5> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_IMSC_RTIM  ----------------------------------
// SVD Line: 5944

//  <item> SFDITEM_FIELD__UART0_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40003038) Receive timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.6..6> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_IMSC_FEIM  ----------------------------------
// SVD Line: 5951

//  <item> SFDITEM_FIELD__UART0_IMSC_FEIM
//    <name> FEIM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40003038) Framing error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.7..7> FEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_IMSC_PEIM  ----------------------------------
// SVD Line: 5958

//  <item> SFDITEM_FIELD__UART0_IMSC_PEIM
//    <name> PEIM </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40003038) Parity error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.8..8> PEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_IMSC_BEIM  ----------------------------------
// SVD Line: 5965

//  <item> SFDITEM_FIELD__UART0_IMSC_BEIM
//    <name> BEIM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40003038) Break error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.9..9> BEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_IMSC_OEIM  ----------------------------------
// SVD Line: 5972

//  <item> SFDITEM_FIELD__UART0_IMSC_OEIM
//    <name> OEIM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40003038) Overrun error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_IMSC ) </loc>
//      <o.10..10> OEIM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART0_IMSC  -----------------------------------
// SVD Line: 5921

//  <rtree> SFDITEM_REG__UART0_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003038) interrupt mask set/clear register </i>
//    <loc> ( (unsigned int)((UART0_IMSC >> 0) & 0xFFFFFFFF), ((UART0_IMSC = (UART0_IMSC & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__UART0_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__UART0_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__UART0_IMSC_FEIM </item>
//    <item> SFDITEM_FIELD__UART0_IMSC_PEIM </item>
//    <item> SFDITEM_FIELD__UART0_IMSC_BEIM </item>
//    <item> SFDITEM_FIELD__UART0_IMSC_OEIM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_RIS  --------------------------------
// SVD Line: 5981

unsigned int UART0_RIS __AT (0x4000303C);



// -------------------------------  Field Item: UART0_RIS_RXRIS  ----------------------------------
// SVD Line: 5990

//  <item> SFDITEM_FIELD__UART0_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000303C) Reception completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.4..4> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_RIS_TXRIS  ----------------------------------
// SVD Line: 5997

//  <item> SFDITEM_FIELD__UART0_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000303C) Transmission completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.5..5> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_RIS_RTRIS  ----------------------------------
// SVD Line: 6004

//  <item> SFDITEM_FIELD__UART0_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000303C) Receive timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.6..6> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_RIS_FERIS  ----------------------------------
// SVD Line: 6011

//  <item> SFDITEM_FIELD__UART0_RIS_FERIS
//    <name> FERIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000303C) Framing error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.7..7> FERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_RIS_PERIS  ----------------------------------
// SVD Line: 6018

//  <item> SFDITEM_FIELD__UART0_RIS_PERIS
//    <name> PERIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000303C) Parity error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.8..8> PERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_RIS_BERIS  ----------------------------------
// SVD Line: 6025

//  <item> SFDITEM_FIELD__UART0_RIS_BERIS
//    <name> BERIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000303C) Break error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.9..9> BERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_RIS_OERIS  ----------------------------------
// SVD Line: 6032

//  <item> SFDITEM_FIELD__UART0_RIS_OERIS
//    <name> OERIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000303C) Overrun error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_RIS ) </loc>
//      <o.10..10> OERIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART0_RIS  -----------------------------------
// SVD Line: 5981

//  <rtree> SFDITEM_REG__UART0_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000303C) raw interrupt status register </i>
//    <loc> ( (unsigned int)((UART0_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__UART0_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__UART0_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__UART0_RIS_FERIS </item>
//    <item> SFDITEM_FIELD__UART0_RIS_PERIS </item>
//    <item> SFDITEM_FIELD__UART0_RIS_BERIS </item>
//    <item> SFDITEM_FIELD__UART0_RIS_OERIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_MIS  --------------------------------
// SVD Line: 6041

unsigned int UART0_MIS __AT (0x40003040);



// -------------------------------  Field Item: UART0_MIS_RXMIS  ----------------------------------
// SVD Line: 6050

//  <item> SFDITEM_FIELD__UART0_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40003040) Reception completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.4..4> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_MIS_TXMIS  ----------------------------------
// SVD Line: 6057

//  <item> SFDITEM_FIELD__UART0_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40003040) Transmission completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.5..5> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_MIS_RTMIS  ----------------------------------
// SVD Line: 6064

//  <item> SFDITEM_FIELD__UART0_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40003040) Receive timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.6..6> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_MIS_FEMIS  ----------------------------------
// SVD Line: 6071

//  <item> SFDITEM_FIELD__UART0_MIS_FEMIS
//    <name> FEMIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40003040) Framing error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.7..7> FEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_MIS_PEMIS  ----------------------------------
// SVD Line: 6078

//  <item> SFDITEM_FIELD__UART0_MIS_PEMIS
//    <name> PEMIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40003040) Parity error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.8..8> PEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_MIS_BEMIS  ----------------------------------
// SVD Line: 6085

//  <item> SFDITEM_FIELD__UART0_MIS_BEMIS
//    <name> BEMIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40003040) Break error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.9..9> BEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_MIS_OEMIS  ----------------------------------
// SVD Line: 6092

//  <item> SFDITEM_FIELD__UART0_MIS_OEMIS
//    <name> OEMIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40003040) Overrun error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_MIS ) </loc>
//      <o.10..10> OEMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART0_MIS  -----------------------------------
// SVD Line: 6041

//  <rtree> SFDITEM_REG__UART0_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003040) masked interrupt status register </i>
//    <loc> ( (unsigned int)((UART0_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__UART0_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__UART0_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__UART0_MIS_FEMIS </item>
//    <item> SFDITEM_FIELD__UART0_MIS_PEMIS </item>
//    <item> SFDITEM_FIELD__UART0_MIS_BEMIS </item>
//    <item> SFDITEM_FIELD__UART0_MIS_OEMIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART0_ICR  --------------------------------
// SVD Line: 6101

unsigned int UART0_ICR __AT (0x40003044);



// -------------------------------  Field Item: UART0_ICR_RXIC  -----------------------------------
// SVD Line: 6110

//  <item> SFDITEM_FIELD__UART0_ICR_RXIC
//    <name> RXIC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40003044) Reception completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.4..4> RXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_ICR_TXIC  -----------------------------------
// SVD Line: 6117

//  <item> SFDITEM_FIELD__UART0_ICR_TXIC
//    <name> TXIC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40003044) Transmission completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.5..5> TXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_ICR_RTIC  -----------------------------------
// SVD Line: 6124

//  <item> SFDITEM_FIELD__UART0_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40003044) Receive timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.6..6> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_ICR_FEIC  -----------------------------------
// SVD Line: 6131

//  <item> SFDITEM_FIELD__UART0_ICR_FEIC
//    <name> FEIC </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40003044) Framing error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.7..7> FEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_ICR_PEIC  -----------------------------------
// SVD Line: 6138

//  <item> SFDITEM_FIELD__UART0_ICR_PEIC
//    <name> PEIC </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40003044) Parity error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.8..8> PEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_ICR_BEIC  -----------------------------------
// SVD Line: 6145

//  <item> SFDITEM_FIELD__UART0_ICR_BEIC
//    <name> BEIC </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40003044) Break error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.9..9> BEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART0_ICR_OEIC  -----------------------------------
// SVD Line: 6152

//  <item> SFDITEM_FIELD__UART0_ICR_OEIC
//    <name> OEIC </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40003044) Overrun error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_ICR ) </loc>
//      <o.10..10> OEIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART0_ICR  -----------------------------------
// SVD Line: 6101

//  <rtree> SFDITEM_REG__UART0_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40003044) interrupt clear register </i>
//    <loc> ( (unsigned int)((UART0_ICR >> 0) & 0xFFFFFFFF), ((UART0_ICR = (UART0_ICR & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_ICR_RXIC </item>
//    <item> SFDITEM_FIELD__UART0_ICR_TXIC </item>
//    <item> SFDITEM_FIELD__UART0_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__UART0_ICR_FEIC </item>
//    <item> SFDITEM_FIELD__UART0_ICR_PEIC </item>
//    <item> SFDITEM_FIELD__UART0_ICR_BEIC </item>
//    <item> SFDITEM_FIELD__UART0_ICR_OEIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART0_DMACR  -------------------------------
// SVD Line: 6161

unsigned int UART0_DMACR __AT (0x40003048);



// -----------------------------  Field Item: UART0_DMACR_RXDMAE  ---------------------------------
// SVD Line: 6170

//  <item> SFDITEM_FIELD__UART0_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003048) Receive DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART0_DMACR_TX_EN  ---------------------------------
// SVD Line: 6177

//  <item> SFDITEM_FIELD__UART0_DMACR_TX_EN
//    <name> TX_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40003048) Transmit DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DMACR ) </loc>
//      <o.1..1> TX_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART0_DMACR_DMAONERR  --------------------------------
// SVD Line: 6184

//  <item> SFDITEM_FIELD__UART0_DMACR_DMAONERR
//    <name> DMAONERR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40003048) DMAONERR </i>
//    <check> 
//      <loc> ( (unsigned int) UART0_DMACR ) </loc>
//      <o.2..2> DMAONERR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART0_DMACR  ----------------------------------
// SVD Line: 6161

//  <rtree> SFDITEM_REG__UART0_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003048) DMA control register </i>
//    <loc> ( (unsigned int)((UART0_DMACR >> 0) & 0xFFFFFFFF), ((UART0_DMACR = (UART0_DMACR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART0_DMACR_RXDMAE </item>
//    <item> SFDITEM_FIELD__UART0_DMACR_TX_EN </item>
//    <item> SFDITEM_FIELD__UART0_DMACR_DMAONERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART0_PERIPHID0  -----------------------------
// SVD Line: 6193

unsigned int UART0_PERIPHID0 __AT (0x40003FE0);



// -------------------------  Field Item: UART0_PERIPHID0_PARTNUMBER0  ----------------------------
// SVD Line: 6202

//  <item> SFDITEM_FIELD__UART0_PERIPHID0_PARTNUMBER0
//    <name> PARTNUMBER0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FE0) PARTNUMBER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PERIPHID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PERIPHID0  --------------------------------
// SVD Line: 6193

//  <rtree> SFDITEM_REG__UART0_PERIPHID0
//    <name> PERIPHID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FE0) ID register </i>
//    <loc> ( (unsigned int)((UART0_PERIPHID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PERIPHID0_PARTNUMBER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART0_PERIPHID1  -----------------------------
// SVD Line: 6211

unsigned int UART0_PERIPHID1 __AT (0x40003FE4);



// -------------------------  Field Item: UART0_PERIPHID1_PARTNUMBER1  ----------------------------
// SVD Line: 6220

//  <item> SFDITEM_FIELD__UART0_PERIPHID1_PARTNUMBER1
//    <name> PARTNUMBER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40003FE4) PARTNUMBER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PERIPHID1 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART0_PERIPHID1_DESIGNER0  -----------------------------
// SVD Line: 6227

//  <item> SFDITEM_FIELD__UART0_PERIPHID1_DESIGNER0
//    <name> DESIGNER0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40003FE4) DESIGNER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PERIPHID1 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PERIPHID1  --------------------------------
// SVD Line: 6211

//  <rtree> SFDITEM_REG__UART0_PERIPHID1
//    <name> PERIPHID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FE4) ID register </i>
//    <loc> ( (unsigned int)((UART0_PERIPHID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PERIPHID1_PARTNUMBER1 </item>
//    <item> SFDITEM_FIELD__UART0_PERIPHID1_DESIGNER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART0_PERIPHID2  -----------------------------
// SVD Line: 6236

unsigned int UART0_PERIPHID2 __AT (0x40003FE8);



// --------------------------  Field Item: UART0_PERIPHID2_DESIGNER1  -----------------------------
// SVD Line: 6245

//  <item> SFDITEM_FIELD__UART0_PERIPHID2_DESIGNER1
//    <name> DESIGNER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40003FE8) DESIGNER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PERIPHID2 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART0_PERIPHID2_REVISION0  -----------------------------
// SVD Line: 6252

//  <item> SFDITEM_FIELD__UART0_PERIPHID2_REVISION0
//    <name> REVISION0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40003FE8) REVISION0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PERIPHID2 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PERIPHID2  --------------------------------
// SVD Line: 6236

//  <rtree> SFDITEM_REG__UART0_PERIPHID2
//    <name> PERIPHID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FE8) ID register </i>
//    <loc> ( (unsigned int)((UART0_PERIPHID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PERIPHID2_DESIGNER1 </item>
//    <item> SFDITEM_FIELD__UART0_PERIPHID2_REVISION0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART0_PERIPHID3  -----------------------------
// SVD Line: 6261

unsigned int UART0_PERIPHID3 __AT (0x40003FEC);



// ------------------------  Field Item: UART0_PERIPHID3_CONFIGURATION  ---------------------------
// SVD Line: 6270

//  <item> SFDITEM_FIELD__UART0_PERIPHID3_CONFIGURATION
//    <name> CONFIGURATION </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FEC) CONFIGURATION </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PERIPHID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PERIPHID3  --------------------------------
// SVD Line: 6261

//  <rtree> SFDITEM_REG__UART0_PERIPHID3
//    <name> PERIPHID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FEC) ID register </i>
//    <loc> ( (unsigned int)((UART0_PERIPHID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PERIPHID3_CONFIGURATION </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_PCELLID0  -----------------------------
// SVD Line: 6279

unsigned int UART0_PCELLID0 __AT (0x40003FD0);



// ---------------------------  Field Item: UART0_PCELLID0_CELLID0  -------------------------------
// SVD Line: 6288

//  <item> SFDITEM_FIELD__UART0_PCELLID0_CELLID0
//    <name> CELLID0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FD0) CELLID0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PCELLID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PCELLID0  ---------------------------------
// SVD Line: 6279

//  <rtree> SFDITEM_REG__UART0_PCELLID0
//    <name> PCELLID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FD0) ID register </i>
//    <loc> ( (unsigned int)((UART0_PCELLID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PCELLID0_CELLID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_PCELLID1  -----------------------------
// SVD Line: 6297

unsigned int UART0_PCELLID1 __AT (0x40003FD4);



// ---------------------------  Field Item: UART0_PCELLID1_CELLID1  -------------------------------
// SVD Line: 6306

//  <item> SFDITEM_FIELD__UART0_PCELLID1_CELLID1
//    <name> CELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FD4) CELLID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART0_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PCELLID1  ---------------------------------
// SVD Line: 6297

//  <rtree> SFDITEM_REG__UART0_PCELLID1
//    <name> PCELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003FD4) ID register </i>
//    <loc> ( (unsigned int)((UART0_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PCELLID1_CELLID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_PCELLID2  -----------------------------
// SVD Line: 6315

unsigned char UART0_PCELLID2 __AT (0x40003FD8);



// ---------------------------  Field Item: UART0_PCELLID2_CELLID2  -------------------------------
// SVD Line: 6324

//  <item> SFDITEM_FIELD__UART0_PCELLID2_CELLID2
//    <name> CELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FD8) CELLID2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PCELLID2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PCELLID2  ---------------------------------
// SVD Line: 6315

//  <rtree> SFDITEM_REG__UART0_PCELLID2
//    <name> PCELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FD8) ID register </i>
//    <loc> ( (unsigned char)((UART0_PCELLID2 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PCELLID2_CELLID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART0_PCELLID3  -----------------------------
// SVD Line: 6333

unsigned char UART0_PCELLID3 __AT (0x40003FDC);



// ---------------------------  Field Item: UART0_PCELLID3_CELLID3  -------------------------------
// SVD Line: 6342

//  <item> SFDITEM_FIELD__UART0_PCELLID3_CELLID3
//    <name> CELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FDC) CELLID3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART0_PCELLID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART0_PCELLID3  ---------------------------------
// SVD Line: 6333

//  <rtree> SFDITEM_REG__UART0_PCELLID3
//    <name> PCELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40003FDC) ID register </i>
//    <loc> ( (unsigned char)((UART0_PCELLID3 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART0_PCELLID3_CELLID3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART0  -------------------------------------
// SVD Line: 5584

//  <view> UART0
//    <name> UART0 </name>
//    <item> SFDITEM_REG__UART0_DR </item>
//    <item> SFDITEM_REG__UART0_RSR_ECR </item>
//    <item> SFDITEM_REG__UART0_FR </item>
//    <item> SFDITEM_REG__UART0_ILPR </item>
//    <item> SFDITEM_REG__UART0_IBRD </item>
//    <item> SFDITEM_REG__UART0_FBRD </item>
//    <item> SFDITEM_REG__UART0_LCR_H </item>
//    <item> SFDITEM_REG__UART0_CR </item>
//    <item> SFDITEM_REG__UART0_IFLS </item>
//    <item> SFDITEM_REG__UART0_IMSC </item>
//    <item> SFDITEM_REG__UART0_RIS </item>
//    <item> SFDITEM_REG__UART0_MIS </item>
//    <item> SFDITEM_REG__UART0_ICR </item>
//    <item> SFDITEM_REG__UART0_DMACR </item>
//    <item> SFDITEM_REG__UART0_PERIPHID0 </item>
//    <item> SFDITEM_REG__UART0_PERIPHID1 </item>
//    <item> SFDITEM_REG__UART0_PERIPHID2 </item>
//    <item> SFDITEM_REG__UART0_PERIPHID3 </item>
//    <item> SFDITEM_REG__UART0_PCELLID0 </item>
//    <item> SFDITEM_REG__UART0_PCELLID1 </item>
//    <item> SFDITEM_REG__UART0_PCELLID2 </item>
//    <item> SFDITEM_REG__UART0_PCELLID3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: UART1_DR  --------------------------------
// SVD Line: 6367

unsigned int UART1_DR __AT (0x40004000);



// --------------------------------  Field Item: UART1_DR_DATA  -----------------------------------
// SVD Line: 6376

//  <item> SFDITEM_FIELD__UART1_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40004000) Transmit data character/Receive data character </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_DR >> 0) & 0xFF), ((UART1_DR = (UART1_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: UART1_DR_FE  ------------------------------------
// SVD Line: 6383

//  <item> SFDITEM_FIELD__UART1_DR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40004000) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DR ) </loc>
//      <o.8..8> FE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART1_DR_PE  ------------------------------------
// SVD Line: 6390

//  <item> SFDITEM_FIELD__UART1_DR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40004000) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DR ) </loc>
//      <o.9..9> PE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART1_DR_BE  ------------------------------------
// SVD Line: 6397

//  <item> SFDITEM_FIELD__UART1_DR_BE
//    <name> BE </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40004000) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DR ) </loc>
//      <o.10..10> BE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART1_DR_OE  ------------------------------------
// SVD Line: 6404

//  <item> SFDITEM_FIELD__UART1_DR_OE
//    <name> OE </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40004000) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DR ) </loc>
//      <o.11..11> OE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART1_DR  ------------------------------------
// SVD Line: 6367

//  <rtree> SFDITEM_REG__UART1_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004000) data register </i>
//    <loc> ( (unsigned int)((UART1_DR >> 0) & 0xFFFFFFFF), ((UART1_DR = (UART1_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_DR_DATA </item>
//    <item> SFDITEM_FIELD__UART1_DR_FE </item>
//    <item> SFDITEM_FIELD__UART1_DR_PE </item>
//    <item> SFDITEM_FIELD__UART1_DR_BE </item>
//    <item> SFDITEM_FIELD__UART1_DR_OE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_RSR_ECR  ------------------------------
// SVD Line: 6413

unsigned int UART1_RSR_ECR __AT (0x40004004);



// ------------------------------  Field Item: UART1_RSR_ECR_FE  ----------------------------------
// SVD Line: 6422

//  <item> SFDITEM_FIELD__UART1_RSR_ECR_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004004) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RSR_ECR ) </loc>
//      <o.0..0> FE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_RSR_ECR_PE  ----------------------------------
// SVD Line: 6429

//  <item> SFDITEM_FIELD__UART1_RSR_ECR_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004004) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RSR_ECR ) </loc>
//      <o.1..1> PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_RSR_ECR_BE  ----------------------------------
// SVD Line: 6436

//  <item> SFDITEM_FIELD__UART1_RSR_ECR_BE
//    <name> BE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004004) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RSR_ECR ) </loc>
//      <o.2..2> BE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_RSR_ECR_OE  ----------------------------------
// SVD Line: 6443

//  <item> SFDITEM_FIELD__UART1_RSR_ECR_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40004004) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RSR_ECR ) </loc>
//      <o.3..3> OE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART1_RSR_ECR  ---------------------------------
// SVD Line: 6413

//  <rtree> SFDITEM_REG__UART1_RSR_ECR
//    <name> RSR_ECR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004004) receive status register/error clear register </i>
//    <loc> ( (unsigned int)((UART1_RSR_ECR >> 0) & 0xFFFFFFFF), ((UART1_RSR_ECR = (UART1_RSR_ECR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_RSR_ECR_FE </item>
//    <item> SFDITEM_FIELD__UART1_RSR_ECR_PE </item>
//    <item> SFDITEM_FIELD__UART1_RSR_ECR_BE </item>
//    <item> SFDITEM_FIELD__UART1_RSR_ECR_OE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART1_FR  --------------------------------
// SVD Line: 6452

unsigned int UART1_FR __AT (0x40004018);



// --------------------------------  Field Item: UART1_FR_BUSY  -----------------------------------
// SVD Line: 6461

//  <item> SFDITEM_FIELD__UART1_FR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40004018) UART busy </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_FR ) </loc>
//      <o.3..3> BUSY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_FR_RXFE  -----------------------------------
// SVD Line: 6468

//  <item> SFDITEM_FIELD__UART1_FR_RXFE
//    <name> RXFE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40004018) Receive FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_FR ) </loc>
//      <o.4..4> RXFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_FR_TXFF  -----------------------------------
// SVD Line: 6475

//  <item> SFDITEM_FIELD__UART1_FR_TXFF
//    <name> TXFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40004018) Transmit FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_FR ) </loc>
//      <o.5..5> TXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_FR_RXFF  -----------------------------------
// SVD Line: 6482

//  <item> SFDITEM_FIELD__UART1_FR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40004018) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_FR ) </loc>
//      <o.6..6> RXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_FR_TXFE  -----------------------------------
// SVD Line: 6489

//  <item> SFDITEM_FIELD__UART1_FR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40004018) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_FR ) </loc>
//      <o.7..7> TXFE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART1_FR  ------------------------------------
// SVD Line: 6452

//  <rtree> SFDITEM_REG__UART1_FR
//    <name> FR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004018) flag register </i>
//    <loc> ( (unsigned int)((UART1_FR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_FR_BUSY </item>
//    <item> SFDITEM_FIELD__UART1_FR_RXFE </item>
//    <item> SFDITEM_FIELD__UART1_FR_TXFF </item>
//    <item> SFDITEM_FIELD__UART1_FR_RXFF </item>
//    <item> SFDITEM_FIELD__UART1_FR_TXFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_ILPR  -------------------------------
// SVD Line: 6498

unsigned int UART1_ILPR __AT (0x40004020);



// -----------------------------  Field Item: UART1_ILPR_ILPDVSR  ---------------------------------
// SVD Line: 6507

//  <item> SFDITEM_FIELD__UART1_ILPR_ILPDVSR
//    <name> ILPDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40004020) low-power divisor value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_ILPR >> 0) & 0xFF), ((UART1_ILPR = (UART1_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART1_ILPR  -----------------------------------
// SVD Line: 6498

//  <rtree> SFDITEM_REG__UART1_ILPR
//    <name> ILPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004020) IRDA low power counter register </i>
//    <loc> ( (unsigned int)((UART1_ILPR >> 0) & 0xFFFFFFFF), ((UART1_ILPR = (UART1_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_ILPR_ILPDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_IBRD  -------------------------------
// SVD Line: 6516

unsigned int UART1_IBRD __AT (0x40004024);



// ---------------------------  Field Item: UART1_IBRD_BAUD_DIVINT  -------------------------------
// SVD Line: 6525

//  <item> SFDITEM_FIELD__UART1_IBRD_BAUD_DIVINT
//    <name> BAUD_DIVINT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40004024) The integer baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned short)((UART1_IBRD >> 0) & 0xFFFF), ((UART1_IBRD = (UART1_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART1_IBRD  -----------------------------------
// SVD Line: 6516

//  <rtree> SFDITEM_REG__UART1_IBRD
//    <name> IBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004024) integer baudrate register </i>
//    <loc> ( (unsigned int)((UART1_IBRD >> 0) & 0xFFFFFFFF), ((UART1_IBRD = (UART1_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_IBRD_BAUD_DIVINT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_FBRD  -------------------------------
// SVD Line: 6534

unsigned int UART1_FBRD __AT (0x40004028);



// ---------------------------  Field Item: UART1_FBRD_BAUD_DIVFRAC  ------------------------------
// SVD Line: 6543

//  <item> SFDITEM_FIELD__UART1_FBRD_BAUD_DIVFRAC
//    <name> BAUD_DIVFRAC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40004028) The fractional baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_FBRD >> 0) & 0x3F), ((UART1_FBRD = (UART1_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART1_FBRD  -----------------------------------
// SVD Line: 6534

//  <rtree> SFDITEM_REG__UART1_FBRD
//    <name> FBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004028) fractional baudrate register </i>
//    <loc> ( (unsigned int)((UART1_FBRD >> 0) & 0xFFFFFFFF), ((UART1_FBRD = (UART1_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_FBRD_BAUD_DIVFRAC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART1_LCR_H  -------------------------------
// SVD Line: 6552

unsigned int UART1_LCR_H __AT (0x4000402C);



// -------------------------------  Field Item: UART1_LCR_H_BRK  ----------------------------------
// SVD Line: 6561

//  <item> SFDITEM_FIELD__UART1_LCR_H_BRK
//    <name> BRK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000402C) Send break </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_LCR_H ) </loc>
//      <o.0..0> BRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_LCR_H_PEN  ----------------------------------
// SVD Line: 6568

//  <item> SFDITEM_FIELD__UART1_LCR_H_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000402C) Parity enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_LCR_H ) </loc>
//      <o.1..1> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_LCR_H_EPS  ----------------------------------
// SVD Line: 6575

//  <item> SFDITEM_FIELD__UART1_LCR_H_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000402C) Even parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_LCR_H ) </loc>
//      <o.2..2> EPS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_LCR_H_STP2  ----------------------------------
// SVD Line: 6582

//  <item> SFDITEM_FIELD__UART1_LCR_H_STP2
//    <name> STP2 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000402C) Stop bits selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_LCR_H ) </loc>
//      <o.3..3> STP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_LCR_H_FEN  ----------------------------------
// SVD Line: 6589

//  <item> SFDITEM_FIELD__UART1_LCR_H_FEN
//    <name> FEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000402C) FIFO enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_LCR_H ) </loc>
//      <o.4..4> FEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_LCR_H_WLEN  ----------------------------------
// SVD Line: 6596

//  <item> SFDITEM_FIELD__UART1_LCR_H_WLEN
//    <name> WLEN </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4000402C) Word length </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_LCR_H >> 5) & 0x3), ((UART1_LCR_H = (UART1_LCR_H & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART1_LCR_H  ----------------------------------
// SVD Line: 6552

//  <rtree> SFDITEM_REG__UART1_LCR_H
//    <name> LCR_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000402C) line control register </i>
//    <loc> ( (unsigned int)((UART1_LCR_H >> 0) & 0xFFFFFFFF), ((UART1_LCR_H = (UART1_LCR_H & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_LCR_H_BRK </item>
//    <item> SFDITEM_FIELD__UART1_LCR_H_PEN </item>
//    <item> SFDITEM_FIELD__UART1_LCR_H_EPS </item>
//    <item> SFDITEM_FIELD__UART1_LCR_H_STP2 </item>
//    <item> SFDITEM_FIELD__UART1_LCR_H_FEN </item>
//    <item> SFDITEM_FIELD__UART1_LCR_H_WLEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART1_CR  --------------------------------
// SVD Line: 6605

unsigned int UART1_CR __AT (0x40004030);



// -------------------------------  Field Item: UART1_CR_UARTEN  ----------------------------------
// SVD Line: 6614

//  <item> SFDITEM_FIELD__UART1_CR_UARTEN
//    <name> UARTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004030) UART enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.0..0> UARTEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_CR_SIRE  -----------------------------------
// SVD Line: 6621

//  <item> SFDITEM_FIELD__UART1_CR_SIRE
//    <name> SIRE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004030) IrDA SIR enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.1..1> SIRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_CR_SIRLP  -----------------------------------
// SVD Line: 6628

//  <item> SFDITEM_FIELD__UART1_CR_SIRLP
//    <name> SIRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004030) Low-power IrDA SIR encoding mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.2..2> SIRLP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_CR_TXE  ------------------------------------
// SVD Line: 6635

//  <item> SFDITEM_FIELD__UART1_CR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004030) Transmit enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.8..8> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART1_CR_RXE  ------------------------------------
// SVD Line: 6642

//  <item> SFDITEM_FIELD__UART1_CR_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004030) Receive enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.9..9> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_CR_RTSEN  -----------------------------------
// SVD Line: 6649

//  <item> SFDITEM_FIELD__UART1_CR_RTSEN
//    <name> RTSEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40004030) RTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.14..14> RTSEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_CR_CTSEN  -----------------------------------
// SVD Line: 6656

//  <item> SFDITEM_FIELD__UART1_CR_CTSEN
//    <name> CTSEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40004030) CTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_CR ) </loc>
//      <o.15..15> CTSEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART1_CR  ------------------------------------
// SVD Line: 6605

//  <rtree> SFDITEM_REG__UART1_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004030) control register </i>
//    <loc> ( (unsigned int)((UART1_CR >> 0) & 0xFFFFFFFF), ((UART1_CR = (UART1_CR & ~(0xC307UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC307) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_CR_UARTEN </item>
//    <item> SFDITEM_FIELD__UART1_CR_SIRE </item>
//    <item> SFDITEM_FIELD__UART1_CR_SIRLP </item>
//    <item> SFDITEM_FIELD__UART1_CR_TXE </item>
//    <item> SFDITEM_FIELD__UART1_CR_RXE </item>
//    <item> SFDITEM_FIELD__UART1_CR_RTSEN </item>
//    <item> SFDITEM_FIELD__UART1_CR_CTSEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_IFLS  -------------------------------
// SVD Line: 6665

unsigned int UART1_IFLS __AT (0x40004034);



// -----------------------------  Field Item: UART1_IFLS_TXIFLSEL  --------------------------------
// SVD Line: 6674

//  <item> SFDITEM_FIELD__UART1_IFLS_TXIFLSEL
//    <name> TXIFLSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40004034) Transmit interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_IFLS >> 0) & 0x7), ((UART1_IFLS = (UART1_IFLS & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UART1_IFLS_RXIFLSEL  --------------------------------
// SVD Line: 6681

//  <item> SFDITEM_FIELD__UART1_IFLS_RXIFLSEL
//    <name> RXIFLSEL </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40004034) Receive interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_IFLS >> 3) & 0x7), ((UART1_IFLS = (UART1_IFLS & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART1_IFLS  -----------------------------------
// SVD Line: 6665

//  <rtree> SFDITEM_REG__UART1_IFLS
//    <name> IFLS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004034) interrupt fifo level select register </i>
//    <loc> ( (unsigned int)((UART1_IFLS >> 0) & 0xFFFFFFFF), ((UART1_IFLS = (UART1_IFLS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_IFLS_TXIFLSEL </item>
//    <item> SFDITEM_FIELD__UART1_IFLS_RXIFLSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_IMSC  -------------------------------
// SVD Line: 6690

unsigned int UART1_IMSC __AT (0x40004038);



// -------------------------------  Field Item: UART1_IMSC_RXIM  ----------------------------------
// SVD Line: 6699

//  <item> SFDITEM_FIELD__UART1_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40004038) Reception completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.4..4> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_IMSC_TXIM  ----------------------------------
// SVD Line: 6706

//  <item> SFDITEM_FIELD__UART1_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40004038) Transmission completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.5..5> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_IMSC_RTIM  ----------------------------------
// SVD Line: 6713

//  <item> SFDITEM_FIELD__UART1_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40004038) Receive timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.6..6> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_IMSC_FEIM  ----------------------------------
// SVD Line: 6720

//  <item> SFDITEM_FIELD__UART1_IMSC_FEIM
//    <name> FEIM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40004038) Framing error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.7..7> FEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_IMSC_PEIM  ----------------------------------
// SVD Line: 6727

//  <item> SFDITEM_FIELD__UART1_IMSC_PEIM
//    <name> PEIM </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40004038) Parity error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.8..8> PEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_IMSC_BEIM  ----------------------------------
// SVD Line: 6734

//  <item> SFDITEM_FIELD__UART1_IMSC_BEIM
//    <name> BEIM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40004038) Break error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.9..9> BEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_IMSC_OEIM  ----------------------------------
// SVD Line: 6741

//  <item> SFDITEM_FIELD__UART1_IMSC_OEIM
//    <name> OEIM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40004038) Overrun error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_IMSC ) </loc>
//      <o.10..10> OEIM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART1_IMSC  -----------------------------------
// SVD Line: 6690

//  <rtree> SFDITEM_REG__UART1_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004038) interrupt mask set/clear register </i>
//    <loc> ( (unsigned int)((UART1_IMSC >> 0) & 0xFFFFFFFF), ((UART1_IMSC = (UART1_IMSC & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__UART1_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__UART1_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__UART1_IMSC_FEIM </item>
//    <item> SFDITEM_FIELD__UART1_IMSC_PEIM </item>
//    <item> SFDITEM_FIELD__UART1_IMSC_BEIM </item>
//    <item> SFDITEM_FIELD__UART1_IMSC_OEIM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_RIS  --------------------------------
// SVD Line: 6750

unsigned int UART1_RIS __AT (0x4000403C);



// -------------------------------  Field Item: UART1_RIS_RXRIS  ----------------------------------
// SVD Line: 6759

//  <item> SFDITEM_FIELD__UART1_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000403C) Reception completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.4..4> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_RIS_TXRIS  ----------------------------------
// SVD Line: 6766

//  <item> SFDITEM_FIELD__UART1_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000403C) Transmission completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.5..5> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_RIS_RTRIS  ----------------------------------
// SVD Line: 6773

//  <item> SFDITEM_FIELD__UART1_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000403C) Receive timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.6..6> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_RIS_FERIS  ----------------------------------
// SVD Line: 6780

//  <item> SFDITEM_FIELD__UART1_RIS_FERIS
//    <name> FERIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000403C) Framing error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.7..7> FERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_RIS_PERIS  ----------------------------------
// SVD Line: 6787

//  <item> SFDITEM_FIELD__UART1_RIS_PERIS
//    <name> PERIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000403C) Parity error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.8..8> PERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_RIS_BERIS  ----------------------------------
// SVD Line: 6794

//  <item> SFDITEM_FIELD__UART1_RIS_BERIS
//    <name> BERIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4000403C) Break error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.9..9> BERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_RIS_OERIS  ----------------------------------
// SVD Line: 6801

//  <item> SFDITEM_FIELD__UART1_RIS_OERIS
//    <name> OERIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4000403C) Overrun error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_RIS ) </loc>
//      <o.10..10> OERIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART1_RIS  -----------------------------------
// SVD Line: 6750

//  <rtree> SFDITEM_REG__UART1_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000403C) raw interrupt status register </i>
//    <loc> ( (unsigned int)((UART1_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__UART1_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__UART1_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__UART1_RIS_FERIS </item>
//    <item> SFDITEM_FIELD__UART1_RIS_PERIS </item>
//    <item> SFDITEM_FIELD__UART1_RIS_BERIS </item>
//    <item> SFDITEM_FIELD__UART1_RIS_OERIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_MIS  --------------------------------
// SVD Line: 6810

unsigned int UART1_MIS __AT (0x40004040);



// -------------------------------  Field Item: UART1_MIS_RXMIS  ----------------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__UART1_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40004040) Reception completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.4..4> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_MIS_TXMIS  ----------------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__UART1_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40004040) Transmission completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.5..5> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_MIS_RTMIS  ----------------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__UART1_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40004040) Receive timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.6..6> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_MIS_FEMIS  ----------------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__UART1_MIS_FEMIS
//    <name> FEMIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40004040) Framing error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.7..7> FEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_MIS_PEMIS  ----------------------------------
// SVD Line: 6847

//  <item> SFDITEM_FIELD__UART1_MIS_PEMIS
//    <name> PEMIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40004040) Parity error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.8..8> PEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_MIS_BEMIS  ----------------------------------
// SVD Line: 6854

//  <item> SFDITEM_FIELD__UART1_MIS_BEMIS
//    <name> BEMIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40004040) Break error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.9..9> BEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_MIS_OEMIS  ----------------------------------
// SVD Line: 6861

//  <item> SFDITEM_FIELD__UART1_MIS_OEMIS
//    <name> OEMIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40004040) Overrun error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_MIS ) </loc>
//      <o.10..10> OEMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART1_MIS  -----------------------------------
// SVD Line: 6810

//  <rtree> SFDITEM_REG__UART1_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004040) masked interrupt status register </i>
//    <loc> ( (unsigned int)((UART1_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__UART1_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__UART1_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__UART1_MIS_FEMIS </item>
//    <item> SFDITEM_FIELD__UART1_MIS_PEMIS </item>
//    <item> SFDITEM_FIELD__UART1_MIS_BEMIS </item>
//    <item> SFDITEM_FIELD__UART1_MIS_OEMIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART1_ICR  --------------------------------
// SVD Line: 6870

unsigned int UART1_ICR __AT (0x40004044);



// -------------------------------  Field Item: UART1_ICR_RXIC  -----------------------------------
// SVD Line: 6879

//  <item> SFDITEM_FIELD__UART1_ICR_RXIC
//    <name> RXIC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40004044) Reception completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.4..4> RXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_ICR_TXIC  -----------------------------------
// SVD Line: 6886

//  <item> SFDITEM_FIELD__UART1_ICR_TXIC
//    <name> TXIC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40004044) Transmission completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.5..5> TXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_ICR_RTIC  -----------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__UART1_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40004044) Receive timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.6..6> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_ICR_FEIC  -----------------------------------
// SVD Line: 6900

//  <item> SFDITEM_FIELD__UART1_ICR_FEIC
//    <name> FEIC </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40004044) Framing error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.7..7> FEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_ICR_PEIC  -----------------------------------
// SVD Line: 6907

//  <item> SFDITEM_FIELD__UART1_ICR_PEIC
//    <name> PEIC </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40004044) Parity error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.8..8> PEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_ICR_BEIC  -----------------------------------
// SVD Line: 6914

//  <item> SFDITEM_FIELD__UART1_ICR_BEIC
//    <name> BEIC </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40004044) Break error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.9..9> BEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART1_ICR_OEIC  -----------------------------------
// SVD Line: 6921

//  <item> SFDITEM_FIELD__UART1_ICR_OEIC
//    <name> OEIC </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40004044) Overrun error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_ICR ) </loc>
//      <o.10..10> OEIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART1_ICR  -----------------------------------
// SVD Line: 6870

//  <rtree> SFDITEM_REG__UART1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40004044) interrupt clear register </i>
//    <loc> ( (unsigned int)((UART1_ICR >> 0) & 0xFFFFFFFF), ((UART1_ICR = (UART1_ICR & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_ICR_RXIC </item>
//    <item> SFDITEM_FIELD__UART1_ICR_TXIC </item>
//    <item> SFDITEM_FIELD__UART1_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__UART1_ICR_FEIC </item>
//    <item> SFDITEM_FIELD__UART1_ICR_PEIC </item>
//    <item> SFDITEM_FIELD__UART1_ICR_BEIC </item>
//    <item> SFDITEM_FIELD__UART1_ICR_OEIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART1_DMACR  -------------------------------
// SVD Line: 6930

unsigned int UART1_DMACR __AT (0x40004048);



// -----------------------------  Field Item: UART1_DMACR_RXDMAE  ---------------------------------
// SVD Line: 6939

//  <item> SFDITEM_FIELD__UART1_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40004048) Receive DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART1_DMACR_TX_EN  ---------------------------------
// SVD Line: 6946

//  <item> SFDITEM_FIELD__UART1_DMACR_TX_EN
//    <name> TX_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40004048) Transmit DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DMACR ) </loc>
//      <o.1..1> TX_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART1_DMACR_DMAONERR  --------------------------------
// SVD Line: 6953

//  <item> SFDITEM_FIELD__UART1_DMACR_DMAONERR
//    <name> DMAONERR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40004048) DMAONERR </i>
//    <check> 
//      <loc> ( (unsigned int) UART1_DMACR ) </loc>
//      <o.2..2> DMAONERR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART1_DMACR  ----------------------------------
// SVD Line: 6930

//  <rtree> SFDITEM_REG__UART1_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40004048) DMA control register </i>
//    <loc> ( (unsigned int)((UART1_DMACR >> 0) & 0xFFFFFFFF), ((UART1_DMACR = (UART1_DMACR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART1_DMACR_RXDMAE </item>
//    <item> SFDITEM_FIELD__UART1_DMACR_TX_EN </item>
//    <item> SFDITEM_FIELD__UART1_DMACR_DMAONERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART1_PERIPHID0  -----------------------------
// SVD Line: 6962

unsigned int UART1_PERIPHID0 __AT (0x40004FE0);



// -------------------------  Field Item: UART1_PERIPHID0_PARTNUMBER0  ----------------------------
// SVD Line: 6971

//  <item> SFDITEM_FIELD__UART1_PERIPHID0_PARTNUMBER0
//    <name> PARTNUMBER0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FE0) PARTNUMBER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PERIPHID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PERIPHID0  --------------------------------
// SVD Line: 6962

//  <rtree> SFDITEM_REG__UART1_PERIPHID0
//    <name> PERIPHID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FE0) ID register </i>
//    <loc> ( (unsigned int)((UART1_PERIPHID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PERIPHID0_PARTNUMBER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART1_PERIPHID1  -----------------------------
// SVD Line: 6980

unsigned int UART1_PERIPHID1 __AT (0x40004FE4);



// -------------------------  Field Item: UART1_PERIPHID1_PARTNUMBER1  ----------------------------
// SVD Line: 6989

//  <item> SFDITEM_FIELD__UART1_PERIPHID1_PARTNUMBER1
//    <name> PARTNUMBER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40004FE4) PARTNUMBER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PERIPHID1 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART1_PERIPHID1_DESIGNER0  -----------------------------
// SVD Line: 6996

//  <item> SFDITEM_FIELD__UART1_PERIPHID1_DESIGNER0
//    <name> DESIGNER0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40004FE4) DESIGNER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PERIPHID1 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PERIPHID1  --------------------------------
// SVD Line: 6980

//  <rtree> SFDITEM_REG__UART1_PERIPHID1
//    <name> PERIPHID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FE4) ID register </i>
//    <loc> ( (unsigned int)((UART1_PERIPHID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PERIPHID1_PARTNUMBER1 </item>
//    <item> SFDITEM_FIELD__UART1_PERIPHID1_DESIGNER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART1_PERIPHID2  -----------------------------
// SVD Line: 7005

unsigned int UART1_PERIPHID2 __AT (0x40004FE8);



// --------------------------  Field Item: UART1_PERIPHID2_DESIGNER1  -----------------------------
// SVD Line: 7014

//  <item> SFDITEM_FIELD__UART1_PERIPHID2_DESIGNER1
//    <name> DESIGNER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40004FE8) DESIGNER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PERIPHID2 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART1_PERIPHID2_REVISION0  -----------------------------
// SVD Line: 7021

//  <item> SFDITEM_FIELD__UART1_PERIPHID2_REVISION0
//    <name> REVISION0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40004FE8) REVISION0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PERIPHID2 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PERIPHID2  --------------------------------
// SVD Line: 7005

//  <rtree> SFDITEM_REG__UART1_PERIPHID2
//    <name> PERIPHID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FE8) ID register </i>
//    <loc> ( (unsigned int)((UART1_PERIPHID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PERIPHID2_DESIGNER1 </item>
//    <item> SFDITEM_FIELD__UART1_PERIPHID2_REVISION0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART1_PERIPHID3  -----------------------------
// SVD Line: 7030

unsigned int UART1_PERIPHID3 __AT (0x40004FEC);



// ------------------------  Field Item: UART1_PERIPHID3_CONFIGURATION  ---------------------------
// SVD Line: 7039

//  <item> SFDITEM_FIELD__UART1_PERIPHID3_CONFIGURATION
//    <name> CONFIGURATION </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FEC) CONFIGURATION </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PERIPHID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PERIPHID3  --------------------------------
// SVD Line: 7030

//  <rtree> SFDITEM_REG__UART1_PERIPHID3
//    <name> PERIPHID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FEC) ID register </i>
//    <loc> ( (unsigned int)((UART1_PERIPHID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PERIPHID3_CONFIGURATION </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_PCELLID0  -----------------------------
// SVD Line: 7048

unsigned int UART1_PCELLID0 __AT (0x40004FD0);



// ---------------------------  Field Item: UART1_PCELLID0_CELLID0  -------------------------------
// SVD Line: 7057

//  <item> SFDITEM_FIELD__UART1_PCELLID0_CELLID0
//    <name> CELLID0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FD0) CELLID0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PCELLID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PCELLID0  ---------------------------------
// SVD Line: 7048

//  <rtree> SFDITEM_REG__UART1_PCELLID0
//    <name> PCELLID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FD0) ID register </i>
//    <loc> ( (unsigned int)((UART1_PCELLID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PCELLID0_CELLID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_PCELLID1  -----------------------------
// SVD Line: 7066

unsigned int UART1_PCELLID1 __AT (0x40004FD4);



// ---------------------------  Field Item: UART1_PCELLID1_CELLID1  -------------------------------
// SVD Line: 7075

//  <item> SFDITEM_FIELD__UART1_PCELLID1_CELLID1
//    <name> CELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FD4) CELLID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART1_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PCELLID1  ---------------------------------
// SVD Line: 7066

//  <rtree> SFDITEM_REG__UART1_PCELLID1
//    <name> PCELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40004FD4) ID register </i>
//    <loc> ( (unsigned int)((UART1_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PCELLID1_CELLID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_PCELLID2  -----------------------------
// SVD Line: 7084

unsigned char UART1_PCELLID2 __AT (0x40004FD8);



// ---------------------------  Field Item: UART1_PCELLID2_CELLID2  -------------------------------
// SVD Line: 7093

//  <item> SFDITEM_FIELD__UART1_PCELLID2_CELLID2
//    <name> CELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FD8) CELLID2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PCELLID2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PCELLID2  ---------------------------------
// SVD Line: 7084

//  <rtree> SFDITEM_REG__UART1_PCELLID2
//    <name> PCELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FD8) ID register </i>
//    <loc> ( (unsigned char)((UART1_PCELLID2 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PCELLID2_CELLID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART1_PCELLID3  -----------------------------
// SVD Line: 7102

unsigned char UART1_PCELLID3 __AT (0x40004FDC);



// ---------------------------  Field Item: UART1_PCELLID3_CELLID3  -------------------------------
// SVD Line: 7111

//  <item> SFDITEM_FIELD__UART1_PCELLID3_CELLID3
//    <name> CELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FDC) CELLID3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART1_PCELLID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART1_PCELLID3  ---------------------------------
// SVD Line: 7102

//  <rtree> SFDITEM_REG__UART1_PCELLID3
//    <name> PCELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40004FDC) ID register </i>
//    <loc> ( (unsigned char)((UART1_PCELLID3 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART1_PCELLID3_CELLID3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART1  -------------------------------------
// SVD Line: 6353

//  <view> UART1
//    <name> UART1 </name>
//    <item> SFDITEM_REG__UART1_DR </item>
//    <item> SFDITEM_REG__UART1_RSR_ECR </item>
//    <item> SFDITEM_REG__UART1_FR </item>
//    <item> SFDITEM_REG__UART1_ILPR </item>
//    <item> SFDITEM_REG__UART1_IBRD </item>
//    <item> SFDITEM_REG__UART1_FBRD </item>
//    <item> SFDITEM_REG__UART1_LCR_H </item>
//    <item> SFDITEM_REG__UART1_CR </item>
//    <item> SFDITEM_REG__UART1_IFLS </item>
//    <item> SFDITEM_REG__UART1_IMSC </item>
//    <item> SFDITEM_REG__UART1_RIS </item>
//    <item> SFDITEM_REG__UART1_MIS </item>
//    <item> SFDITEM_REG__UART1_ICR </item>
//    <item> SFDITEM_REG__UART1_DMACR </item>
//    <item> SFDITEM_REG__UART1_PERIPHID0 </item>
//    <item> SFDITEM_REG__UART1_PERIPHID1 </item>
//    <item> SFDITEM_REG__UART1_PERIPHID2 </item>
//    <item> SFDITEM_REG__UART1_PERIPHID3 </item>
//    <item> SFDITEM_REG__UART1_PCELLID0 </item>
//    <item> SFDITEM_REG__UART1_PCELLID1 </item>
//    <item> SFDITEM_REG__UART1_PCELLID2 </item>
//    <item> SFDITEM_REG__UART1_PCELLID3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: UART2_DR  --------------------------------
// SVD Line: 7136

unsigned int UART2_DR __AT (0x40010000);



// --------------------------------  Field Item: UART2_DR_DATA  -----------------------------------
// SVD Line: 7145

//  <item> SFDITEM_FIELD__UART2_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010000) Transmit data character/Receive data character </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_DR >> 0) & 0xFF), ((UART2_DR = (UART2_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: UART2_DR_FE  ------------------------------------
// SVD Line: 7152

//  <item> SFDITEM_FIELD__UART2_DR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40010000) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DR ) </loc>
//      <o.8..8> FE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART2_DR_PE  ------------------------------------
// SVD Line: 7159

//  <item> SFDITEM_FIELD__UART2_DR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40010000) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DR ) </loc>
//      <o.9..9> PE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART2_DR_BE  ------------------------------------
// SVD Line: 7166

//  <item> SFDITEM_FIELD__UART2_DR_BE
//    <name> BE </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40010000) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DR ) </loc>
//      <o.10..10> BE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART2_DR_OE  ------------------------------------
// SVD Line: 7173

//  <item> SFDITEM_FIELD__UART2_DR_OE
//    <name> OE </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40010000) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DR ) </loc>
//      <o.11..11> OE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_DR  ------------------------------------
// SVD Line: 7136

//  <rtree> SFDITEM_REG__UART2_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010000) data register </i>
//    <loc> ( (unsigned int)((UART2_DR >> 0) & 0xFFFFFFFF), ((UART2_DR = (UART2_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_DR_DATA </item>
//    <item> SFDITEM_FIELD__UART2_DR_FE </item>
//    <item> SFDITEM_FIELD__UART2_DR_PE </item>
//    <item> SFDITEM_FIELD__UART2_DR_BE </item>
//    <item> SFDITEM_FIELD__UART2_DR_OE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_RSR_ECR  ------------------------------
// SVD Line: 7182

unsigned int UART2_RSR_ECR __AT (0x40010004);



// ------------------------------  Field Item: UART2_RSR_ECR_FE  ----------------------------------
// SVD Line: 7191

//  <item> SFDITEM_FIELD__UART2_RSR_ECR_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010004) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RSR_ECR ) </loc>
//      <o.0..0> FE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_RSR_ECR_PE  ----------------------------------
// SVD Line: 7198

//  <item> SFDITEM_FIELD__UART2_RSR_ECR_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010004) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RSR_ECR ) </loc>
//      <o.1..1> PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_RSR_ECR_BE  ----------------------------------
// SVD Line: 7205

//  <item> SFDITEM_FIELD__UART2_RSR_ECR_BE
//    <name> BE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010004) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RSR_ECR ) </loc>
//      <o.2..2> BE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_RSR_ECR_OE  ----------------------------------
// SVD Line: 7212

//  <item> SFDITEM_FIELD__UART2_RSR_ECR_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40010004) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RSR_ECR ) </loc>
//      <o.3..3> OE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART2_RSR_ECR  ---------------------------------
// SVD Line: 7182

//  <rtree> SFDITEM_REG__UART2_RSR_ECR
//    <name> RSR_ECR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010004) receive status register/error clear register </i>
//    <loc> ( (unsigned int)((UART2_RSR_ECR >> 0) & 0xFFFFFFFF), ((UART2_RSR_ECR = (UART2_RSR_ECR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_RSR_ECR_FE </item>
//    <item> SFDITEM_FIELD__UART2_RSR_ECR_PE </item>
//    <item> SFDITEM_FIELD__UART2_RSR_ECR_BE </item>
//    <item> SFDITEM_FIELD__UART2_RSR_ECR_OE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART2_FR  --------------------------------
// SVD Line: 7221

unsigned int UART2_FR __AT (0x40010018);



// --------------------------------  Field Item: UART2_FR_BUSY  -----------------------------------
// SVD Line: 7230

//  <item> SFDITEM_FIELD__UART2_FR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40010018) UART busy </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_FR ) </loc>
//      <o.3..3> BUSY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_FR_RXFE  -----------------------------------
// SVD Line: 7237

//  <item> SFDITEM_FIELD__UART2_FR_RXFE
//    <name> RXFE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40010018) Receive FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_FR ) </loc>
//      <o.4..4> RXFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_FR_TXFF  -----------------------------------
// SVD Line: 7244

//  <item> SFDITEM_FIELD__UART2_FR_TXFF
//    <name> TXFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40010018) Transmit FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_FR ) </loc>
//      <o.5..5> TXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_FR_RXFF  -----------------------------------
// SVD Line: 7251

//  <item> SFDITEM_FIELD__UART2_FR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40010018) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_FR ) </loc>
//      <o.6..6> RXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_FR_TXFE  -----------------------------------
// SVD Line: 7258

//  <item> SFDITEM_FIELD__UART2_FR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40010018) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_FR ) </loc>
//      <o.7..7> TXFE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_FR  ------------------------------------
// SVD Line: 7221

//  <rtree> SFDITEM_REG__UART2_FR
//    <name> FR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010018) flag register </i>
//    <loc> ( (unsigned int)((UART2_FR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_FR_BUSY </item>
//    <item> SFDITEM_FIELD__UART2_FR_RXFE </item>
//    <item> SFDITEM_FIELD__UART2_FR_TXFF </item>
//    <item> SFDITEM_FIELD__UART2_FR_RXFF </item>
//    <item> SFDITEM_FIELD__UART2_FR_TXFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_ILPR  -------------------------------
// SVD Line: 7267

unsigned int UART2_ILPR __AT (0x40010020);



// -----------------------------  Field Item: UART2_ILPR_ILPDVSR  ---------------------------------
// SVD Line: 7276

//  <item> SFDITEM_FIELD__UART2_ILPR_ILPDVSR
//    <name> ILPDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40010020) low-power divisor value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_ILPR >> 0) & 0xFF), ((UART2_ILPR = (UART2_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_ILPR  -----------------------------------
// SVD Line: 7267

//  <rtree> SFDITEM_REG__UART2_ILPR
//    <name> ILPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010020) IRDA low power counter register </i>
//    <loc> ( (unsigned int)((UART2_ILPR >> 0) & 0xFFFFFFFF), ((UART2_ILPR = (UART2_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_ILPR_ILPDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_IBRD  -------------------------------
// SVD Line: 7285

unsigned int UART2_IBRD __AT (0x40010024);



// ---------------------------  Field Item: UART2_IBRD_BAUD_DIVINT  -------------------------------
// SVD Line: 7294

//  <item> SFDITEM_FIELD__UART2_IBRD_BAUD_DIVINT
//    <name> BAUD_DIVINT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40010024) The integer baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned short)((UART2_IBRD >> 0) & 0xFFFF), ((UART2_IBRD = (UART2_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_IBRD  -----------------------------------
// SVD Line: 7285

//  <rtree> SFDITEM_REG__UART2_IBRD
//    <name> IBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010024) integer baudrate register </i>
//    <loc> ( (unsigned int)((UART2_IBRD >> 0) & 0xFFFFFFFF), ((UART2_IBRD = (UART2_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_IBRD_BAUD_DIVINT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_FBRD  -------------------------------
// SVD Line: 7303

unsigned int UART2_FBRD __AT (0x40010028);



// ---------------------------  Field Item: UART2_FBRD_BAUD_DIVFRAC  ------------------------------
// SVD Line: 7312

//  <item> SFDITEM_FIELD__UART2_FBRD_BAUD_DIVFRAC
//    <name> BAUD_DIVFRAC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40010028) The fractional baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_FBRD >> 0) & 0x3F), ((UART2_FBRD = (UART2_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_FBRD  -----------------------------------
// SVD Line: 7303

//  <rtree> SFDITEM_REG__UART2_FBRD
//    <name> FBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010028) fractional baudrate register </i>
//    <loc> ( (unsigned int)((UART2_FBRD >> 0) & 0xFFFFFFFF), ((UART2_FBRD = (UART2_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_FBRD_BAUD_DIVFRAC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_LCR_H  -------------------------------
// SVD Line: 7321

unsigned int UART2_LCR_H __AT (0x4001002C);



// -------------------------------  Field Item: UART2_LCR_H_BRK  ----------------------------------
// SVD Line: 7330

//  <item> SFDITEM_FIELD__UART2_LCR_H_BRK
//    <name> BRK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001002C) Send break </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR_H ) </loc>
//      <o.0..0> BRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR_H_PEN  ----------------------------------
// SVD Line: 7337

//  <item> SFDITEM_FIELD__UART2_LCR_H_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001002C) Parity enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR_H ) </loc>
//      <o.1..1> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR_H_EPS  ----------------------------------
// SVD Line: 7344

//  <item> SFDITEM_FIELD__UART2_LCR_H_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001002C) Even parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR_H ) </loc>
//      <o.2..2> EPS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_LCR_H_STP2  ----------------------------------
// SVD Line: 7351

//  <item> SFDITEM_FIELD__UART2_LCR_H_STP2
//    <name> STP2 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001002C) Stop bits selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR_H ) </loc>
//      <o.3..3> STP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR_H_FEN  ----------------------------------
// SVD Line: 7358

//  <item> SFDITEM_FIELD__UART2_LCR_H_FEN
//    <name> FEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001002C) FIFO enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR_H ) </loc>
//      <o.4..4> FEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_LCR_H_WLEN  ----------------------------------
// SVD Line: 7365

//  <item> SFDITEM_FIELD__UART2_LCR_H_WLEN
//    <name> WLEN </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4001002C) Word length </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_LCR_H >> 5) & 0x3), ((UART2_LCR_H = (UART2_LCR_H & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_LCR_H  ----------------------------------
// SVD Line: 7321

//  <rtree> SFDITEM_REG__UART2_LCR_H
//    <name> LCR_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001002C) line control register </i>
//    <loc> ( (unsigned int)((UART2_LCR_H >> 0) & 0xFFFFFFFF), ((UART2_LCR_H = (UART2_LCR_H & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_LCR_H_BRK </item>
//    <item> SFDITEM_FIELD__UART2_LCR_H_PEN </item>
//    <item> SFDITEM_FIELD__UART2_LCR_H_EPS </item>
//    <item> SFDITEM_FIELD__UART2_LCR_H_STP2 </item>
//    <item> SFDITEM_FIELD__UART2_LCR_H_FEN </item>
//    <item> SFDITEM_FIELD__UART2_LCR_H_WLEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART2_CR  --------------------------------
// SVD Line: 7374

unsigned int UART2_CR __AT (0x40010030);



// -------------------------------  Field Item: UART2_CR_UARTEN  ----------------------------------
// SVD Line: 7383

//  <item> SFDITEM_FIELD__UART2_CR_UARTEN
//    <name> UARTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010030) UART enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.0..0> UARTEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_CR_SIRE  -----------------------------------
// SVD Line: 7390

//  <item> SFDITEM_FIELD__UART2_CR_SIRE
//    <name> SIRE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010030) IrDA SIR enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.1..1> SIRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_CR_SIRLP  -----------------------------------
// SVD Line: 7397

//  <item> SFDITEM_FIELD__UART2_CR_SIRLP
//    <name> SIRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010030) Low-power IrDA SIR encoding mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.2..2> SIRLP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_CR_TXE  ------------------------------------
// SVD Line: 7404

//  <item> SFDITEM_FIELD__UART2_CR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010030) Transmit enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.8..8> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_CR_RXE  ------------------------------------
// SVD Line: 7411

//  <item> SFDITEM_FIELD__UART2_CR_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010030) Receive enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.9..9> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_CR_RTSEN  -----------------------------------
// SVD Line: 7418

//  <item> SFDITEM_FIELD__UART2_CR_RTSEN
//    <name> RTSEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40010030) RTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.14..14> RTSEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_CR_CTSEN  -----------------------------------
// SVD Line: 7425

//  <item> SFDITEM_FIELD__UART2_CR_CTSEN
//    <name> CTSEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40010030) CTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_CR ) </loc>
//      <o.15..15> CTSEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_CR  ------------------------------------
// SVD Line: 7374

//  <rtree> SFDITEM_REG__UART2_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010030) control register </i>
//    <loc> ( (unsigned int)((UART2_CR >> 0) & 0xFFFFFFFF), ((UART2_CR = (UART2_CR & ~(0xC307UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC307) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_CR_UARTEN </item>
//    <item> SFDITEM_FIELD__UART2_CR_SIRE </item>
//    <item> SFDITEM_FIELD__UART2_CR_SIRLP </item>
//    <item> SFDITEM_FIELD__UART2_CR_TXE </item>
//    <item> SFDITEM_FIELD__UART2_CR_RXE </item>
//    <item> SFDITEM_FIELD__UART2_CR_RTSEN </item>
//    <item> SFDITEM_FIELD__UART2_CR_CTSEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_IFLS  -------------------------------
// SVD Line: 7434

unsigned int UART2_IFLS __AT (0x40010034);



// -----------------------------  Field Item: UART2_IFLS_TXIFLSEL  --------------------------------
// SVD Line: 7443

//  <item> SFDITEM_FIELD__UART2_IFLS_TXIFLSEL
//    <name> TXIFLSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40010034) Transmit interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_IFLS >> 0) & 0x7), ((UART2_IFLS = (UART2_IFLS & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UART2_IFLS_RXIFLSEL  --------------------------------
// SVD Line: 7450

//  <item> SFDITEM_FIELD__UART2_IFLS_RXIFLSEL
//    <name> RXIFLSEL </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40010034) Receive interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_IFLS >> 3) & 0x7), ((UART2_IFLS = (UART2_IFLS & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_IFLS  -----------------------------------
// SVD Line: 7434

//  <rtree> SFDITEM_REG__UART2_IFLS
//    <name> IFLS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010034) interrupt fifo level select register </i>
//    <loc> ( (unsigned int)((UART2_IFLS >> 0) & 0xFFFFFFFF), ((UART2_IFLS = (UART2_IFLS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_IFLS_TXIFLSEL </item>
//    <item> SFDITEM_FIELD__UART2_IFLS_RXIFLSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_IMSC  -------------------------------
// SVD Line: 7459

unsigned int UART2_IMSC __AT (0x40010038);



// -------------------------------  Field Item: UART2_IMSC_RXIM  ----------------------------------
// SVD Line: 7468

//  <item> SFDITEM_FIELD__UART2_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40010038) Reception completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.4..4> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IMSC_TXIM  ----------------------------------
// SVD Line: 7475

//  <item> SFDITEM_FIELD__UART2_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40010038) Transmission completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.5..5> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IMSC_RTIM  ----------------------------------
// SVD Line: 7482

//  <item> SFDITEM_FIELD__UART2_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40010038) Receive timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.6..6> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IMSC_FEIM  ----------------------------------
// SVD Line: 7489

//  <item> SFDITEM_FIELD__UART2_IMSC_FEIM
//    <name> FEIM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40010038) Framing error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.7..7> FEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IMSC_PEIM  ----------------------------------
// SVD Line: 7496

//  <item> SFDITEM_FIELD__UART2_IMSC_PEIM
//    <name> PEIM </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40010038) Parity error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.8..8> PEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IMSC_BEIM  ----------------------------------
// SVD Line: 7503

//  <item> SFDITEM_FIELD__UART2_IMSC_BEIM
//    <name> BEIM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40010038) Break error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.9..9> BEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IMSC_OEIM  ----------------------------------
// SVD Line: 7510

//  <item> SFDITEM_FIELD__UART2_IMSC_OEIM
//    <name> OEIM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40010038) Overrun error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IMSC ) </loc>
//      <o.10..10> OEIM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_IMSC  -----------------------------------
// SVD Line: 7459

//  <rtree> SFDITEM_REG__UART2_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010038) interrupt mask set/clear register </i>
//    <loc> ( (unsigned int)((UART2_IMSC >> 0) & 0xFFFFFFFF), ((UART2_IMSC = (UART2_IMSC & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__UART2_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__UART2_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__UART2_IMSC_FEIM </item>
//    <item> SFDITEM_FIELD__UART2_IMSC_PEIM </item>
//    <item> SFDITEM_FIELD__UART2_IMSC_BEIM </item>
//    <item> SFDITEM_FIELD__UART2_IMSC_OEIM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_RIS  --------------------------------
// SVD Line: 7519

unsigned int UART2_RIS __AT (0x4001003C);



// -------------------------------  Field Item: UART2_RIS_RXRIS  ----------------------------------
// SVD Line: 7528

//  <item> SFDITEM_FIELD__UART2_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001003C) Reception completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.4..4> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_RIS_TXRIS  ----------------------------------
// SVD Line: 7535

//  <item> SFDITEM_FIELD__UART2_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001003C) Transmission completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.5..5> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_RIS_RTRIS  ----------------------------------
// SVD Line: 7542

//  <item> SFDITEM_FIELD__UART2_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4001003C) Receive timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.6..6> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_RIS_FERIS  ----------------------------------
// SVD Line: 7549

//  <item> SFDITEM_FIELD__UART2_RIS_FERIS
//    <name> FERIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001003C) Framing error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.7..7> FERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_RIS_PERIS  ----------------------------------
// SVD Line: 7556

//  <item> SFDITEM_FIELD__UART2_RIS_PERIS
//    <name> PERIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001003C) Parity error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.8..8> PERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_RIS_BERIS  ----------------------------------
// SVD Line: 7563

//  <item> SFDITEM_FIELD__UART2_RIS_BERIS
//    <name> BERIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001003C) Break error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.9..9> BERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_RIS_OERIS  ----------------------------------
// SVD Line: 7570

//  <item> SFDITEM_FIELD__UART2_RIS_OERIS
//    <name> OERIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4001003C) Overrun error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RIS ) </loc>
//      <o.10..10> OERIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_RIS  -----------------------------------
// SVD Line: 7519

//  <rtree> SFDITEM_REG__UART2_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001003C) raw interrupt status register </i>
//    <loc> ( (unsigned int)((UART2_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__UART2_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__UART2_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__UART2_RIS_FERIS </item>
//    <item> SFDITEM_FIELD__UART2_RIS_PERIS </item>
//    <item> SFDITEM_FIELD__UART2_RIS_BERIS </item>
//    <item> SFDITEM_FIELD__UART2_RIS_OERIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_MIS  --------------------------------
// SVD Line: 7579

unsigned int UART2_MIS __AT (0x40010040);



// -------------------------------  Field Item: UART2_MIS_RXMIS  ----------------------------------
// SVD Line: 7588

//  <item> SFDITEM_FIELD__UART2_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40010040) Reception completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.4..4> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_MIS_TXMIS  ----------------------------------
// SVD Line: 7595

//  <item> SFDITEM_FIELD__UART2_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40010040) Transmission completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.5..5> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_MIS_RTMIS  ----------------------------------
// SVD Line: 7602

//  <item> SFDITEM_FIELD__UART2_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40010040) Receive timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.6..6> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_MIS_FEMIS  ----------------------------------
// SVD Line: 7609

//  <item> SFDITEM_FIELD__UART2_MIS_FEMIS
//    <name> FEMIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40010040) Framing error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.7..7> FEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_MIS_PEMIS  ----------------------------------
// SVD Line: 7616

//  <item> SFDITEM_FIELD__UART2_MIS_PEMIS
//    <name> PEMIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40010040) Parity error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.8..8> PEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_MIS_BEMIS  ----------------------------------
// SVD Line: 7623

//  <item> SFDITEM_FIELD__UART2_MIS_BEMIS
//    <name> BEMIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40010040) Break error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.9..9> BEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_MIS_OEMIS  ----------------------------------
// SVD Line: 7630

//  <item> SFDITEM_FIELD__UART2_MIS_OEMIS
//    <name> OEMIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40010040) Overrun error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MIS ) </loc>
//      <o.10..10> OEMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_MIS  -----------------------------------
// SVD Line: 7579

//  <rtree> SFDITEM_REG__UART2_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010040) masked interrupt status register </i>
//    <loc> ( (unsigned int)((UART2_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__UART2_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__UART2_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__UART2_MIS_FEMIS </item>
//    <item> SFDITEM_FIELD__UART2_MIS_PEMIS </item>
//    <item> SFDITEM_FIELD__UART2_MIS_BEMIS </item>
//    <item> SFDITEM_FIELD__UART2_MIS_OEMIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_ICR  --------------------------------
// SVD Line: 7639

unsigned int UART2_ICR __AT (0x40010044);



// -------------------------------  Field Item: UART2_ICR_RXIC  -----------------------------------
// SVD Line: 7648

//  <item> SFDITEM_FIELD__UART2_ICR_RXIC
//    <name> RXIC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40010044) Reception completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.4..4> RXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_ICR_TXIC  -----------------------------------
// SVD Line: 7655

//  <item> SFDITEM_FIELD__UART2_ICR_TXIC
//    <name> TXIC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40010044) Transmission completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.5..5> TXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_ICR_RTIC  -----------------------------------
// SVD Line: 7662

//  <item> SFDITEM_FIELD__UART2_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40010044) Receive timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.6..6> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_ICR_FEIC  -----------------------------------
// SVD Line: 7669

//  <item> SFDITEM_FIELD__UART2_ICR_FEIC
//    <name> FEIC </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40010044) Framing error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.7..7> FEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_ICR_PEIC  -----------------------------------
// SVD Line: 7676

//  <item> SFDITEM_FIELD__UART2_ICR_PEIC
//    <name> PEIC </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40010044) Parity error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.8..8> PEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_ICR_BEIC  -----------------------------------
// SVD Line: 7683

//  <item> SFDITEM_FIELD__UART2_ICR_BEIC
//    <name> BEIC </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40010044) Break error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.9..9> BEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_ICR_OEIC  -----------------------------------
// SVD Line: 7690

//  <item> SFDITEM_FIELD__UART2_ICR_OEIC
//    <name> OEIC </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40010044) Overrun error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_ICR ) </loc>
//      <o.10..10> OEIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_ICR  -----------------------------------
// SVD Line: 7639

//  <rtree> SFDITEM_REG__UART2_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40010044) interrupt clear register </i>
//    <loc> ( (unsigned int)((UART2_ICR >> 0) & 0xFFFFFFFF), ((UART2_ICR = (UART2_ICR & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_ICR_RXIC </item>
//    <item> SFDITEM_FIELD__UART2_ICR_TXIC </item>
//    <item> SFDITEM_FIELD__UART2_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__UART2_ICR_FEIC </item>
//    <item> SFDITEM_FIELD__UART2_ICR_PEIC </item>
//    <item> SFDITEM_FIELD__UART2_ICR_BEIC </item>
//    <item> SFDITEM_FIELD__UART2_ICR_OEIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_DMACR  -------------------------------
// SVD Line: 7699

unsigned int UART2_DMACR __AT (0x40010048);



// -----------------------------  Field Item: UART2_DMACR_RXDMAE  ---------------------------------
// SVD Line: 7708

//  <item> SFDITEM_FIELD__UART2_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40010048) Receive DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_DMACR_TX_EN  ---------------------------------
// SVD Line: 7715

//  <item> SFDITEM_FIELD__UART2_DMACR_TX_EN
//    <name> TX_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40010048) Transmit DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DMACR ) </loc>
//      <o.1..1> TX_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_DMACR_DMAONERR  --------------------------------
// SVD Line: 7722

//  <item> SFDITEM_FIELD__UART2_DMACR_DMAONERR
//    <name> DMAONERR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40010048) DMAONERR </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DMACR ) </loc>
//      <o.2..2> DMAONERR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_DMACR  ----------------------------------
// SVD Line: 7699

//  <rtree> SFDITEM_REG__UART2_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40010048) DMA control register </i>
//    <loc> ( (unsigned int)((UART2_DMACR >> 0) & 0xFFFFFFFF), ((UART2_DMACR = (UART2_DMACR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_DMACR_RXDMAE </item>
//    <item> SFDITEM_FIELD__UART2_DMACR_TX_EN </item>
//    <item> SFDITEM_FIELD__UART2_DMACR_DMAONERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART2_PERIPHID0  -----------------------------
// SVD Line: 7731

unsigned int UART2_PERIPHID0 __AT (0x40010FE0);



// -------------------------  Field Item: UART2_PERIPHID0_PARTNUMBER0  ----------------------------
// SVD Line: 7740

//  <item> SFDITEM_FIELD__UART2_PERIPHID0_PARTNUMBER0
//    <name> PARTNUMBER0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FE0) PARTNUMBER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PERIPHID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PERIPHID0  --------------------------------
// SVD Line: 7731

//  <rtree> SFDITEM_REG__UART2_PERIPHID0
//    <name> PERIPHID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FE0) ID register </i>
//    <loc> ( (unsigned int)((UART2_PERIPHID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PERIPHID0_PARTNUMBER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART2_PERIPHID1  -----------------------------
// SVD Line: 7749

unsigned int UART2_PERIPHID1 __AT (0x40010FE4);



// -------------------------  Field Item: UART2_PERIPHID1_PARTNUMBER1  ----------------------------
// SVD Line: 7758

//  <item> SFDITEM_FIELD__UART2_PERIPHID1_PARTNUMBER1
//    <name> PARTNUMBER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40010FE4) PARTNUMBER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PERIPHID1 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART2_PERIPHID1_DESIGNER0  -----------------------------
// SVD Line: 7765

//  <item> SFDITEM_FIELD__UART2_PERIPHID1_DESIGNER0
//    <name> DESIGNER0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40010FE4) DESIGNER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PERIPHID1 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PERIPHID1  --------------------------------
// SVD Line: 7749

//  <rtree> SFDITEM_REG__UART2_PERIPHID1
//    <name> PERIPHID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FE4) ID register </i>
//    <loc> ( (unsigned int)((UART2_PERIPHID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PERIPHID1_PARTNUMBER1 </item>
//    <item> SFDITEM_FIELD__UART2_PERIPHID1_DESIGNER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART2_PERIPHID2  -----------------------------
// SVD Line: 7774

unsigned int UART2_PERIPHID2 __AT (0x40010FE8);



// --------------------------  Field Item: UART2_PERIPHID2_DESIGNER1  -----------------------------
// SVD Line: 7783

//  <item> SFDITEM_FIELD__UART2_PERIPHID2_DESIGNER1
//    <name> DESIGNER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40010FE8) DESIGNER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PERIPHID2 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART2_PERIPHID2_REVISION0  -----------------------------
// SVD Line: 7790

//  <item> SFDITEM_FIELD__UART2_PERIPHID2_REVISION0
//    <name> REVISION0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40010FE8) REVISION0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PERIPHID2 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PERIPHID2  --------------------------------
// SVD Line: 7774

//  <rtree> SFDITEM_REG__UART2_PERIPHID2
//    <name> PERIPHID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FE8) ID register </i>
//    <loc> ( (unsigned int)((UART2_PERIPHID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PERIPHID2_DESIGNER1 </item>
//    <item> SFDITEM_FIELD__UART2_PERIPHID2_REVISION0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART2_PERIPHID3  -----------------------------
// SVD Line: 7799

unsigned int UART2_PERIPHID3 __AT (0x40010FEC);



// ------------------------  Field Item: UART2_PERIPHID3_CONFIGURATION  ---------------------------
// SVD Line: 7808

//  <item> SFDITEM_FIELD__UART2_PERIPHID3_CONFIGURATION
//    <name> CONFIGURATION </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FEC) CONFIGURATION </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PERIPHID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PERIPHID3  --------------------------------
// SVD Line: 7799

//  <rtree> SFDITEM_REG__UART2_PERIPHID3
//    <name> PERIPHID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FEC) ID register </i>
//    <loc> ( (unsigned int)((UART2_PERIPHID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PERIPHID3_CONFIGURATION </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_PCELLID0  -----------------------------
// SVD Line: 7817

unsigned int UART2_PCELLID0 __AT (0x40010FD0);



// ---------------------------  Field Item: UART2_PCELLID0_CELLID0  -------------------------------
// SVD Line: 7826

//  <item> SFDITEM_FIELD__UART2_PCELLID0_CELLID0
//    <name> CELLID0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FD0) CELLID0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PCELLID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PCELLID0  ---------------------------------
// SVD Line: 7817

//  <rtree> SFDITEM_REG__UART2_PCELLID0
//    <name> PCELLID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FD0) ID register </i>
//    <loc> ( (unsigned int)((UART2_PCELLID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PCELLID0_CELLID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_PCELLID1  -----------------------------
// SVD Line: 7835

unsigned int UART2_PCELLID1 __AT (0x40010FD4);



// ---------------------------  Field Item: UART2_PCELLID1_CELLID1  -------------------------------
// SVD Line: 7844

//  <item> SFDITEM_FIELD__UART2_PCELLID1_CELLID1
//    <name> CELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FD4) CELLID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART2_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PCELLID1  ---------------------------------
// SVD Line: 7835

//  <rtree> SFDITEM_REG__UART2_PCELLID1
//    <name> PCELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40010FD4) ID register </i>
//    <loc> ( (unsigned int)((UART2_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PCELLID1_CELLID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_PCELLID2  -----------------------------
// SVD Line: 7853

unsigned char UART2_PCELLID2 __AT (0x40010FD8);



// ---------------------------  Field Item: UART2_PCELLID2_CELLID2  -------------------------------
// SVD Line: 7862

//  <item> SFDITEM_FIELD__UART2_PCELLID2_CELLID2
//    <name> CELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FD8) CELLID2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PCELLID2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PCELLID2  ---------------------------------
// SVD Line: 7853

//  <rtree> SFDITEM_REG__UART2_PCELLID2
//    <name> PCELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FD8) ID register </i>
//    <loc> ( (unsigned char)((UART2_PCELLID2 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PCELLID2_CELLID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_PCELLID3  -----------------------------
// SVD Line: 7871

unsigned char UART2_PCELLID3 __AT (0x40010FDC);



// ---------------------------  Field Item: UART2_PCELLID3_CELLID3  -------------------------------
// SVD Line: 7880

//  <item> SFDITEM_FIELD__UART2_PCELLID3_CELLID3
//    <name> CELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FDC) CELLID3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_PCELLID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_PCELLID3  ---------------------------------
// SVD Line: 7871

//  <rtree> SFDITEM_REG__UART2_PCELLID3
//    <name> PCELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40010FDC) ID register </i>
//    <loc> ( (unsigned char)((UART2_PCELLID3 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART2_PCELLID3_CELLID3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART2  -------------------------------------
// SVD Line: 7122

//  <view> UART2
//    <name> UART2 </name>
//    <item> SFDITEM_REG__UART2_DR </item>
//    <item> SFDITEM_REG__UART2_RSR_ECR </item>
//    <item> SFDITEM_REG__UART2_FR </item>
//    <item> SFDITEM_REG__UART2_ILPR </item>
//    <item> SFDITEM_REG__UART2_IBRD </item>
//    <item> SFDITEM_REG__UART2_FBRD </item>
//    <item> SFDITEM_REG__UART2_LCR_H </item>
//    <item> SFDITEM_REG__UART2_CR </item>
//    <item> SFDITEM_REG__UART2_IFLS </item>
//    <item> SFDITEM_REG__UART2_IMSC </item>
//    <item> SFDITEM_REG__UART2_RIS </item>
//    <item> SFDITEM_REG__UART2_MIS </item>
//    <item> SFDITEM_REG__UART2_ICR </item>
//    <item> SFDITEM_REG__UART2_DMACR </item>
//    <item> SFDITEM_REG__UART2_PERIPHID0 </item>
//    <item> SFDITEM_REG__UART2_PERIPHID1 </item>
//    <item> SFDITEM_REG__UART2_PERIPHID2 </item>
//    <item> SFDITEM_REG__UART2_PERIPHID3 </item>
//    <item> SFDITEM_REG__UART2_PCELLID0 </item>
//    <item> SFDITEM_REG__UART2_PCELLID1 </item>
//    <item> SFDITEM_REG__UART2_PCELLID2 </item>
//    <item> SFDITEM_REG__UART2_PCELLID3 </item>
//  </view>
//  


// -----------------------------  Register Item Address: UART3_DR  --------------------------------
// SVD Line: 7905

unsigned int UART3_DR __AT (0x40011000);



// --------------------------------  Field Item: UART3_DR_DATA  -----------------------------------
// SVD Line: 7914

//  <item> SFDITEM_FIELD__UART3_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40011000) Transmit data character/Receive data character </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_DR >> 0) & 0xFF), ((UART3_DR = (UART3_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: UART3_DR_FE  ------------------------------------
// SVD Line: 7921

//  <item> SFDITEM_FIELD__UART3_DR_FE
//    <name> FE </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40011000) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DR ) </loc>
//      <o.8..8> FE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART3_DR_PE  ------------------------------------
// SVD Line: 7928

//  <item> SFDITEM_FIELD__UART3_DR_PE
//    <name> PE </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40011000) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DR ) </loc>
//      <o.9..9> PE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART3_DR_BE  ------------------------------------
// SVD Line: 7935

//  <item> SFDITEM_FIELD__UART3_DR_BE
//    <name> BE </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40011000) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DR ) </loc>
//      <o.10..10> BE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: UART3_DR_OE  ------------------------------------
// SVD Line: 7942

//  <item> SFDITEM_FIELD__UART3_DR_OE
//    <name> OE </name>
//    <r> 
//    <i> [Bit 11] RO (@ 0x40011000) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DR ) </loc>
//      <o.11..11> OE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_DR  ------------------------------------
// SVD Line: 7905

//  <rtree> SFDITEM_REG__UART3_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011000) data register </i>
//    <loc> ( (unsigned int)((UART3_DR >> 0) & 0xFFFFFFFF), ((UART3_DR = (UART3_DR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_DR_DATA </item>
//    <item> SFDITEM_FIELD__UART3_DR_FE </item>
//    <item> SFDITEM_FIELD__UART3_DR_PE </item>
//    <item> SFDITEM_FIELD__UART3_DR_BE </item>
//    <item> SFDITEM_FIELD__UART3_DR_OE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_RSR_ECR  ------------------------------
// SVD Line: 7951

unsigned int UART3_RSR_ECR __AT (0x40011004);



// ------------------------------  Field Item: UART3_RSR_ECR_FE  ----------------------------------
// SVD Line: 7960

//  <item> SFDITEM_FIELD__UART3_RSR_ECR_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011004) Framing error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RSR_ECR ) </loc>
//      <o.0..0> FE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_RSR_ECR_PE  ----------------------------------
// SVD Line: 7967

//  <item> SFDITEM_FIELD__UART3_RSR_ECR_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011004) Parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RSR_ECR ) </loc>
//      <o.1..1> PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_RSR_ECR_BE  ----------------------------------
// SVD Line: 7974

//  <item> SFDITEM_FIELD__UART3_RSR_ECR_BE
//    <name> BE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011004) Break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RSR_ECR ) </loc>
//      <o.2..2> BE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_RSR_ECR_OE  ----------------------------------
// SVD Line: 7981

//  <item> SFDITEM_FIELD__UART3_RSR_ECR_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40011004) Overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RSR_ECR ) </loc>
//      <o.3..3> OE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART3_RSR_ECR  ---------------------------------
// SVD Line: 7951

//  <rtree> SFDITEM_REG__UART3_RSR_ECR
//    <name> RSR_ECR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011004) receive status register/error clear register </i>
//    <loc> ( (unsigned int)((UART3_RSR_ECR >> 0) & 0xFFFFFFFF), ((UART3_RSR_ECR = (UART3_RSR_ECR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_RSR_ECR_FE </item>
//    <item> SFDITEM_FIELD__UART3_RSR_ECR_PE </item>
//    <item> SFDITEM_FIELD__UART3_RSR_ECR_BE </item>
//    <item> SFDITEM_FIELD__UART3_RSR_ECR_OE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART3_FR  --------------------------------
// SVD Line: 7990

unsigned int UART3_FR __AT (0x40011018);



// --------------------------------  Field Item: UART3_FR_BUSY  -----------------------------------
// SVD Line: 7999

//  <item> SFDITEM_FIELD__UART3_FR_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40011018) UART busy </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_FR ) </loc>
//      <o.3..3> BUSY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_FR_RXFE  -----------------------------------
// SVD Line: 8006

//  <item> SFDITEM_FIELD__UART3_FR_RXFE
//    <name> RXFE </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40011018) Receive FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_FR ) </loc>
//      <o.4..4> RXFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_FR_TXFF  -----------------------------------
// SVD Line: 8013

//  <item> SFDITEM_FIELD__UART3_FR_TXFF
//    <name> TXFF </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40011018) Transmit FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_FR ) </loc>
//      <o.5..5> TXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_FR_RXFF  -----------------------------------
// SVD Line: 8020

//  <item> SFDITEM_FIELD__UART3_FR_RXFF
//    <name> RXFF </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40011018) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_FR ) </loc>
//      <o.6..6> RXFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_FR_TXFE  -----------------------------------
// SVD Line: 8027

//  <item> SFDITEM_FIELD__UART3_FR_TXFE
//    <name> TXFE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40011018) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_FR ) </loc>
//      <o.7..7> TXFE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_FR  ------------------------------------
// SVD Line: 7990

//  <rtree> SFDITEM_REG__UART3_FR
//    <name> FR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011018) flag register </i>
//    <loc> ( (unsigned int)((UART3_FR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_FR_BUSY </item>
//    <item> SFDITEM_FIELD__UART3_FR_RXFE </item>
//    <item> SFDITEM_FIELD__UART3_FR_TXFF </item>
//    <item> SFDITEM_FIELD__UART3_FR_RXFF </item>
//    <item> SFDITEM_FIELD__UART3_FR_TXFE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_ILPR  -------------------------------
// SVD Line: 8036

unsigned int UART3_ILPR __AT (0x40011020);



// -----------------------------  Field Item: UART3_ILPR_ILPDVSR  ---------------------------------
// SVD Line: 8045

//  <item> SFDITEM_FIELD__UART3_ILPR_ILPDVSR
//    <name> ILPDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40011020) low-power divisor value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_ILPR >> 0) & 0xFF), ((UART3_ILPR = (UART3_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_ILPR  -----------------------------------
// SVD Line: 8036

//  <rtree> SFDITEM_REG__UART3_ILPR
//    <name> ILPR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011020) IRDA low power counter register </i>
//    <loc> ( (unsigned int)((UART3_ILPR >> 0) & 0xFFFFFFFF), ((UART3_ILPR = (UART3_ILPR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_ILPR_ILPDVSR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_IBRD  -------------------------------
// SVD Line: 8054

unsigned int UART3_IBRD __AT (0x40011024);



// ---------------------------  Field Item: UART3_IBRD_BAUD_DIVINT  -------------------------------
// SVD Line: 8063

//  <item> SFDITEM_FIELD__UART3_IBRD_BAUD_DIVINT
//    <name> BAUD_DIVINT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40011024) The integer baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned short)((UART3_IBRD >> 0) & 0xFFFF), ((UART3_IBRD = (UART3_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_IBRD  -----------------------------------
// SVD Line: 8054

//  <rtree> SFDITEM_REG__UART3_IBRD
//    <name> IBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011024) integer baudrate register </i>
//    <loc> ( (unsigned int)((UART3_IBRD >> 0) & 0xFFFFFFFF), ((UART3_IBRD = (UART3_IBRD & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_IBRD_BAUD_DIVINT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_FBRD  -------------------------------
// SVD Line: 8072

unsigned int UART3_FBRD __AT (0x40011028);



// ---------------------------  Field Item: UART3_FBRD_BAUD_DIVFRAC  ------------------------------
// SVD Line: 8081

//  <item> SFDITEM_FIELD__UART3_FBRD_BAUD_DIVFRAC
//    <name> BAUD_DIVFRAC </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40011028) The fractional baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_FBRD >> 0) & 0x3F), ((UART3_FBRD = (UART3_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_FBRD  -----------------------------------
// SVD Line: 8072

//  <rtree> SFDITEM_REG__UART3_FBRD
//    <name> FBRD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011028) fractional baudrate register </i>
//    <loc> ( (unsigned int)((UART3_FBRD >> 0) & 0xFFFFFFFF), ((UART3_FBRD = (UART3_FBRD & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_FBRD_BAUD_DIVFRAC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_LCR_H  -------------------------------
// SVD Line: 8090

unsigned int UART3_LCR_H __AT (0x4001102C);



// -------------------------------  Field Item: UART3_LCR_H_BRK  ----------------------------------
// SVD Line: 8099

//  <item> SFDITEM_FIELD__UART3_LCR_H_BRK
//    <name> BRK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001102C) Send break </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR_H ) </loc>
//      <o.0..0> BRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR_H_PEN  ----------------------------------
// SVD Line: 8106

//  <item> SFDITEM_FIELD__UART3_LCR_H_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001102C) Parity enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR_H ) </loc>
//      <o.1..1> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR_H_EPS  ----------------------------------
// SVD Line: 8113

//  <item> SFDITEM_FIELD__UART3_LCR_H_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001102C) Even parity selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR_H ) </loc>
//      <o.2..2> EPS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_LCR_H_STP2  ----------------------------------
// SVD Line: 8120

//  <item> SFDITEM_FIELD__UART3_LCR_H_STP2
//    <name> STP2 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001102C) Stop bits selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR_H ) </loc>
//      <o.3..3> STP2
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR_H_FEN  ----------------------------------
// SVD Line: 8127

//  <item> SFDITEM_FIELD__UART3_LCR_H_FEN
//    <name> FEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001102C) FIFO enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR_H ) </loc>
//      <o.4..4> FEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_LCR_H_WLEN  ----------------------------------
// SVD Line: 8134

//  <item> SFDITEM_FIELD__UART3_LCR_H_WLEN
//    <name> WLEN </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4001102C) Word length </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_LCR_H >> 5) & 0x3), ((UART3_LCR_H = (UART3_LCR_H & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_LCR_H  ----------------------------------
// SVD Line: 8090

//  <rtree> SFDITEM_REG__UART3_LCR_H
//    <name> LCR_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001102C) line control register </i>
//    <loc> ( (unsigned int)((UART3_LCR_H >> 0) & 0xFFFFFFFF), ((UART3_LCR_H = (UART3_LCR_H & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_LCR_H_BRK </item>
//    <item> SFDITEM_FIELD__UART3_LCR_H_PEN </item>
//    <item> SFDITEM_FIELD__UART3_LCR_H_EPS </item>
//    <item> SFDITEM_FIELD__UART3_LCR_H_STP2 </item>
//    <item> SFDITEM_FIELD__UART3_LCR_H_FEN </item>
//    <item> SFDITEM_FIELD__UART3_LCR_H_WLEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: UART3_CR  --------------------------------
// SVD Line: 8143

unsigned int UART3_CR __AT (0x40011030);



// -------------------------------  Field Item: UART3_CR_UARTEN  ----------------------------------
// SVD Line: 8152

//  <item> SFDITEM_FIELD__UART3_CR_UARTEN
//    <name> UARTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011030) UART enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.0..0> UARTEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_CR_SIRE  -----------------------------------
// SVD Line: 8159

//  <item> SFDITEM_FIELD__UART3_CR_SIRE
//    <name> SIRE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011030) IrDA SIR enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.1..1> SIRE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_CR_SIRLP  -----------------------------------
// SVD Line: 8166

//  <item> SFDITEM_FIELD__UART3_CR_SIRLP
//    <name> SIRLP </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011030) Low-power IrDA SIR encoding mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.2..2> SIRLP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_CR_TXE  ------------------------------------
// SVD Line: 8173

//  <item> SFDITEM_FIELD__UART3_CR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40011030) Transmit enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.8..8> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_CR_RXE  ------------------------------------
// SVD Line: 8180

//  <item> SFDITEM_FIELD__UART3_CR_RXE
//    <name> RXE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40011030) Receive enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.9..9> RXE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_CR_RTSEN  -----------------------------------
// SVD Line: 8187

//  <item> SFDITEM_FIELD__UART3_CR_RTSEN
//    <name> RTSEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40011030) RTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.14..14> RTSEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_CR_CTSEN  -----------------------------------
// SVD Line: 8194

//  <item> SFDITEM_FIELD__UART3_CR_CTSEN
//    <name> CTSEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40011030) CTS hardware flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_CR ) </loc>
//      <o.15..15> CTSEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_CR  ------------------------------------
// SVD Line: 8143

//  <rtree> SFDITEM_REG__UART3_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011030) control register </i>
//    <loc> ( (unsigned int)((UART3_CR >> 0) & 0xFFFFFFFF), ((UART3_CR = (UART3_CR & ~(0xC307UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC307) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_CR_UARTEN </item>
//    <item> SFDITEM_FIELD__UART3_CR_SIRE </item>
//    <item> SFDITEM_FIELD__UART3_CR_SIRLP </item>
//    <item> SFDITEM_FIELD__UART3_CR_TXE </item>
//    <item> SFDITEM_FIELD__UART3_CR_RXE </item>
//    <item> SFDITEM_FIELD__UART3_CR_RTSEN </item>
//    <item> SFDITEM_FIELD__UART3_CR_CTSEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_IFLS  -------------------------------
// SVD Line: 8203

unsigned int UART3_IFLS __AT (0x40011034);



// -----------------------------  Field Item: UART3_IFLS_TXIFLSEL  --------------------------------
// SVD Line: 8212

//  <item> SFDITEM_FIELD__UART3_IFLS_TXIFLSEL
//    <name> TXIFLSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40011034) Transmit interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_IFLS >> 0) & 0x7), ((UART3_IFLS = (UART3_IFLS & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: UART3_IFLS_RXIFLSEL  --------------------------------
// SVD Line: 8219

//  <item> SFDITEM_FIELD__UART3_IFLS_RXIFLSEL
//    <name> RXIFLSEL </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40011034) Receive interrupt FIFO level selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_IFLS >> 3) & 0x7), ((UART3_IFLS = (UART3_IFLS & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_IFLS  -----------------------------------
// SVD Line: 8203

//  <rtree> SFDITEM_REG__UART3_IFLS
//    <name> IFLS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011034) interrupt fifo level select register </i>
//    <loc> ( (unsigned int)((UART3_IFLS >> 0) & 0xFFFFFFFF), ((UART3_IFLS = (UART3_IFLS & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_IFLS_TXIFLSEL </item>
//    <item> SFDITEM_FIELD__UART3_IFLS_RXIFLSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_IMSC  -------------------------------
// SVD Line: 8228

unsigned int UART3_IMSC __AT (0x40011038);



// -------------------------------  Field Item: UART3_IMSC_RXIM  ----------------------------------
// SVD Line: 8237

//  <item> SFDITEM_FIELD__UART3_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40011038) Reception completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.4..4> RXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IMSC_TXIM  ----------------------------------
// SVD Line: 8244

//  <item> SFDITEM_FIELD__UART3_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40011038) Transmission completion interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.5..5> TXIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IMSC_RTIM  ----------------------------------
// SVD Line: 8251

//  <item> SFDITEM_FIELD__UART3_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40011038) Receive timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.6..6> RTIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IMSC_FEIM  ----------------------------------
// SVD Line: 8258

//  <item> SFDITEM_FIELD__UART3_IMSC_FEIM
//    <name> FEIM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40011038) Framing error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.7..7> FEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IMSC_PEIM  ----------------------------------
// SVD Line: 8265

//  <item> SFDITEM_FIELD__UART3_IMSC_PEIM
//    <name> PEIM </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40011038) Parity error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.8..8> PEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IMSC_BEIM  ----------------------------------
// SVD Line: 8272

//  <item> SFDITEM_FIELD__UART3_IMSC_BEIM
//    <name> BEIM </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40011038) Break error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.9..9> BEIM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IMSC_OEIM  ----------------------------------
// SVD Line: 8279

//  <item> SFDITEM_FIELD__UART3_IMSC_OEIM
//    <name> OEIM </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40011038) Overrun error interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IMSC ) </loc>
//      <o.10..10> OEIM
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_IMSC  -----------------------------------
// SVD Line: 8228

//  <rtree> SFDITEM_REG__UART3_IMSC
//    <name> IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011038) interrupt mask set/clear register </i>
//    <loc> ( (unsigned int)((UART3_IMSC >> 0) & 0xFFFFFFFF), ((UART3_IMSC = (UART3_IMSC & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__UART3_IMSC_TXIM </item>
//    <item> SFDITEM_FIELD__UART3_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__UART3_IMSC_FEIM </item>
//    <item> SFDITEM_FIELD__UART3_IMSC_PEIM </item>
//    <item> SFDITEM_FIELD__UART3_IMSC_BEIM </item>
//    <item> SFDITEM_FIELD__UART3_IMSC_OEIM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_RIS  --------------------------------
// SVD Line: 8288

unsigned int UART3_RIS __AT (0x4001103C);



// -------------------------------  Field Item: UART3_RIS_RXRIS  ----------------------------------
// SVD Line: 8297

//  <item> SFDITEM_FIELD__UART3_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4001103C) Reception completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.4..4> RXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_RIS_TXRIS  ----------------------------------
// SVD Line: 8304

//  <item> SFDITEM_FIELD__UART3_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001103C) Transmission completion raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.5..5> TXRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_RIS_RTRIS  ----------------------------------
// SVD Line: 8311

//  <item> SFDITEM_FIELD__UART3_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4001103C) Receive timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.6..6> RTRIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_RIS_FERIS  ----------------------------------
// SVD Line: 8318

//  <item> SFDITEM_FIELD__UART3_RIS_FERIS
//    <name> FERIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001103C) Framing error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.7..7> FERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_RIS_PERIS  ----------------------------------
// SVD Line: 8325

//  <item> SFDITEM_FIELD__UART3_RIS_PERIS
//    <name> PERIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4001103C) Parity error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.8..8> PERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_RIS_BERIS  ----------------------------------
// SVD Line: 8332

//  <item> SFDITEM_FIELD__UART3_RIS_BERIS
//    <name> BERIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x4001103C) Break error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.9..9> BERIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_RIS_OERIS  ----------------------------------
// SVD Line: 8339

//  <item> SFDITEM_FIELD__UART3_RIS_OERIS
//    <name> OERIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x4001103C) Overrun error raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RIS ) </loc>
//      <o.10..10> OERIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_RIS  -----------------------------------
// SVD Line: 8288

//  <rtree> SFDITEM_REG__UART3_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001103C) raw interrupt status register </i>
//    <loc> ( (unsigned int)((UART3_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__UART3_RIS_TXRIS </item>
//    <item> SFDITEM_FIELD__UART3_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__UART3_RIS_FERIS </item>
//    <item> SFDITEM_FIELD__UART3_RIS_PERIS </item>
//    <item> SFDITEM_FIELD__UART3_RIS_BERIS </item>
//    <item> SFDITEM_FIELD__UART3_RIS_OERIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_MIS  --------------------------------
// SVD Line: 8348

unsigned int UART3_MIS __AT (0x40011040);



// -------------------------------  Field Item: UART3_MIS_RXMIS  ----------------------------------
// SVD Line: 8357

//  <item> SFDITEM_FIELD__UART3_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40011040) Reception completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.4..4> RXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_MIS_TXMIS  ----------------------------------
// SVD Line: 8364

//  <item> SFDITEM_FIELD__UART3_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40011040) Transmission completion masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.5..5> TXMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_MIS_RTMIS  ----------------------------------
// SVD Line: 8371

//  <item> SFDITEM_FIELD__UART3_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40011040) Receive timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.6..6> RTMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_MIS_FEMIS  ----------------------------------
// SVD Line: 8378

//  <item> SFDITEM_FIELD__UART3_MIS_FEMIS
//    <name> FEMIS </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40011040) Framing error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.7..7> FEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_MIS_PEMIS  ----------------------------------
// SVD Line: 8385

//  <item> SFDITEM_FIELD__UART3_MIS_PEMIS
//    <name> PEMIS </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40011040) Parity error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.8..8> PEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_MIS_BEMIS  ----------------------------------
// SVD Line: 8392

//  <item> SFDITEM_FIELD__UART3_MIS_BEMIS
//    <name> BEMIS </name>
//    <r> 
//    <i> [Bit 9] RO (@ 0x40011040) Break error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.9..9> BEMIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_MIS_OEMIS  ----------------------------------
// SVD Line: 8399

//  <item> SFDITEM_FIELD__UART3_MIS_OEMIS
//    <name> OEMIS </name>
//    <r> 
//    <i> [Bit 10] RO (@ 0x40011040) Overrun error masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MIS ) </loc>
//      <o.10..10> OEMIS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_MIS  -----------------------------------
// SVD Line: 8348

//  <rtree> SFDITEM_REG__UART3_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011040) masked interrupt status register </i>
//    <loc> ( (unsigned int)((UART3_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__UART3_MIS_TXMIS </item>
//    <item> SFDITEM_FIELD__UART3_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__UART3_MIS_FEMIS </item>
//    <item> SFDITEM_FIELD__UART3_MIS_PEMIS </item>
//    <item> SFDITEM_FIELD__UART3_MIS_BEMIS </item>
//    <item> SFDITEM_FIELD__UART3_MIS_OEMIS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_ICR  --------------------------------
// SVD Line: 8408

unsigned int UART3_ICR __AT (0x40011044);



// -------------------------------  Field Item: UART3_ICR_RXIC  -----------------------------------
// SVD Line: 8417

//  <item> SFDITEM_FIELD__UART3_ICR_RXIC
//    <name> RXIC </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x40011044) Reception completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.4..4> RXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_ICR_TXIC  -----------------------------------
// SVD Line: 8424

//  <item> SFDITEM_FIELD__UART3_ICR_TXIC
//    <name> TXIC </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x40011044) Transmission completion interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.5..5> TXIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_ICR_RTIC  -----------------------------------
// SVD Line: 8431

//  <item> SFDITEM_FIELD__UART3_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x40011044) Receive timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.6..6> RTIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_ICR_FEIC  -----------------------------------
// SVD Line: 8438

//  <item> SFDITEM_FIELD__UART3_ICR_FEIC
//    <name> FEIC </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x40011044) Framing error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.7..7> FEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_ICR_PEIC  -----------------------------------
// SVD Line: 8445

//  <item> SFDITEM_FIELD__UART3_ICR_PEIC
//    <name> PEIC </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40011044) Parity error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.8..8> PEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_ICR_BEIC  -----------------------------------
// SVD Line: 8452

//  <item> SFDITEM_FIELD__UART3_ICR_BEIC
//    <name> BEIC </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40011044) Break error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.9..9> BEIC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_ICR_OEIC  -----------------------------------
// SVD Line: 8459

//  <item> SFDITEM_FIELD__UART3_ICR_OEIC
//    <name> OEIC </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40011044) Overrun error interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_ICR ) </loc>
//      <o.10..10> OEIC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_ICR  -----------------------------------
// SVD Line: 8408

//  <rtree> SFDITEM_REG__UART3_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40011044) interrupt clear register </i>
//    <loc> ( (unsigned int)((UART3_ICR >> 0) & 0xFFFFFFFF), ((UART3_ICR = (UART3_ICR & ~(0x7F0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_ICR_RXIC </item>
//    <item> SFDITEM_FIELD__UART3_ICR_TXIC </item>
//    <item> SFDITEM_FIELD__UART3_ICR_RTIC </item>
//    <item> SFDITEM_FIELD__UART3_ICR_FEIC </item>
//    <item> SFDITEM_FIELD__UART3_ICR_PEIC </item>
//    <item> SFDITEM_FIELD__UART3_ICR_BEIC </item>
//    <item> SFDITEM_FIELD__UART3_ICR_OEIC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_DMACR  -------------------------------
// SVD Line: 8468

unsigned int UART3_DMACR __AT (0x40011048);



// -----------------------------  Field Item: UART3_DMACR_RXDMAE  ---------------------------------
// SVD Line: 8477

//  <item> SFDITEM_FIELD__UART3_DMACR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011048) Receive DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DMACR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_DMACR_TX_EN  ---------------------------------
// SVD Line: 8484

//  <item> SFDITEM_FIELD__UART3_DMACR_TX_EN
//    <name> TX_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011048) Transmit DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DMACR ) </loc>
//      <o.1..1> TX_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_DMACR_DMAONERR  --------------------------------
// SVD Line: 8491

//  <item> SFDITEM_FIELD__UART3_DMACR_DMAONERR
//    <name> DMAONERR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011048) DMAONERR </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DMACR ) </loc>
//      <o.2..2> DMAONERR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_DMACR  ----------------------------------
// SVD Line: 8468

//  <rtree> SFDITEM_REG__UART3_DMACR
//    <name> DMACR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011048) DMA control register </i>
//    <loc> ( (unsigned int)((UART3_DMACR >> 0) & 0xFFFFFFFF), ((UART3_DMACR = (UART3_DMACR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_DMACR_RXDMAE </item>
//    <item> SFDITEM_FIELD__UART3_DMACR_TX_EN </item>
//    <item> SFDITEM_FIELD__UART3_DMACR_DMAONERR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART3_PERIPHID0  -----------------------------
// SVD Line: 8500

unsigned int UART3_PERIPHID0 __AT (0x40011FE0);



// -------------------------  Field Item: UART3_PERIPHID0_PARTNUMBER0  ----------------------------
// SVD Line: 8509

//  <item> SFDITEM_FIELD__UART3_PERIPHID0_PARTNUMBER0
//    <name> PARTNUMBER0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FE0) PARTNUMBER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PERIPHID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PERIPHID0  --------------------------------
// SVD Line: 8500

//  <rtree> SFDITEM_REG__UART3_PERIPHID0
//    <name> PERIPHID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FE0) ID register </i>
//    <loc> ( (unsigned int)((UART3_PERIPHID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PERIPHID0_PARTNUMBER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART3_PERIPHID1  -----------------------------
// SVD Line: 8518

unsigned int UART3_PERIPHID1 __AT (0x40011FE4);



// -------------------------  Field Item: UART3_PERIPHID1_PARTNUMBER1  ----------------------------
// SVD Line: 8527

//  <item> SFDITEM_FIELD__UART3_PERIPHID1_PARTNUMBER1
//    <name> PARTNUMBER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40011FE4) PARTNUMBER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PERIPHID1 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART3_PERIPHID1_DESIGNER0  -----------------------------
// SVD Line: 8534

//  <item> SFDITEM_FIELD__UART3_PERIPHID1_DESIGNER0
//    <name> DESIGNER0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40011FE4) DESIGNER0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PERIPHID1 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PERIPHID1  --------------------------------
// SVD Line: 8518

//  <rtree> SFDITEM_REG__UART3_PERIPHID1
//    <name> PERIPHID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FE4) ID register </i>
//    <loc> ( (unsigned int)((UART3_PERIPHID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PERIPHID1_PARTNUMBER1 </item>
//    <item> SFDITEM_FIELD__UART3_PERIPHID1_DESIGNER0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART3_PERIPHID2  -----------------------------
// SVD Line: 8543

unsigned int UART3_PERIPHID2 __AT (0x40011FE8);



// --------------------------  Field Item: UART3_PERIPHID2_DESIGNER1  -----------------------------
// SVD Line: 8552

//  <item> SFDITEM_FIELD__UART3_PERIPHID2_DESIGNER1
//    <name> DESIGNER1 </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40011FE8) DESIGNER1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PERIPHID2 >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: UART3_PERIPHID2_REVISION0  -----------------------------
// SVD Line: 8559

//  <item> SFDITEM_FIELD__UART3_PERIPHID2_REVISION0
//    <name> REVISION0 </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40011FE8) REVISION0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PERIPHID2 >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PERIPHID2  --------------------------------
// SVD Line: 8543

//  <rtree> SFDITEM_REG__UART3_PERIPHID2
//    <name> PERIPHID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FE8) ID register </i>
//    <loc> ( (unsigned int)((UART3_PERIPHID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PERIPHID2_DESIGNER1 </item>
//    <item> SFDITEM_FIELD__UART3_PERIPHID2_REVISION0 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: UART3_PERIPHID3  -----------------------------
// SVD Line: 8568

unsigned int UART3_PERIPHID3 __AT (0x40011FEC);



// ------------------------  Field Item: UART3_PERIPHID3_CONFIGURATION  ---------------------------
// SVD Line: 8577

//  <item> SFDITEM_FIELD__UART3_PERIPHID3_CONFIGURATION
//    <name> CONFIGURATION </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FEC) CONFIGURATION </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PERIPHID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PERIPHID3  --------------------------------
// SVD Line: 8568

//  <rtree> SFDITEM_REG__UART3_PERIPHID3
//    <name> PERIPHID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FEC) ID register </i>
//    <loc> ( (unsigned int)((UART3_PERIPHID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PERIPHID3_CONFIGURATION </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_PCELLID0  -----------------------------
// SVD Line: 8586

unsigned int UART3_PCELLID0 __AT (0x40011FD0);



// ---------------------------  Field Item: UART3_PCELLID0_CELLID0  -------------------------------
// SVD Line: 8595

//  <item> SFDITEM_FIELD__UART3_PCELLID0_CELLID0
//    <name> CELLID0 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FD0) CELLID0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PCELLID0 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PCELLID0  ---------------------------------
// SVD Line: 8586

//  <rtree> SFDITEM_REG__UART3_PCELLID0
//    <name> PCELLID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FD0) ID register </i>
//    <loc> ( (unsigned int)((UART3_PCELLID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PCELLID0_CELLID0 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_PCELLID1  -----------------------------
// SVD Line: 8604

unsigned int UART3_PCELLID1 __AT (0x40011FD4);



// ---------------------------  Field Item: UART3_PCELLID1_CELLID1  -------------------------------
// SVD Line: 8613

//  <item> SFDITEM_FIELD__UART3_PCELLID1_CELLID1
//    <name> CELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FD4) CELLID1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((UART3_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PCELLID1  ---------------------------------
// SVD Line: 8604

//  <rtree> SFDITEM_REG__UART3_PCELLID1
//    <name> PCELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011FD4) ID register </i>
//    <loc> ( (unsigned int)((UART3_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PCELLID1_CELLID1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_PCELLID2  -----------------------------
// SVD Line: 8622

unsigned char UART3_PCELLID2 __AT (0x40011FD8);



// ---------------------------  Field Item: UART3_PCELLID2_CELLID2  -------------------------------
// SVD Line: 8631

//  <item> SFDITEM_FIELD__UART3_PCELLID2_CELLID2
//    <name> CELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FD8) CELLID2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PCELLID2 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PCELLID2  ---------------------------------
// SVD Line: 8622

//  <rtree> SFDITEM_REG__UART3_PCELLID2
//    <name> PCELLID2 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FD8) ID register </i>
//    <loc> ( (unsigned char)((UART3_PCELLID2 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PCELLID2_CELLID2 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_PCELLID3  -----------------------------
// SVD Line: 8640

unsigned char UART3_PCELLID3 __AT (0x40011FDC);



// ---------------------------  Field Item: UART3_PCELLID3_CELLID3  -------------------------------
// SVD Line: 8649

//  <item> SFDITEM_FIELD__UART3_PCELLID3_CELLID3
//    <name> CELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FDC) CELLID3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_PCELLID3 >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_PCELLID3  ---------------------------------
// SVD Line: 8640

//  <rtree> SFDITEM_REG__UART3_PCELLID3
//    <name> PCELLID3 </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x40011FDC) ID register </i>
//    <loc> ( (unsigned char)((UART3_PCELLID3 >> 0) & 0xFF) ) </loc>
//    <item> SFDITEM_FIELD__UART3_PCELLID3_CELLID3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART3  -------------------------------------
// SVD Line: 7891

//  <view> UART3
//    <name> UART3 </name>
//    <item> SFDITEM_REG__UART3_DR </item>
//    <item> SFDITEM_REG__UART3_RSR_ECR </item>
//    <item> SFDITEM_REG__UART3_FR </item>
//    <item> SFDITEM_REG__UART3_ILPR </item>
//    <item> SFDITEM_REG__UART3_IBRD </item>
//    <item> SFDITEM_REG__UART3_FBRD </item>
//    <item> SFDITEM_REG__UART3_LCR_H </item>
//    <item> SFDITEM_REG__UART3_CR </item>
//    <item> SFDITEM_REG__UART3_IFLS </item>
//    <item> SFDITEM_REG__UART3_IMSC </item>
//    <item> SFDITEM_REG__UART3_RIS </item>
//    <item> SFDITEM_REG__UART3_MIS </item>
//    <item> SFDITEM_REG__UART3_ICR </item>
//    <item> SFDITEM_REG__UART3_DMACR </item>
//    <item> SFDITEM_REG__UART3_PERIPHID0 </item>
//    <item> SFDITEM_REG__UART3_PERIPHID1 </item>
//    <item> SFDITEM_REG__UART3_PERIPHID2 </item>
//    <item> SFDITEM_REG__UART3_PERIPHID3 </item>
//    <item> SFDITEM_REG__UART3_PCELLID0 </item>
//    <item> SFDITEM_REG__UART3_PCELLID1 </item>
//    <item> SFDITEM_REG__UART3_PCELLID2 </item>
//    <item> SFDITEM_REG__UART3_PCELLID3 </item>
//  </view>
//  


// ----------------------------  Register Item Address: LPUART_CR0  -------------------------------
// SVD Line: 8674

unsigned int LPUART_CR0 __AT (0x40005000);



// -------------------------  Field Item: LPUART_CR0_LPUART_DATA_LEN  -----------------------------
// SVD Line: 8683

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_DATA_LEN
//    <name> LPUART_DATA_LEN </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40005000) LPUART data length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR0 >> 0) & 0x3), ((LPUART_CR0 = (LPUART_CR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: LPUART_CR0_LPUART_PARITY_CFG  ----------------------------
// SVD Line: 8690

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_PARITY_CFG
//    <name> LPUART_PARITY_CFG </name>
//    <rw> 
//    <i> [Bits 4..2] RW (@ 0x40005000) LPUART parity bit configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR0 >> 2) & 0x7), ((LPUART_CR0 = (LPUART_CR0 & ~(0x7UL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: LPUART_CR0_LPUART_STOP_LEN  -----------------------------
// SVD Line: 8697

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_STOP_LEN
//    <name> LPUART_STOP_LEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005000) LPUART STOP bits configuration </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR0 ) </loc>
//      <o.5..5> LPUART_STOP_LEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: LPUART_CR0_LPUART_BAUD_RATE_FRA  --------------------------
// SVD Line: 8704

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_BAUD_RATE_FRA
//    <name> LPUART_BAUD_RATE_FRA </name>
//    <rw> 
//    <i> [Bits 9..6] RW (@ 0x40005000) The fractional part of the baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR0 >> 6) & 0xF), ((LPUART_CR0 = (LPUART_CR0 & ~(0xFUL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: LPUART_CR0_LPUART_BAUD_RATE_INT  --------------------------
// SVD Line: 8711

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_BAUD_RATE_INT
//    <name> LPUART_BAUD_RATE_INT </name>
//    <rw> 
//    <i> [Bits 21..10] RW (@ 0x40005000) The integer part of the baud rate divisor </i>
//    <edit> 
//      <loc> ( (unsigned short)((LPUART_CR0 >> 10) & 0xFFF), ((LPUART_CR0 = (LPUART_CR0 & ~(0xFFFUL << 10 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: LPUART_CR0_LPUART_WAKEUP_EN  ----------------------------
// SVD Line: 8718

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_WAKEUP_EN
//    <name> LPUART_WAKEUP_EN </name>
//    <rw> 
//    <i> [Bits 24..22] RW (@ 0x40005000) LPUART wakeup enable </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_CR0 >> 22) & 0x7), ((LPUART_CR0 = (LPUART_CR0 & ~(0x7UL << 22 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 22 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: LPUART_CR0_LPUART_RX_EN  ------------------------------
// SVD Line: 8725

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_RX_EN
//    <name> LPUART_RX_EN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40005000) LPUART reception enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR0 ) </loc>
//      <o.25..25> LPUART_RX_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_CR0_LPUART_RTS_EN  ------------------------------
// SVD Line: 8732

//  <item> SFDITEM_FIELD__LPUART_CR0_LPUART_RTS_EN
//    <name> LPUART_RTS_EN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40005000) LPUART RTS flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR0 ) </loc>
//      <o.26..26> LPUART_RTS_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_CR0  -----------------------------------
// SVD Line: 8674

//  <rtree> SFDITEM_REG__LPUART_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005000) control register 0 </i>
//    <loc> ( (unsigned int)((LPUART_CR0 >> 0) & 0xFFFFFFFF), ((LPUART_CR0 = (LPUART_CR0 & ~(0x7FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_DATA_LEN </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_PARITY_CFG </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_STOP_LEN </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_BAUD_RATE_FRA </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_BAUD_RATE_INT </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_WAKEUP_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_RX_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR0_LPUART_RTS_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_CR1  -------------------------------
// SVD Line: 8741

unsigned int LPUART_CR1 __AT (0x40005004);



// ------------------------  Field Item: LPUART_CR1_START_VALID_INT_EN  ---------------------------
// SVD Line: 8750

//  <item> SFDITEM_FIELD__LPUART_CR1_START_VALID_INT_EN
//    <name> START_VALID_INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005004) START_VALID interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.0..0> START_VALID_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_CR1_RX_DONE_INT_EN  -----------------------------
// SVD Line: 8757

//  <item> SFDITEM_FIELD__LPUART_CR1_RX_DONE_INT_EN
//    <name> RX_DONE_INT_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005004) RX_DONE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.1..1> RX_DONE_INT_EN
//    </check>
//  </item>
//  


// -----------------------  Field Item: LPUART_CR1_START_INVALID_INT_EN  --------------------------
// SVD Line: 8764

//  <item> SFDITEM_FIELD__LPUART_CR1_START_INVALID_INT_EN
//    <name> START_INVALID_INT_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005004) START_INVALID interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.2..2> START_INVALID_INT_EN
//    </check>
//  </item>
//  


// ------------------------  Field Item: LPUART_CR1_PARITY_ERR_INT_EN  ----------------------------
// SVD Line: 8771

//  <item> SFDITEM_FIELD__LPUART_CR1_PARITY_ERR_INT_EN
//    <name> PARITY_ERR_INT_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40005004) PARITY_ERR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.3..3> PARITY_ERR_INT_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPUART_CR1_STOP_ERR_INT_EN  -----------------------------
// SVD Line: 8778

//  <item> SFDITEM_FIELD__LPUART_CR1_STOP_ERR_INT_EN
//    <name> STOP_ERR_INT_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005004) STOP_ERR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.4..4> STOP_ERR_INT_EN
//    </check>
//  </item>
//  


// ------------------------  Field Item: LPUART_CR1_RX_OVERFLOW_INT_EN  ---------------------------
// SVD Line: 8785

//  <item> SFDITEM_FIELD__LPUART_CR1_RX_OVERFLOW_INT_EN
//    <name> RX_OVERFLOW_INT_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005004) RX_OVERFLOW interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.5..5> RX_OVERFLOW_INT_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: LPUART_CR1_RXFIFO_NOT_EMPTY_INT_EN  -------------------------
// SVD Line: 8792

//  <item> SFDITEM_FIELD__LPUART_CR1_RXFIFO_NOT_EMPTY_INT_EN
//    <name> RXFIFO_NOT_EMPTY_INT_EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40005004) RXFIFO_NOT_EMPTY interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.6..6> RXFIFO_NOT_EMPTY_INT_EN
//    </check>
//  </item>
//  


// -----------------------  Field Item: LPUART_CR1_TXFIFO_EMPTY_INT_EN  ---------------------------
// SVD Line: 8799

//  <item> SFDITEM_FIELD__LPUART_CR1_TXFIFO_EMPTY_INT_EN
//    <name> TXFIFO_EMPTY_INT_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005004) TXFIFO_EMPTY interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.7..7> TXFIFO_EMPTY_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_CR1_TX_DONE_INT_EN  -----------------------------
// SVD Line: 8806

//  <item> SFDITEM_FIELD__LPUART_CR1_TX_DONE_INT_EN
//    <name> TX_DONE_INT_EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40005004) TX_DONE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.8..8> TX_DONE_INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LPUART_CR1_LPUART_TX_EN  ------------------------------
// SVD Line: 8813

//  <item> SFDITEM_FIELD__LPUART_CR1_LPUART_TX_EN
//    <name> LPUART_TX_EN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40005004) LPUART transmission enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.9..9> LPUART_TX_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPUART_CR1_DMA_RX_EN  --------------------------------
// SVD Line: 8820

//  <item> SFDITEM_FIELD__LPUART_CR1_DMA_RX_EN
//    <name> DMA_RX_EN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40005004) DMA reception requests enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.10..10> DMA_RX_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPUART_CR1_DMA_TX_EN  --------------------------------
// SVD Line: 8827

//  <item> SFDITEM_FIELD__LPUART_CR1_DMA_TX_EN
//    <name> DMA_TX_EN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40005004) DMA transmission requests enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.11..11> DMA_TX_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_CR1_LPUART_CTS_EN  ------------------------------
// SVD Line: 8834

//  <item> SFDITEM_FIELD__LPUART_CR1_LPUART_CTS_EN
//    <name> LPUART_CTS_EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40005004) LPUART CTS flow control enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_CR1 ) </loc>
//      <o.12..12> LPUART_CTS_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_CR1  -----------------------------------
// SVD Line: 8741

//  <rtree> SFDITEM_REG__LPUART_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005004) control register 1 </i>
//    <loc> ( (unsigned int)((LPUART_CR1 >> 0) & 0xFFFFFFFF), ((LPUART_CR1 = (LPUART_CR1 & ~(0x1FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_CR1_START_VALID_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_RX_DONE_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_START_INVALID_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_PARITY_ERR_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_STOP_ERR_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_RX_OVERFLOW_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_RXFIFO_NOT_EMPTY_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_TXFIFO_EMPTY_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_TX_DONE_INT_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_LPUART_TX_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_DMA_RX_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_DMA_TX_EN </item>
//    <item> SFDITEM_FIELD__LPUART_CR1_LPUART_CTS_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_SR0  -------------------------------
// SVD Line: 8843

unsigned int LPUART_SR0 __AT (0x40005008);



// --------------------------  Field Item: LPUART_SR0_START_VALID_SR  -----------------------------
// SVD Line: 8852

//  <item> SFDITEM_FIELD__LPUART_SR0_START_VALID_SR
//    <name> START_VALID_SR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005008) START_VALID flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR0 ) </loc>
//      <o.0..0> START_VALID_SR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPUART_SR0_RX_DONE_SR  -------------------------------
// SVD Line: 8859

//  <item> SFDITEM_FIELD__LPUART_SR0_RX_DONE_SR
//    <name> RX_DONE_SR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005008) RX_DONE flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR0 ) </loc>
//      <o.1..1> RX_DONE_SR
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPUART_SR0_START_INVALID_SR  ----------------------------
// SVD Line: 8866

//  <item> SFDITEM_FIELD__LPUART_SR0_START_INVALID_SR
//    <name> START_INVALID_SR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005008) START_INVALID flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR0 ) </loc>
//      <o.2..2> START_INVALID_SR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_SR0_PARITY_ERR_SR  ------------------------------
// SVD Line: 8873

//  <item> SFDITEM_FIELD__LPUART_SR0_PARITY_ERR_SR
//    <name> PARITY_ERR_SR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40005008) PARITY_ERR flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR0 ) </loc>
//      <o.3..3> PARITY_ERR_SR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LPUART_SR0_STOP_ERR_SR  -------------------------------
// SVD Line: 8880

//  <item> SFDITEM_FIELD__LPUART_SR0_STOP_ERR_SR
//    <name> STOP_ERR_SR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005008) STOP_ERR flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR0 ) </loc>
//      <o.4..4> STOP_ERR_SR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_SR0_RX_OVERFLOW_SR  -----------------------------
// SVD Line: 8887

//  <item> SFDITEM_FIELD__LPUART_SR0_RX_OVERFLOW_SR
//    <name> RX_OVERFLOW_SR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005008) RX_OVERFLOW flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR0 ) </loc>
//      <o.5..5> RX_OVERFLOW_SR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_SR0  -----------------------------------
// SVD Line: 8843

//  <rtree> SFDITEM_REG__LPUART_SR0
//    <name> SR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005008) status register 0 </i>
//    <loc> ( (unsigned int)((LPUART_SR0 >> 0) & 0xFFFFFFFF), ((LPUART_SR0 = (LPUART_SR0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_SR0_START_VALID_SR </item>
//    <item> SFDITEM_FIELD__LPUART_SR0_RX_DONE_SR </item>
//    <item> SFDITEM_FIELD__LPUART_SR0_START_INVALID_SR </item>
//    <item> SFDITEM_FIELD__LPUART_SR0_PARITY_ERR_SR </item>
//    <item> SFDITEM_FIELD__LPUART_SR0_STOP_ERR_SR </item>
//    <item> SFDITEM_FIELD__LPUART_SR0_RX_OVERFLOW_SR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LPUART_SR1  -------------------------------
// SVD Line: 8896

unsigned int LPUART_SR1 __AT (0x4000500C);



// --------------------------  Field Item: LPUART_SR1_WRITE_SR0_DONE  -----------------------------
// SVD Line: 8905

//  <item> SFDITEM_FIELD__LPUART_SR1_WRITE_SR0_DONE
//    <name> WRITE_SR0_DONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000500C) The status of a write operation to the LPUART_SR0 register </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR1 ) </loc>
//      <o.1..1> WRITE_SR0_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPUART_SR1_WRITE_CR0_DONE  -----------------------------
// SVD Line: 8912

//  <item> SFDITEM_FIELD__LPUART_SR1_WRITE_CR0_DONE
//    <name> WRITE_CR0_DONE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000500C) The status of a write operation to the LPUART_CR0 register </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR1 ) </loc>
//      <o.2..2> WRITE_CR0_DONE
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPUART_SR1_RXFIFO_NOT_EMPTY  ----------------------------
// SVD Line: 8919

//  <item> SFDITEM_FIELD__LPUART_SR1_RXFIFO_NOT_EMPTY
//    <name> RXFIFO_NOT_EMPTY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000500C) RXFIFO_NOT_EMPTY flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR1 ) </loc>
//      <o.3..3> RXFIFO_NOT_EMPTY
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LPUART_SR1_TXFIFO_EMPTY  ------------------------------
// SVD Line: 8926

//  <item> SFDITEM_FIELD__LPUART_SR1_TXFIFO_EMPTY
//    <name> TXFIFO_EMPTY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000500C) TXFIFO_EMPTY flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR1 ) </loc>
//      <o.4..4> TXFIFO_EMPTY
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPUART_SR1_TX_DONE  ---------------------------------
// SVD Line: 8933

//  <item> SFDITEM_FIELD__LPUART_SR1_TX_DONE
//    <name> TX_DONE </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000500C) TX_DONE flag </i>
//    <check> 
//      <loc> ( (unsigned int) LPUART_SR1 ) </loc>
//      <o.5..5> TX_DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_SR1  -----------------------------------
// SVD Line: 8896

//  <rtree> SFDITEM_REG__LPUART_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000500C) status register 1 </i>
//    <loc> ( (unsigned int)((LPUART_SR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPUART_SR1_WRITE_SR0_DONE </item>
//    <item> SFDITEM_FIELD__LPUART_SR1_WRITE_CR0_DONE </item>
//    <item> SFDITEM_FIELD__LPUART_SR1_RXFIFO_NOT_EMPTY </item>
//    <item> SFDITEM_FIELD__LPUART_SR1_TXFIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__LPUART_SR1_TX_DONE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPUART_DATA  -------------------------------
// SVD Line: 8942

unsigned int LPUART_DATA __AT (0x40005010);



// ---------------------------  Field Item: LPUART_DATA_LPUART_DATA  ------------------------------
// SVD Line: 8951

//  <item> SFDITEM_FIELD__LPUART_DATA_LPUART_DATA
//    <name> LPUART_DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40005010) LPUART TX/RX data </i>
//    <edit> 
//      <loc> ( (unsigned char)((LPUART_DATA >> 0) & 0xFF), ((LPUART_DATA = (LPUART_DATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: LPUART_DATA  ----------------------------------
// SVD Line: 8942

//  <rtree> SFDITEM_REG__LPUART_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005010) data register </i>
//    <loc> ( (unsigned int)((LPUART_DATA >> 0) & 0xFFFFFFFF), ((LPUART_DATA = (LPUART_DATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPUART_DATA_LPUART_DATA </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: LPUART  ------------------------------------
// SVD Line: 8660

//  <view> LPUART
//    <name> LPUART </name>
//    <item> SFDITEM_REG__LPUART_CR0 </item>
//    <item> SFDITEM_REG__LPUART_CR1 </item>
//    <item> SFDITEM_REG__LPUART_SR0 </item>
//    <item> SFDITEM_REG__LPUART_SR1 </item>
//    <item> SFDITEM_REG__LPUART_DATA </item>
//  </view>
//  


// -----------------------------  Register Item Address: LCD_CR0  ---------------------------------
// SVD Line: 8976

unsigned int LCD_CR0 __AT (0x40018000);



// ---------------------------------  Field Item: LCD_CR0_CR0  ------------------------------------
// SVD Line: 8985

//  <item> SFDITEM_FIELD__LCD_CR0_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018000) CR0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_CR0 >> 0) & 0xFFFFFFFF), ((LCD_CR0 = (LCD_CR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_CR0  ------------------------------------
// SVD Line: 8976

//  <rtree> SFDITEM_REG__LCD_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018000) control register 0 </i>
//    <loc> ( (unsigned int)((LCD_CR0 >> 0) & 0xFFFFFFFF), ((LCD_CR0 = (LCD_CR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_CR0_CR0 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_CR1  ---------------------------------
// SVD Line: 8994

unsigned int LCD_CR1 __AT (0x40018004);



// ---------------------------------  Field Item: LCD_CR1_CR1  ------------------------------------
// SVD Line: 9003

//  <item> SFDITEM_FIELD__LCD_CR1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018004) CR1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_CR1 >> 0) & 0xFFFFFFFF), ((LCD_CR1 = (LCD_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_CR1  ------------------------------------
// SVD Line: 8994

//  <rtree> SFDITEM_REG__LCD_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018004) control register 1 </i>
//    <loc> ( (unsigned int)((LCD_CR1 >> 0) & 0xFFFFFFFF), ((LCD_CR1 = (LCD_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_CR1_CR1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR0  ---------------------------------
// SVD Line: 9012

unsigned int LCD_DR0 __AT (0x40018008);



// ---------------------------------  Field Item: LCD_DR0_DR0  ------------------------------------
// SVD Line: 9021

//  <item> SFDITEM_FIELD__LCD_DR0_DR0
//    <name> DR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018008) DR0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR0 >> 0) & 0xFFFFFFFF), ((LCD_DR0 = (LCD_DR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR0  ------------------------------------
// SVD Line: 9012

//  <rtree> SFDITEM_REG__LCD_DR0
//    <name> DR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018008) data register 0 </i>
//    <loc> ( (unsigned int)((LCD_DR0 >> 0) & 0xFFFFFFFF), ((LCD_DR0 = (LCD_DR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR0_DR0 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR1  ---------------------------------
// SVD Line: 9030

unsigned int LCD_DR1 __AT (0x4001800C);



// ---------------------------------  Field Item: LCD_DR1_DR1  ------------------------------------
// SVD Line: 9039

//  <item> SFDITEM_FIELD__LCD_DR1_DR1
//    <name> DR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001800C) DR1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR1 >> 0) & 0xFFFFFFFF), ((LCD_DR1 = (LCD_DR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR1  ------------------------------------
// SVD Line: 9030

//  <rtree> SFDITEM_REG__LCD_DR1
//    <name> DR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001800C) data register 1 </i>
//    <loc> ( (unsigned int)((LCD_DR1 >> 0) & 0xFFFFFFFF), ((LCD_DR1 = (LCD_DR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR1_DR1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR2  ---------------------------------
// SVD Line: 9048

unsigned int LCD_DR2 __AT (0x40018010);



// ---------------------------------  Field Item: LCD_DR2_DR2  ------------------------------------
// SVD Line: 9057

//  <item> SFDITEM_FIELD__LCD_DR2_DR2
//    <name> DR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018010) DR2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR2 >> 0) & 0xFFFFFFFF), ((LCD_DR2 = (LCD_DR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR2  ------------------------------------
// SVD Line: 9048

//  <rtree> SFDITEM_REG__LCD_DR2
//    <name> DR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018010) data register 2 </i>
//    <loc> ( (unsigned int)((LCD_DR2 >> 0) & 0xFFFFFFFF), ((LCD_DR2 = (LCD_DR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR2_DR2 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR3  ---------------------------------
// SVD Line: 9066

unsigned int LCD_DR3 __AT (0x40018014);



// ---------------------------------  Field Item: LCD_DR3_DR3  ------------------------------------
// SVD Line: 9075

//  <item> SFDITEM_FIELD__LCD_DR3_DR3
//    <name> DR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018014) DR3 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR3 >> 0) & 0xFFFFFFFF), ((LCD_DR3 = (LCD_DR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR3  ------------------------------------
// SVD Line: 9066

//  <rtree> SFDITEM_REG__LCD_DR3
//    <name> DR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018014) data register 3 </i>
//    <loc> ( (unsigned int)((LCD_DR3 >> 0) & 0xFFFFFFFF), ((LCD_DR3 = (LCD_DR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR3_DR3 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR4  ---------------------------------
// SVD Line: 9084

unsigned int LCD_DR4 __AT (0x40018018);



// ---------------------------------  Field Item: LCD_DR4_DR4  ------------------------------------
// SVD Line: 9093

//  <item> SFDITEM_FIELD__LCD_DR4_DR4
//    <name> DR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018018) DR4 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR4 >> 0) & 0xFFFFFFFF), ((LCD_DR4 = (LCD_DR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR4  ------------------------------------
// SVD Line: 9084

//  <rtree> SFDITEM_REG__LCD_DR4
//    <name> DR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018018) data register 4 </i>
//    <loc> ( (unsigned int)((LCD_DR4 >> 0) & 0xFFFFFFFF), ((LCD_DR4 = (LCD_DR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR4_DR4 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR5  ---------------------------------
// SVD Line: 9102

unsigned int LCD_DR5 __AT (0x4001801C);



// ---------------------------------  Field Item: LCD_DR5_DR5  ------------------------------------
// SVD Line: 9111

//  <item> SFDITEM_FIELD__LCD_DR5_DR5
//    <name> DR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001801C) DR5 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR5 >> 0) & 0xFFFFFFFF), ((LCD_DR5 = (LCD_DR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR5  ------------------------------------
// SVD Line: 9102

//  <rtree> SFDITEM_REG__LCD_DR5
//    <name> DR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001801C) data register 5 </i>
//    <loc> ( (unsigned int)((LCD_DR5 >> 0) & 0xFFFFFFFF), ((LCD_DR5 = (LCD_DR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR5_DR5 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR6  ---------------------------------
// SVD Line: 9120

unsigned int LCD_DR6 __AT (0x40018020);



// ---------------------------------  Field Item: LCD_DR6_DR6  ------------------------------------
// SVD Line: 9129

//  <item> SFDITEM_FIELD__LCD_DR6_DR6
//    <name> DR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018020) DR6 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR6 >> 0) & 0xFFFFFFFF), ((LCD_DR6 = (LCD_DR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR6  ------------------------------------
// SVD Line: 9120

//  <rtree> SFDITEM_REG__LCD_DR6
//    <name> DR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018020) data register 6 </i>
//    <loc> ( (unsigned int)((LCD_DR6 >> 0) & 0xFFFFFFFF), ((LCD_DR6 = (LCD_DR6 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR6_DR6 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_DR7  ---------------------------------
// SVD Line: 9138

unsigned int LCD_DR7 __AT (0x40018024);



// ---------------------------------  Field Item: LCD_DR7_DR7  ------------------------------------
// SVD Line: 9147

//  <item> SFDITEM_FIELD__LCD_DR7_DR7
//    <name> DR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018024) DR7 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_DR7 >> 0) & 0xFFFFFFFF), ((LCD_DR7 = (LCD_DR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_DR7  ------------------------------------
// SVD Line: 9138

//  <rtree> SFDITEM_REG__LCD_DR7
//    <name> DR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018024) data register 7 </i>
//    <loc> ( (unsigned int)((LCD_DR7 >> 0) & 0xFFFFFFFF), ((LCD_DR7 = (LCD_DR7 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_DR7_DR7 </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: LCD_SR  ---------------------------------
// SVD Line: 9156

unsigned int LCD_SR __AT (0x40018028);



// ----------------------------------  Field Item: LCD_SR_SR  -------------------------------------
// SVD Line: 9165

//  <item> SFDITEM_FIELD__LCD_SR_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018028) SR </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_SR  -------------------------------------
// SVD Line: 9156

//  <rtree> SFDITEM_REG__LCD_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40018028) status register </i>
//    <loc> ( (unsigned int)((LCD_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LCD_SR_SR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LCD_CR2  ---------------------------------
// SVD Line: 9174

unsigned int LCD_CR2 __AT (0x4001802C);



// ---------------------------------  Field Item: LCD_CR2_CR2  ------------------------------------
// SVD Line: 9183

//  <item> SFDITEM_FIELD__LCD_CR2_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001802C) CR2 </i>
//    <edit> 
//      <loc> ( (unsigned int)((LCD_CR2 >> 0) & 0xFFFFFFFF), ((LCD_CR2 = (LCD_CR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LCD_CR2  ------------------------------------
// SVD Line: 9174

//  <rtree> SFDITEM_REG__LCD_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001802C) control register 2 </i>
//    <loc> ( (unsigned int)((LCD_CR2 >> 0) & 0xFFFFFFFF), ((LCD_CR2 = (LCD_CR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LCD_CR2_CR2 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: LCD  --------------------------------------
// SVD Line: 8962

//  <view> LCD
//    <name> LCD </name>
//    <item> SFDITEM_REG__LCD_CR0 </item>
//    <item> SFDITEM_REG__LCD_CR1 </item>
//    <item> SFDITEM_REG__LCD_DR0 </item>
//    <item> SFDITEM_REG__LCD_DR1 </item>
//    <item> SFDITEM_REG__LCD_DR2 </item>
//    <item> SFDITEM_REG__LCD_DR3 </item>
//    <item> SFDITEM_REG__LCD_DR4 </item>
//    <item> SFDITEM_REG__LCD_DR5 </item>
//    <item> SFDITEM_REG__LCD_DR6 </item>
//    <item> SFDITEM_REG__LCD_DR7 </item>
//    <item> SFDITEM_REG__LCD_SR </item>
//    <item> SFDITEM_REG__LCD_CR2 </item>
//  </view>
//  


// ------------------------------  Register Item Address: EFC_CR  ---------------------------------
// SVD Line: 9208

unsigned int EFC_CR __AT (0x40020000);



// ----------------------------  Field Item: EFC_CR_MASS_ERASE_EN  --------------------------------
// SVD Line: 9217

//  <item> SFDITEM_FIELD__EFC_CR_MASS_ERASE_EN
//    <name> MASS_ERASE_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020000) Flash mass erasing enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.0..0> MASS_ERASE_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_CR_PAGE_ERASE_EN  --------------------------------
// SVD Line: 9224

//  <item> SFDITEM_FIELD__EFC_CR_PAGE_ERASE_EN
//    <name> PAGE_ERASE_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40020000) Flash page erasing enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.1..1> PAGE_ERASE_EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EFC_CR_PROG_EN  -----------------------------------
// SVD Line: 9231

//  <item> SFDITEM_FIELD__EFC_CR_PROG_EN
//    <name> PROG_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020000) Flash programming enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.2..2> PROG_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: EFC_CR_PROG_MODE  ----------------------------------
// SVD Line: 9238

//  <item> SFDITEM_FIELD__EFC_CR_PROG_MODE
//    <name> PROG_MODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020000) flash program mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.3..3> PROG_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EFC_CR_READ_ACC_EN  ---------------------------------
// SVD Line: 9245

//  <item> SFDITEM_FIELD__EFC_CR_READ_ACC_EN
//    <name> READ_ACC_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020000) Flash read acceleration enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.4..4> READ_ACC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EFC_CR_PREFETCH_EN  ---------------------------------
// SVD Line: 9252

//  <item> SFDITEM_FIELD__EFC_CR_PREFETCH_EN
//    <name> PREFETCH_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020000) Flash instruction prefetch enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.5..5> PREFETCH_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EFC_CR_WRITE_RELEASE_EN  ------------------------------
// SVD Line: 9259

//  <item> SFDITEM_FIELD__EFC_CR_WRITE_RELEASE_EN
//    <name> WRITE_RELEASE_EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020000) WRITE_RELEASE_EN </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.6..6> WRITE_RELEASE_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_CR_FACTORY_OP_EN  --------------------------------
// SVD Line: 9266

//  <item> SFDITEM_FIELD__EFC_CR_FACTORY_OP_EN
//    <name> FACTORY_OP_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020000) FACTORY_OP_EN </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.7..7> FACTORY_OP_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: EFC_CR_OPTION_OP_EN  --------------------------------
// SVD Line: 9273

//  <item> SFDITEM_FIELD__EFC_CR_OPTION_OP_EN
//    <name> OPTION_OP_EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020000) Option operation enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.8..8> OPTION_OP_EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EFC_CR_ECC_DIS  -----------------------------------
// SVD Line: 9280

//  <item> SFDITEM_FIELD__EFC_CR_ECC_DIS
//    <name> ECC_DIS </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40020000) ECC encoding disable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.9..9> ECC_DIS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_CR_INFO_BYTE_LOAD  -------------------------------
// SVD Line: 9287

//  <item> SFDITEM_FIELD__EFC_CR_INFO_BYTE_LOAD
//    <name> INFO_BYTE_LOAD </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40020000) Info byte load reset request </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_CR ) </loc>
//      <o.31..31> INFO_BYTE_LOAD
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EFC_CR  -------------------------------------
// SVD Line: 9208

//  <rtree> SFDITEM_REG__EFC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020000) control register </i>
//    <loc> ( (unsigned int)((EFC_CR >> 0) & 0xFFFFFFFF), ((EFC_CR = (EFC_CR & ~(0x800003FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x800003FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_CR_MASS_ERASE_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_PAGE_ERASE_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_PROG_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_PROG_MODE </item>
//    <item> SFDITEM_FIELD__EFC_CR_READ_ACC_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_PREFETCH_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_WRITE_RELEASE_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_FACTORY_OP_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_OPTION_OP_EN </item>
//    <item> SFDITEM_FIELD__EFC_CR_ECC_DIS </item>
//    <item> SFDITEM_FIELD__EFC_CR_INFO_BYTE_LOAD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: EFC_INT_EN  -------------------------------
// SVD Line: 9296

unsigned int EFC_INT_EN __AT (0x40020004);



// ----------------------  Field Item: EFC_INT_EN_OPERATION_DONE_INT_EN  --------------------------
// SVD Line: 9305

//  <item> SFDITEM_FIELD__EFC_INT_EN_OPERATION_DONE_INT_EN
//    <name> OPERATION_DONE_INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020004) OPERATION_DONE interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.0..0> OPERATION_DONE_INT_EN
//    </check>
//  </item>
//  


// ----------------------  Field Item: EFC_INT_EN_PROG_DATA_WAIT_INT_EN  --------------------------
// SVD Line: 9312

//  <item> SFDITEM_FIELD__EFC_INT_EN_PROG_DATA_WAIT_INT_EN
//    <name> PROG_DATA_WAIT_INT_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020004) PROG_DATA_WAIT interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.2..2> PROG_DATA_WAIT_INT_EN
//    </check>
//  </item>
//  


// -----------------------  Field Item: EFC_INT_EN_FLASHBUSY_ERR_INT_EN  --------------------------
// SVD Line: 9319

//  <item> SFDITEM_FIELD__EFC_INT_EN_FLASHBUSY_ERR_INT_EN
//    <name> FLASHBUSY_ERR_INT_EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020004) FLASHBUSY_ERR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.3..3> FLASHBUSY_ERR_INT_EN
//    </check>
//  </item>
//  


// -----------------------  Field Item: EFC_INT_EN_OPTION_WR_ERR_INT_EN  --------------------------
// SVD Line: 9326

//  <item> SFDITEM_FIELD__EFC_INT_EN_OPTION_WR_ERR_INT_EN
//    <name> OPTION_WR_ERR_INT_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020004) OPTION_WR_ERR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.4..4> OPTION_WR_ERR_INT_EN
//    </check>
//  </item>
//  


// ----------------------  Field Item: EFC_INT_EN_PAGE_ERASE_ERR_INT_EN  --------------------------
// SVD Line: 9333

//  <item> SFDITEM_FIELD__EFC_INT_EN_PAGE_ERASE_ERR_INT_EN
//    <name> PAGE_ERASE_ERR_INT_EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020004) PAGE_ERASE_ERR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.5..5> PAGE_ERASE_ERR_INT_EN
//    </check>
//  </item>
//  


// -------------------------  Field Item: EFC_INT_EN_PROG_ERR_INT_EN  -----------------------------
// SVD Line: 9340

//  <item> SFDITEM_FIELD__EFC_INT_EN_PROG_ERR_INT_EN
//    <name> PROG_ERR_INT_EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020004) PROG_ERR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.6..6> PROG_ERR_INT_EN
//    </check>
//  </item>
//  


// ----------------------  Field Item: EFC_INT_EN_ONE_BIT_CORRECT_INT_EN  -------------------------
// SVD Line: 9347

//  <item> SFDITEM_FIELD__EFC_INT_EN_ONE_BIT_CORRECT_INT_EN
//    <name> ONE_BIT_CORRECT_INT_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020004) ECC ONE_BIT_CORRECT interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.7..7> ONE_BIT_CORRECT_INT_EN
//    </check>
//  </item>
//  


// -----------------------  Field Item: EFC_INT_EN_TWO_BIT_ERROR_INT_EN  --------------------------
// SVD Line: 9354

//  <item> SFDITEM_FIELD__EFC_INT_EN_TWO_BIT_ERROR_INT_EN
//    <name> TWO_BIT_ERROR_INT_EN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020004) ECC TWO_BIT_ERROR interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_INT_EN ) </loc>
//      <o.8..8> TWO_BIT_ERROR_INT_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: EFC_INT_EN  -----------------------------------
// SVD Line: 9296

//  <rtree> SFDITEM_REG__EFC_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020004) interrupt enable register </i>
//    <loc> ( (unsigned int)((EFC_INT_EN >> 0) & 0xFFFFFFFF), ((EFC_INT_EN = (EFC_INT_EN & ~(0x1FDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_INT_EN_OPERATION_DONE_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_PROG_DATA_WAIT_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_FLASHBUSY_ERR_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_OPTION_WR_ERR_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_PAGE_ERASE_ERR_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_PROG_ERR_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_ONE_BIT_CORRECT_INT_EN </item>
//    <item> SFDITEM_FIELD__EFC_INT_EN_TWO_BIT_ERROR_INT_EN </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: EFC_SR  ---------------------------------
// SVD Line: 9363

unsigned int EFC_SR __AT (0x40020008);



// ----------------------------  Field Item: EFC_SR_OPERATION_DONE  -------------------------------
// SVD Line: 9372

//  <item> SFDITEM_FIELD__EFC_SR_OPERATION_DONE
//    <name> OPERATION_DONE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40020008) Flash operation status flag </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.0..0> OPERATION_DONE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_SR_READ_NUM_DONE  --------------------------------
// SVD Line: 9379

//  <item> SFDITEM_FIELD__EFC_SR_READ_NUM_DONE
//    <name> READ_NUM_DONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40020008) READ_NUM configuration status flag </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.1..1> READ_NUM_DONE
//    </check>
//  </item>
//  


// --------------------------  Field Item: EFC_SR_PROGRAM_DATA_WAIT  ------------------------------
// SVD Line: 9386

//  <item> SFDITEM_FIELD__EFC_SR_PROGRAM_DATA_WAIT
//    <name> PROGRAM_DATA_WAIT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40020008) Waiting for data to be written to the Flash memory </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.2..2> PROGRAM_DATA_WAIT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_SR_FLASHBUSY_ERR  --------------------------------
// SVD Line: 9393

//  <item> SFDITEM_FIELD__EFC_SR_FLASHBUSY_ERR
//    <name> FLASHBUSY_ERR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40020008) FLASHBUSY_ERR </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.3..3> FLASHBUSY_ERR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_SR_OPTION_WR_ERR  --------------------------------
// SVD Line: 9400

//  <item> SFDITEM_FIELD__EFC_SR_OPTION_WR_ERR
//    <name> OPTION_WR_ERR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40020008) OPTION_WR_ERR </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.4..4> OPTION_WR_ERR
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_SR_PAGE_ERASE_ERR  -------------------------------
// SVD Line: 9407

//  <item> SFDITEM_FIELD__EFC_SR_PAGE_ERASE_ERR
//    <name> PAGE_ERASE_ERR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40020008) The Flash info area dont support erasing operation </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.5..5> PAGE_ERASE_ERR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: EFC_SR_PROG_ERR  ----------------------------------
// SVD Line: 9414

//  <item> SFDITEM_FIELD__EFC_SR_PROG_ERR
//    <name> PROG_ERR </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40020008) PROG_ERR </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.6..6> PROG_ERR
//    </check>
//  </item>
//  


// ---------------------------  Field Item: EFC_SR_ONE_BIT_CORRECT  -------------------------------
// SVD Line: 9421

//  <item> SFDITEM_FIELD__EFC_SR_ONE_BIT_CORRECT
//    <name> ONE_BIT_CORRECT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40020008) ONE_BIT_CORRECT flag </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.7..7> ONE_BIT_CORRECT
//    </check>
//  </item>
//  


// ----------------------------  Field Item: EFC_SR_TWO_BIT_ERROR  --------------------------------
// SVD Line: 9428

//  <item> SFDITEM_FIELD__EFC_SR_TWO_BIT_ERROR
//    <name> TWO_BIT_ERROR </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40020008) TWO_BIT_ERROR flag </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_SR ) </loc>
//      <o.8..8> TWO_BIT_ERROR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: EFC_SR  -------------------------------------
// SVD Line: 9363

//  <rtree> SFDITEM_REG__EFC_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020008) status register </i>
//    <loc> ( (unsigned int)((EFC_SR >> 0) & 0xFFFFFFFF), ((EFC_SR = (EFC_SR & ~(0x1FDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_SR_OPERATION_DONE </item>
//    <item> SFDITEM_FIELD__EFC_SR_READ_NUM_DONE </item>
//    <item> SFDITEM_FIELD__EFC_SR_PROGRAM_DATA_WAIT </item>
//    <item> SFDITEM_FIELD__EFC_SR_FLASHBUSY_ERR </item>
//    <item> SFDITEM_FIELD__EFC_SR_OPTION_WR_ERR </item>
//    <item> SFDITEM_FIELD__EFC_SR_PAGE_ERASE_ERR </item>
//    <item> SFDITEM_FIELD__EFC_SR_PROG_ERR </item>
//    <item> SFDITEM_FIELD__EFC_SR_ONE_BIT_CORRECT </item>
//    <item> SFDITEM_FIELD__EFC_SR_TWO_BIT_ERROR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: EFC_PROGRAM_DATA0  ----------------------------
// SVD Line: 9437

unsigned int EFC_PROGRAM_DATA0 __AT (0x4002000C);



// ------------------------  Field Item: EFC_PROGRAM_DATA0_PROG_DATA0  ----------------------------
// SVD Line: 9446

//  <item> SFDITEM_FIELD__EFC_PROGRAM_DATA0_PROG_DATA0
//    <name> PROG_DATA0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002000C) programming data 0 </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_PROGRAM_DATA0 >> 0) & 0xFFFFFFFF), ((EFC_PROGRAM_DATA0 = (EFC_PROGRAM_DATA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: EFC_PROGRAM_DATA0  -------------------------------
// SVD Line: 9437

//  <rtree> SFDITEM_REG__EFC_PROGRAM_DATA0
//    <name> PROGRAM_DATA0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002000C) program data0 register </i>
//    <loc> ( (unsigned int)((EFC_PROGRAM_DATA0 >> 0) & 0xFFFFFFFF), ((EFC_PROGRAM_DATA0 = (EFC_PROGRAM_DATA0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_PROGRAM_DATA0_PROG_DATA0 </item>
//  </rtree>
//  


// ------------------------  Register Item Address: EFC_PROGRAM_DATA1  ----------------------------
// SVD Line: 9455

unsigned int EFC_PROGRAM_DATA1 __AT (0x40020010);



// ------------------------  Field Item: EFC_PROGRAM_DATA1_PROG_DATA1  ----------------------------
// SVD Line: 9464

//  <item> SFDITEM_FIELD__EFC_PROGRAM_DATA1_PROG_DATA1
//    <name> PROG_DATA1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020010) programming data 1 </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_PROGRAM_DATA1 >> 0) & 0xFFFFFFFF), ((EFC_PROGRAM_DATA1 = (EFC_PROGRAM_DATA1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: EFC_PROGRAM_DATA1  -------------------------------
// SVD Line: 9455

//  <rtree> SFDITEM_REG__EFC_PROGRAM_DATA1
//    <name> PROGRAM_DATA1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020010) program data1 register </i>
//    <loc> ( (unsigned int)((EFC_PROGRAM_DATA1 >> 0) & 0xFFFFFFFF), ((EFC_PROGRAM_DATA1 = (EFC_PROGRAM_DATA1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_PROGRAM_DATA1_PROG_DATA1 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: EFC_TIMING_CFG  -----------------------------
// SVD Line: 9473

unsigned int EFC_TIMING_CFG __AT (0x40020014);



// ---------------------------  Field Item: EFC_TIMING_CFG_READ_NUM  ------------------------------
// SVD Line: 9482

//  <item> SFDITEM_FIELD__EFC_TIMING_CFG_READ_NUM
//    <name> READ_NUM </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40020014) Program the number of wait states </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_TIMING_CFG >> 16) & 0xF), ((EFC_TIMING_CFG = (EFC_TIMING_CFG & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EFC_TIMING_CFG  ---------------------------------
// SVD Line: 9473

//  <rtree> SFDITEM_REG__EFC_TIMING_CFG
//    <name> TIMING_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40020014) timing config register </i>
//    <loc> ( (unsigned int)((EFC_TIMING_CFG >> 0) & 0xFFFFFFFF), ((EFC_TIMING_CFG = (EFC_TIMING_CFG & ~(0xF0000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_TIMING_CFG_READ_NUM </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EFC_PROTECT_SEQ  -----------------------------
// SVD Line: 9491

unsigned int EFC_PROTECT_SEQ __AT (0x40020018);



// -------------------------  Field Item: EFC_PROTECT_SEQ_PROTECT_SEQ  ----------------------------
// SVD Line: 9500

//  <item> SFDITEM_FIELD__EFC_PROTECT_SEQ_PROTECT_SEQ
//    <name> PROTECT_SEQ </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40020018) Protection sequence for the configuration of register EFC_CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_PROTECT_SEQ >> 0) & 0x0), ((EFC_PROTECT_SEQ = (EFC_PROTECT_SEQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EFC_PROTECT_SEQ  --------------------------------
// SVD Line: 9491

//  <rtree> SFDITEM_REG__EFC_PROTECT_SEQ
//    <name> PROTECT_SEQ </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40020018) protect sequence register </i>
//    <loc> ( (unsigned int)((EFC_PROTECT_SEQ >> 0) & 0xFFFFFFFF), ((EFC_PROTECT_SEQ = (EFC_PROTECT_SEQ & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__EFC_PROTECT_SEQ_PROTECT_SEQ </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EFC_CHIP_PATTERN  ----------------------------
// SVD Line: 9509

unsigned int EFC_CHIP_PATTERN __AT (0x40020020);



// --------------------------  Field Item: EFC_CHIP_PATTERN_PATTERN  ------------------------------
// SVD Line: 9518

//  <item> SFDITEM_FIELD__EFC_CHIP_PATTERN_PATTERN
//    <name> PATTERN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020020) PATTERN </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_CHIP_PATTERN >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: EFC_CHIP_PATTERN  --------------------------------
// SVD Line: 9509

//  <rtree> SFDITEM_REG__EFC_CHIP_PATTERN
//    <name> CHIP_PATTERN </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020020) chip pattern register </i>
//    <loc> ( (unsigned int)((EFC_CHIP_PATTERN >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_CHIP_PATTERN_PATTERN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: EFC_IP_TRIM_L  ------------------------------
// SVD Line: 9527

unsigned int EFC_IP_TRIM_L __AT (0x40020024);



// -----------------------------  Field Item: EFC_IP_TRIM_L_TRIM  ---------------------------------
// SVD Line: 9536

//  <item> SFDITEM_FIELD__EFC_IP_TRIM_L_TRIM
//    <name> TRIM </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020024) TRIM </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_IP_TRIM_L >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EFC_IP_TRIM_L  ---------------------------------
// SVD Line: 9527

//  <rtree> SFDITEM_REG__EFC_IP_TRIM_L
//    <name> IP_TRIM_L </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020024) analog ip trimming low register </i>
//    <loc> ( (unsigned int)((EFC_IP_TRIM_L >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_IP_TRIM_L_TRIM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: EFC_IP_TRIM_H  ------------------------------
// SVD Line: 9545

unsigned int EFC_IP_TRIM_H __AT (0x40020028);



// -----------------------------  Field Item: EFC_IP_TRIM_H_TRIM  ---------------------------------
// SVD Line: 9554

//  <item> SFDITEM_FIELD__EFC_IP_TRIM_H_TRIM
//    <name> TRIM </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020028) TRIM </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_IP_TRIM_H >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: EFC_IP_TRIM_H  ---------------------------------
// SVD Line: 9545

//  <rtree> SFDITEM_REG__EFC_IP_TRIM_H
//    <name> IP_TRIM_H </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020028) analog ip trimming high register </i>
//    <loc> ( (unsigned int)((EFC_IP_TRIM_H >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_IP_TRIM_H_TRIM </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EFC_SN_L  --------------------------------
// SVD Line: 9563

unsigned int EFC_SN_L __AT (0x4002002C);



// ---------------------------  Field Item: EFC_SN_L_SERIAL_NUM_LOW  ------------------------------
// SVD Line: 9572

//  <item> SFDITEM_FIELD__EFC_SN_L_SERIAL_NUM_LOW
//    <name> SERIAL_NUM_LOW </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002002C) Less significant 32 bits of the chip serial number </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_SN_L >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: EFC_SN_L  ------------------------------------
// SVD Line: 9563

//  <rtree> SFDITEM_REG__EFC_SN_L
//    <name> SN_L </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002002C) serial number low register </i>
//    <loc> ( (unsigned int)((EFC_SN_L >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_SN_L_SERIAL_NUM_LOW </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: EFC_SN_H  --------------------------------
// SVD Line: 9581

unsigned int EFC_SN_H __AT (0x40020030);



// --------------------------  Field Item: EFC_SN_H_SERIAL_NUM_HIGH  ------------------------------
// SVD Line: 9590

//  <item> SFDITEM_FIELD__EFC_SN_H_SERIAL_NUM_HIGH
//    <name> SERIAL_NUM_HIGH </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020030) More significant 32 bits of the chip serial number </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_SN_H >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: EFC_SN_H  ------------------------------------
// SVD Line: 9581

//  <rtree> SFDITEM_REG__EFC_SN_H
//    <name> SN_H </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020030) serial number high register </i>
//    <loc> ( (unsigned int)((EFC_SN_H >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_SN_H_SERIAL_NUM_HIGH </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EFC_TEST_INFO_L  -----------------------------
// SVD Line: 9599

unsigned int EFC_TEST_INFO_L __AT (0x40020034);



// ----------------------------  Field Item: EFC_TEST_INFO_L_INFO  --------------------------------
// SVD Line: 9608

//  <item> SFDITEM_FIELD__EFC_TEST_INFO_L_INFO
//    <name> INFO </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020034) INFO </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_TEST_INFO_L >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EFC_TEST_INFO_L  --------------------------------
// SVD Line: 9599

//  <rtree> SFDITEM_REG__EFC_TEST_INFO_L
//    <name> TEST_INFO_L </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020034) test info low register </i>
//    <loc> ( (unsigned int)((EFC_TEST_INFO_L >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_TEST_INFO_L_INFO </item>
//  </rtree>
//  


// -------------------------  Register Item Address: EFC_TEST_INFO_H  -----------------------------
// SVD Line: 9617

unsigned int EFC_TEST_INFO_H __AT (0x40020038);



// ----------------------------  Field Item: EFC_TEST_INFO_H_INFO  --------------------------------
// SVD Line: 9626

//  <item> SFDITEM_FIELD__EFC_TEST_INFO_H_INFO
//    <name> INFO </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020038) INFO </i>
//    <edit> 
//      <loc> ( (unsigned int)((EFC_TEST_INFO_H >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: EFC_TEST_INFO_H  --------------------------------
// SVD Line: 9617

//  <rtree> SFDITEM_REG__EFC_TEST_INFO_H
//    <name> TEST_INFO_H </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020038) test info high register </i>
//    <loc> ( (unsigned int)((EFC_TEST_INFO_H >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_TEST_INFO_H_INFO </item>
//  </rtree>
//  


// -----------------------  Register Item Address: EFC_OPTION_CSR_BYTES  --------------------------
// SVD Line: 9635

unsigned int EFC_OPTION_CSR_BYTES __AT (0x4002003C);



// ----------------------  Field Item: EFC_OPTION_CSR_BYTES_FLASH_BOOT0  --------------------------
// SVD Line: 9644

//  <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_FLASH_BOOT0
//    <name> FLASH_BOOT0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4002003C) This bit can be used to identify the boot mode </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_CSR_BYTES ) </loc>
//      <o.0..0> FLASH_BOOT0
//    </check>
//  </item>
//  


// --------------------  Field Item: EFC_OPTION_CSR_BYTES_USE_FLASH_BOOT0  ------------------------
// SVD Line: 9651

//  <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_USE_FLASH_BOOT0
//    <name> USE_FLASH_BOOT0 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4002003C) This bit can be used to identify the boot mode </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_CSR_BYTES ) </loc>
//      <o.1..1> USE_FLASH_BOOT0
//    </check>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_CSR_BYTES_FLASH_BOOT1  --------------------------
// SVD Line: 9658

//  <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_FLASH_BOOT1
//    <name> FLASH_BOOT1 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4002003C) This bit can be used to identify the boot mode </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_CSR_BYTES ) </loc>
//      <o.2..2> FLASH_BOOT1
//    </check>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_CSR_BYTES_SYS_SRAM_RST  -------------------------
// SVD Line: 9665

//  <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_SYS_SRAM_RST
//    <name> SYS_SRAM_RST </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4002003C) Whether to clear system SRAM during system startup after its reset </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_CSR_BYTES ) </loc>
//      <o.3..3> SYS_SRAM_RST
//    </check>
//  </item>
//  


// ---------------------  Field Item: EFC_OPTION_CSR_BYTES_SECURE_AREA_EN  ------------------------
// SVD Line: 9672

//  <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_SECURE_AREA_EN
//    <name> SECURE_AREA_EN </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4002003C) Flash secure area status flag </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_CSR_BYTES ) </loc>
//      <o.4..4> SECURE_AREA_EN
//    </check>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_CSR_BYTES_DEBUG_LEVEL  --------------------------
// SVD Line: 9679

//  <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_DEBUG_LEVEL
//    <name> DEBUG_LEVEL </name>
//    <r> 
//    <i> [Bits 6..5] RO (@ 0x4002003C) This bit can be used to identify the boot mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_CSR_BYTES >> 5) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: EFC_OPTION_CSR_BYTES  ------------------------------
// SVD Line: 9635

//  <rtree> SFDITEM_REG__EFC_OPTION_CSR_BYTES
//    <name> OPTION_CSR_BYTES </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002003C) option control and status register </i>
//    <loc> ( (unsigned int)((EFC_OPTION_CSR_BYTES >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_FLASH_BOOT0 </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_USE_FLASH_BOOT0 </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_FLASH_BOOT1 </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_SYS_SRAM_RST </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_SECURE_AREA_EN </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_CSR_BYTES_DEBUG_LEVEL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: EFC_OPTION_EO_BYTES  ---------------------------
// SVD Line: 9688

unsigned int EFC_OPTION_EO_BYTES __AT (0x40020040);



// ---------------------  Field Item: EFC_OPTION_EO_BYTES_EXE_ONLY1_START  ------------------------
// SVD Line: 9697

//  <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY1_START
//    <name> EXE_ONLY1_START </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x40020040) Exe_Only1 area start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_EO_BYTES >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_EO_BYTES_EXE_ONLY1_END  -------------------------
// SVD Line: 9704

//  <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY1_END
//    <name> EXE_ONLY1_END </name>
//    <r> 
//    <i> [Bits 11..6] RO (@ 0x40020040) Exe_Only1 area end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_EO_BYTES >> 6) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------  Field Item: EFC_OPTION_EO_BYTES_EXE_ONLY2_START  ------------------------
// SVD Line: 9711

//  <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY2_START
//    <name> EXE_ONLY2_START </name>
//    <r> 
//    <i> [Bits 17..12] RO (@ 0x40020040) Exe_Only2 area start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_EO_BYTES >> 12) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_EO_BYTES_EXE_ONLY2_END  -------------------------
// SVD Line: 9718

//  <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY2_END
//    <name> EXE_ONLY2_END </name>
//    <r> 
//    <i> [Bits 23..18] RO (@ 0x40020040) Exe_Only2 area end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_EO_BYTES >> 18) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_EO_BYTES_EXE_ONLY_KEEP  -------------------------
// SVD Line: 9725

//  <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY_KEEP
//    <name> EXE_ONLY_KEEP </name>
//    <r> 
//    <i> [Bit 24] RO (@ 0x40020040) Whether Exe_Only area is kept when the Debug_Level changes from 1 to 0 </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_EO_BYTES ) </loc>
//      <o.24..24> EXE_ONLY_KEEP
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: EFC_OPTION_EO_BYTES  ------------------------------
// SVD Line: 9688

//  <rtree> SFDITEM_REG__EFC_OPTION_EO_BYTES
//    <name> OPTION_EO_BYTES </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020040) option exe-only bytes register </i>
//    <loc> ( (unsigned int)((EFC_OPTION_EO_BYTES >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY1_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY1_END </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY2_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY2_END </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_EO_BYTES_EXE_ONLY_KEEP </item>
//  </rtree>
//  


// -----------------------  Register Item Address: EFC_OPTION_WP_BYTES  ---------------------------
// SVD Line: 9734

unsigned int EFC_OPTION_WP_BYTES __AT (0x40020044);



// ---------------------  Field Item: EFC_OPTION_WP_BYTES_WRPROTECT_START  ------------------------
// SVD Line: 9743

//  <item> SFDITEM_FIELD__EFC_OPTION_WP_BYTES_WRPROTECT_START
//    <name> WRPROTECT_START </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x40020044) Write-protected area start offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_WP_BYTES >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------  Field Item: EFC_OPTION_WP_BYTES_WRPROTECT_END  -------------------------
// SVD Line: 9750

//  <item> SFDITEM_FIELD__EFC_OPTION_WP_BYTES_WRPROTECT_END
//    <name> WRPROTECT_END </name>
//    <r> 
//    <i> [Bits 11..6] RO (@ 0x40020044) Write-protected area end offset </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_WP_BYTES >> 6) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: EFC_OPTION_WP_BYTES  ------------------------------
// SVD Line: 9734

//  <rtree> SFDITEM_REG__EFC_OPTION_WP_BYTES
//    <name> OPTION_WP_BYTES </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020044) option write-protect bytes register </i>
//    <loc> ( (unsigned int)((EFC_OPTION_WP_BYTES >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_OPTION_WP_BYTES_WRPROTECT_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_WP_BYTES_WRPROTECT_END </item>
//  </rtree>
//  


// ----------------------  Register Item Address: EFC_OPTION_SEC_BYTES0  --------------------------
// SVD Line: 9759

unsigned int EFC_OPTION_SEC_BYTES0 __AT (0x40020048);



// ------------------  Field Item: EFC_OPTION_SEC_BYTES0_FLASH_SECURE_START  ----------------------
// SVD Line: 9768

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_FLASH_SECURE_START
//    <name> FLASH_SECURE_START </name>
//    <r> 
//    <i> [Bits 5..0] RO (@ 0x40020048) Flash Secure area start </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES0 >> 0) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: EFC_OPTION_SEC_BYTES0_FLASH_SECURE_END  -----------------------
// SVD Line: 9775

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_FLASH_SECURE_END
//    <name> FLASH_SECURE_END </name>
//    <r> 
//    <i> [Bits 11..6] RO (@ 0x40020048) Flash Secure area end </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES0 >> 6) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: EFC_OPTION_SEC_BYTES0_SYSRAM_SECURE_START  ---------------------
// SVD Line: 9782

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_SYSRAM_SECURE_START
//    <name> SYSRAM_SECURE_START </name>
//    <r> 
//    <i> [Bits 17..12] RO (@ 0x40020048) SysRam Secure area start </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES0 >> 12) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: EFC_OPTION_SEC_BYTES0_SYSRAM_SECURE_END  ----------------------
// SVD Line: 9789

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_SYSRAM_SECURE_END
//    <name> SYSRAM_SECURE_END </name>
//    <r> 
//    <i> [Bits 23..18] RO (@ 0x40020048) SysRam Secure area end </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES0 >> 18) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: EFC_OPTION_SEC_BYTES0  -----------------------------
// SVD Line: 9759

//  <rtree> SFDITEM_REG__EFC_OPTION_SEC_BYTES0
//    <name> OPTION_SEC_BYTES0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40020048) option secure byte 0 register </i>
//    <loc> ( (unsigned int)((EFC_OPTION_SEC_BYTES0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_FLASH_SECURE_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_FLASH_SECURE_END </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_SYSRAM_SECURE_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES0_SYSRAM_SECURE_END </item>
//  </rtree>
//  


// ----------------------  Register Item Address: EFC_OPTION_SEC_BYTES1  --------------------------
// SVD Line: 9798

unsigned int EFC_OPTION_SEC_BYTES1 __AT (0x4002004C);



// ------------------  Field Item: EFC_OPTION_SEC_BYTES1_RETRAM_SECURE_START  ---------------------
// SVD Line: 9807

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_RETRAM_SECURE_START
//    <name> RETRAM_SECURE_START </name>
//    <r> 
//    <i> [Bits 4..0] RO (@ 0x4002004C) RetRam Secure area start </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES1 >> 0) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: EFC_OPTION_SEC_BYTES1_RETRAM_SECURE_END  ----------------------
// SVD Line: 9814

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_RETRAM_SECURE_END
//    <name> RETRAM_SECURE_END </name>
//    <r> 
//    <i> [Bits 9..5] RO (@ 0x4002004C) RetRam Secure area end </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES1 >> 5) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: EFC_OPTION_SEC_BYTES1_FLASH_HIDE_START  -----------------------
// SVD Line: 9821

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_FLASH_HIDE_START
//    <name> FLASH_HIDE_START </name>
//    <r> 
//    <i> [Bits 15..10] RO (@ 0x4002004C) FlashHide area start </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES1 >> 10) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// -------------------  Field Item: EFC_OPTION_SEC_BYTES1_FLASH_HIDE_ENABLE  ----------------------
// SVD Line: 9828

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_FLASH_HIDE_ENABLE
//    <name> FLASH_HIDE_ENABLE </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x4002004C) FlashHide area enable control </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_SEC_BYTES1 ) </loc>
//      <o.16..16> FLASH_HIDE_ENABLE
//    </check>
//  </item>
//  


// -------------------  Field Item: EFC_OPTION_SEC_BYTES1_SYSRAM_HIDE_START  ----------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_SYSRAM_HIDE_START
//    <name> SYSRAM_HIDE_START </name>
//    <r> 
//    <i> [Bits 22..17] RO (@ 0x4002004C) SysRamHide area start </i>
//    <edit> 
//      <loc> ( (unsigned char)((EFC_OPTION_SEC_BYTES1 >> 17) & 0x3F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------  Field Item: EFC_OPTION_SEC_BYTES1_SYSRAM_HIDE_ENABLE  ----------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_SYSRAM_HIDE_ENABLE
//    <name> SYSRAM_HIDE_ENABLE </name>
//    <r> 
//    <i> [Bit 23] RO (@ 0x4002004C) SysRamHide area enable control </i>
//    <check> 
//      <loc> ( (unsigned int) EFC_OPTION_SEC_BYTES1 ) </loc>
//      <o.23..23> SYSRAM_HIDE_ENABLE
//    </check>
//  </item>
//  


// --------------------------  Register RTree: EFC_OPTION_SEC_BYTES1  -----------------------------
// SVD Line: 9798

//  <rtree> SFDITEM_REG__EFC_OPTION_SEC_BYTES1
//    <name> OPTION_SEC_BYTES1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4002004C) option secure byte 1 register </i>
//    <loc> ( (unsigned int)((EFC_OPTION_SEC_BYTES1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_RETRAM_SECURE_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_RETRAM_SECURE_END </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_FLASH_HIDE_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_FLASH_HIDE_ENABLE </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_SYSRAM_HIDE_START </item>
//    <item> SFDITEM_FIELD__EFC_OPTION_SEC_BYTES1_SYSRAM_HIDE_ENABLE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: EFC  --------------------------------------
// SVD Line: 9194

//  <view> EFC
//    <name> EFC </name>
//    <item> SFDITEM_REG__EFC_CR </item>
//    <item> SFDITEM_REG__EFC_INT_EN </item>
//    <item> SFDITEM_REG__EFC_SR </item>
//    <item> SFDITEM_REG__EFC_PROGRAM_DATA0 </item>
//    <item> SFDITEM_REG__EFC_PROGRAM_DATA1 </item>
//    <item> SFDITEM_REG__EFC_TIMING_CFG </item>
//    <item> SFDITEM_REG__EFC_PROTECT_SEQ </item>
//    <item> SFDITEM_REG__EFC_CHIP_PATTERN </item>
//    <item> SFDITEM_REG__EFC_IP_TRIM_L </item>
//    <item> SFDITEM_REG__EFC_IP_TRIM_H </item>
//    <item> SFDITEM_REG__EFC_SN_L </item>
//    <item> SFDITEM_REG__EFC_SN_H </item>
//    <item> SFDITEM_REG__EFC_TEST_INFO_L </item>
//    <item> SFDITEM_REG__EFC_TEST_INFO_H </item>
//    <item> SFDITEM_REG__EFC_OPTION_CSR_BYTES </item>
//    <item> SFDITEM_REG__EFC_OPTION_EO_BYTES </item>
//    <item> SFDITEM_REG__EFC_OPTION_WP_BYTES </item>
//    <item> SFDITEM_REG__EFC_OPTION_SEC_BYTES0 </item>
//    <item> SFDITEM_REG__EFC_OPTION_SEC_BYTES1 </item>
//  </view>
//  


// --------------------------  Register Item Address: LORAC_SSP_CR0  ------------------------------
// SVD Line: 9867

unsigned int LORAC_SSP_CR0 __AT (0x40009000);



// ------------------------------  Field Item: LORAC_SSP_CR0_DSS  ---------------------------------
// SVD Line: 9876

//  <item> SFDITEM_FIELD__LORAC_SSP_CR0_DSS
//    <name> DSS </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40009000) Data width setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((LORAC_SSP_CR0 >> 0) & 0xF), ((LORAC_SSP_CR0 = (LORAC_SSP_CR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR0_FRF  ---------------------------------
// SVD Line: 9883

//  <item> SFDITEM_FIELD__LORAC_SSP_CR0_FRF
//    <name> FRF </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40009000) SSP frame formats setting </i>
//    <edit> 
//      <loc> ( (unsigned char)((LORAC_SSP_CR0 >> 4) & 0x3), ((LORAC_SSP_CR0 = (LORAC_SSP_CR0 & ~(0x3UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR0_SPO  ---------------------------------
// SVD Line: 9890

//  <item> SFDITEM_FIELD__LORAC_SSP_CR0_SPO
//    <name> SPO </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40009000) SSP polarity setting </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_CR0 ) </loc>
//      <o.6..6> SPO
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR0_SPH  ---------------------------------
// SVD Line: 9897

//  <item> SFDITEM_FIELD__LORAC_SSP_CR0_SPH
//    <name> SPH </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40009000) SSP phase setting </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_CR0 ) </loc>
//      <o.7..7> SPH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR0_SCR  ---------------------------------
// SVD Line: 9904

//  <item> SFDITEM_FIELD__LORAC_SSP_CR0_SCR
//    <name> SCR </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40009000) Serial clock rate </i>
//    <edit> 
//      <loc> ( (unsigned char)((LORAC_SSP_CR0 >> 8) & 0xFF), ((LORAC_SSP_CR0 = (LORAC_SSP_CR0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_CR0  ---------------------------------
// SVD Line: 9867

//  <rtree> SFDITEM_REG__LORAC_SSP_CR0
//    <name> SSP_CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009000) ssp control register 0 </i>
//    <loc> ( (unsigned int)((LORAC_SSP_CR0 >> 0) & 0xFFFFFFFF), ((LORAC_SSP_CR0 = (LORAC_SSP_CR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR0_DSS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR0_FRF </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR0_SPO </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR0_SPH </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR0_SCR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_SSP_CR1  ------------------------------
// SVD Line: 9913

unsigned int LORAC_SSP_CR1 __AT (0x40009004);



// ------------------------------  Field Item: LORAC_SSP_CR1_LBM  ---------------------------------
// SVD Line: 9922

//  <item> SFDITEM_FIELD__LORAC_SSP_CR1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009004) loopback mode </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_CR1 ) </loc>
//      <o.0..0> LBM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR1_SSE  ---------------------------------
// SVD Line: 9929

//  <item> SFDITEM_FIELD__LORAC_SSP_CR1_SSE
//    <name> SSE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40009004) SSP enable </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_CR1 ) </loc>
//      <o.1..1> SSE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR1_MS  ----------------------------------
// SVD Line: 9936

//  <item> SFDITEM_FIELD__LORAC_SSP_CR1_MS
//    <name> MS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40009004) Master/slave mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_CR1 ) </loc>
//      <o.2..2> MS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_CR1_SOD  ---------------------------------
// SVD Line: 9943

//  <item> SFDITEM_FIELD__LORAC_SSP_CR1_SOD
//    <name> SOD </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40009004) SSP output disable in slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_CR1 ) </loc>
//      <o.3..3> SOD
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_CR1  ---------------------------------
// SVD Line: 9913

//  <rtree> SFDITEM_REG__LORAC_SSP_CR1
//    <name> SSP_CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009004) ssp control register 1 </i>
//    <loc> ( (unsigned int)((LORAC_SSP_CR1 >> 0) & 0xFFFFFFFF), ((LORAC_SSP_CR1 = (LORAC_SSP_CR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR1_LBM </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR1_SSE </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR1_MS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_CR1_SOD </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LORAC_SSP_DR  ------------------------------
// SVD Line: 9952

unsigned int LORAC_SSP_DR __AT (0x40009008);



// ------------------------------  Field Item: LORAC_SSP_DR_DATA  ---------------------------------
// SVD Line: 9961

//  <item> SFDITEM_FIELD__LORAC_SSP_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40009008) SSP TX/RX data </i>
//    <edit> 
//      <loc> ( (unsigned short)((LORAC_SSP_DR >> 0) & 0xFFFF), ((LORAC_SSP_DR = (LORAC_SSP_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_DR  ----------------------------------
// SVD Line: 9952

//  <rtree> SFDITEM_REG__LORAC_SSP_DR
//    <name> SSP_DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009008) ssp data register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_DR >> 0) & 0xFFFFFFFF), ((LORAC_SSP_DR = (LORAC_SSP_DR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_DR_DATA </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LORAC_SSP_SR  ------------------------------
// SVD Line: 9970

unsigned int LORAC_SSP_SR __AT (0x4000900C);



// ------------------------------  Field Item: LORAC_SSP_SR_TFE  ----------------------------------
// SVD Line: 9979

//  <item> SFDITEM_FIELD__LORAC_SSP_SR_TFE
//    <name> TFE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000900C) TX FIFO empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_SR ) </loc>
//      <o.0..0> TFE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_SR_TNF  ----------------------------------
// SVD Line: 9986

//  <item> SFDITEM_FIELD__LORAC_SSP_SR_TNF
//    <name> TNF </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000900C) TX FIFO not full flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_SR ) </loc>
//      <o.1..1> TNF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_SR_RNE  ----------------------------------
// SVD Line: 9993

//  <item> SFDITEM_FIELD__LORAC_SSP_SR_RNE
//    <name> RNE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000900C) RX FIFO not empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_SR ) </loc>
//      <o.2..2> RNE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_SR_RFF  ----------------------------------
// SVD Line: 10000

//  <item> SFDITEM_FIELD__LORAC_SSP_SR_RFF
//    <name> RFF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000900C) RX FIFO full flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_SR ) </loc>
//      <o.3..3> RFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LORAC_SSP_SR_BSY  ----------------------------------
// SVD Line: 10007

//  <item> SFDITEM_FIELD__LORAC_SSP_SR_BSY
//    <name> BSY </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000900C) SSP busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_SR ) </loc>
//      <o.4..4> BSY
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_SR  ----------------------------------
// SVD Line: 9970

//  <rtree> SFDITEM_REG__LORAC_SSP_SR
//    <name> SSP_SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000900C) ssp status register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_SR_TFE </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_SR_TNF </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_SR_RNE </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_SR_RFF </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_SR_BSY </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_SSP_CPSR  -----------------------------
// SVD Line: 10016

unsigned int LORAC_SSP_CPSR __AT (0x40009010);



// ---------------------------  Field Item: LORAC_SSP_CPSR_CPSDVSR  -------------------------------
// SVD Line: 10025

//  <item> SFDITEM_FIELD__LORAC_SSP_CPSR_CPSDVSR
//    <name> CPSDVSR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40009010) Clock prescaler divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((LORAC_SSP_CPSR >> 0) & 0xFF), ((LORAC_SSP_CPSR = (LORAC_SSP_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: LORAC_SSP_CPSR  ---------------------------------
// SVD Line: 10016

//  <rtree> SFDITEM_REG__LORAC_SSP_CPSR
//    <name> SSP_CPSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009010) ssp clock prescale register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_CPSR >> 0) & 0xFFFFFFFF), ((LORAC_SSP_CPSR = (LORAC_SSP_CPSR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_CPSR_CPSDVSR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_SSP_IMSC  -----------------------------
// SVD Line: 10034

unsigned int LORAC_SSP_IMSC __AT (0x40009014);



// ----------------------------  Field Item: LORAC_SSP_IMSC_RORIM  --------------------------------
// SVD Line: 10043

//  <item> SFDITEM_FIELD__LORAC_SSP_IMSC_RORIM
//    <name> RORIM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009014) RX overrun interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_IMSC ) </loc>
//      <o.0..0> RORIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_IMSC_RTIM  --------------------------------
// SVD Line: 10050

//  <item> SFDITEM_FIELD__LORAC_SSP_IMSC_RTIM
//    <name> RTIM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40009014) RX timeout interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_IMSC ) </loc>
//      <o.1..1> RTIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_IMSC_RXIM  --------------------------------
// SVD Line: 10057

//  <item> SFDITEM_FIELD__LORAC_SSP_IMSC_RXIM
//    <name> RXIM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40009014) RX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_IMSC ) </loc>
//      <o.2..2> RXIM
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_IMSC_TXIM  --------------------------------
// SVD Line: 10064

//  <item> SFDITEM_FIELD__LORAC_SSP_IMSC_TXIM
//    <name> TXIM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40009014) TX interrupt mask bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_IMSC ) </loc>
//      <o.3..3> TXIM
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LORAC_SSP_IMSC  ---------------------------------
// SVD Line: 10034

//  <rtree> SFDITEM_REG__LORAC_SSP_IMSC
//    <name> SSP_IMSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009014) ssp interrupt mask set or clear register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_IMSC >> 0) & 0xFFFFFFFF), ((LORAC_SSP_IMSC = (LORAC_SSP_IMSC & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_IMSC_RORIM </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_IMSC_RTIM </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_IMSC_RXIM </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_IMSC_TXIM </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_SSP_RIS  ------------------------------
// SVD Line: 10073

unsigned int LORAC_SSP_RIS __AT (0x40009018);



// ----------------------------  Field Item: LORAC_SSP_RIS_RORRIS  --------------------------------
// SVD Line: 10082

//  <item> SFDITEM_FIELD__LORAC_SSP_RIS_RORRIS
//    <name> RORRIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40009018) RX overrun raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_RIS ) </loc>
//      <o.0..0> RORRIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_RIS_RTRIS  --------------------------------
// SVD Line: 10089

//  <item> SFDITEM_FIELD__LORAC_SSP_RIS_RTRIS
//    <name> RTRIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40009018) RX timeout raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_RIS ) </loc>
//      <o.1..1> RTRIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_RIS_RXRIS  --------------------------------
// SVD Line: 10096

//  <item> SFDITEM_FIELD__LORAC_SSP_RIS_RXRIS
//    <name> RXRIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40009018) RX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_RIS ) </loc>
//      <o.2..2> RXRIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_RIS_TXRIS  --------------------------------
// SVD Line: 10103

//  <item> SFDITEM_FIELD__LORAC_SSP_RIS_TXRIS
//    <name> TXRIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40009018) TX raw interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_RIS ) </loc>
//      <o.3..3> TXRIS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_RIS  ---------------------------------
// SVD Line: 10073

//  <rtree> SFDITEM_REG__LORAC_SSP_RIS
//    <name> SSP_RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40009018) ssp raw interrupt status register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_RIS_RORRIS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_RIS_RTRIS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_RIS_RXRIS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_RIS_TXRIS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_SSP_MIS  ------------------------------
// SVD Line: 10112

unsigned int LORAC_SSP_MIS __AT (0x4000901C);



// ----------------------------  Field Item: LORAC_SSP_MIS_RORMIS  --------------------------------
// SVD Line: 10121

//  <item> SFDITEM_FIELD__LORAC_SSP_MIS_RORMIS
//    <name> RORMIS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000901C) RX overrun masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_MIS ) </loc>
//      <o.0..0> RORMIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_MIS_RTMIS  --------------------------------
// SVD Line: 10128

//  <item> SFDITEM_FIELD__LORAC_SSP_MIS_RTMIS
//    <name> RTMIS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000901C) RX timeout masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_MIS ) </loc>
//      <o.1..1> RTMIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_MIS_RXMIS  --------------------------------
// SVD Line: 10135

//  <item> SFDITEM_FIELD__LORAC_SSP_MIS_RXMIS
//    <name> RXMIS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000901C) RX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_MIS ) </loc>
//      <o.2..2> RXMIS
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_MIS_TXMIS  --------------------------------
// SVD Line: 10142

//  <item> SFDITEM_FIELD__LORAC_SSP_MIS_TXMIS
//    <name> TXMIS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000901C) TX masked interrupt status </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_MIS ) </loc>
//      <o.3..3> TXMIS
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_MIS  ---------------------------------
// SVD Line: 10112

//  <rtree> SFDITEM_REG__LORAC_SSP_MIS
//    <name> SSP_MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000901C) ssp masked interrupt status register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_MIS_RORMIS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_MIS_RTMIS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_MIS_RXMIS </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_MIS_TXMIS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_SSP_ICR  ------------------------------
// SVD Line: 10151

unsigned int LORAC_SSP_ICR __AT (0x40009020);



// -----------------------------  Field Item: LORAC_SSP_ICR_RORIC  --------------------------------
// SVD Line: 10160

//  <item> SFDITEM_FIELD__LORAC_SSP_ICR_RORIC
//    <name> RORIC </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40009020) RX overrun interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_ICR ) </loc>
//      <o.0..0> RORIC
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LORAC_SSP_ICR_RTIC  ---------------------------------
// SVD Line: 10167

//  <item> SFDITEM_FIELD__LORAC_SSP_ICR_RTIC
//    <name> RTIC </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40009020) RX timeout interrupt clear </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_ICR ) </loc>
//      <o.1..1> RTIC
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LORAC_SSP_ICR  ---------------------------------
// SVD Line: 10151

//  <rtree> SFDITEM_REG__LORAC_SSP_ICR
//    <name> SSP_ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40009020) ssp interrupt clear register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_ICR >> 0) & 0xFFFFFFFF), ((LORAC_SSP_ICR = (LORAC_SSP_ICR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_ICR_RORIC </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_ICR_RTIC </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LORAC_SSP_DMA_CR  ----------------------------
// SVD Line: 10176

unsigned int LORAC_SSP_DMA_CR __AT (0x40009024);



// ---------------------------  Field Item: LORAC_SSP_DMA_CR_RXDMAE  ------------------------------
// SVD Line: 10185

//  <item> SFDITEM_FIELD__LORAC_SSP_DMA_CR_RXDMAE
//    <name> RXDMAE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009024) DMA RX enable </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_DMA_CR ) </loc>
//      <o.0..0> RXDMAE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LORAC_SSP_DMA_CR_TXDMAE  ------------------------------
// SVD Line: 10192

//  <item> SFDITEM_FIELD__LORAC_SSP_DMA_CR_TXDMAE
//    <name> TXDMAE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40009024) DMA TX enable </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_SSP_DMA_CR ) </loc>
//      <o.1..1> TXDMAE
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: LORAC_SSP_DMA_CR  --------------------------------
// SVD Line: 10176

//  <rtree> SFDITEM_REG__LORAC_SSP_DMA_CR
//    <name> SSP_DMA_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009024) ssp DMA control register </i>
//    <loc> ( (unsigned int)((LORAC_SSP_DMA_CR >> 0) & 0xFFFFFFFF), ((LORAC_SSP_DMA_CR = (LORAC_SSP_DMA_CR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_SSP_DMA_CR_RXDMAE </item>
//    <item> SFDITEM_FIELD__LORAC_SSP_DMA_CR_TXDMAE </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LORAC_LORAC_CR0  -----------------------------
// SVD Line: 10201

unsigned int LORAC_LORAC_CR0 __AT (0x40009100);



// -----------------------  Field Item: LORAC_LORAC_CR0_IRQ_DIG_INT_EN  ---------------------------
// SVD Line: 10210

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR0_IRQ_DIG_INT_EN
//    <name> IRQ_DIG_INT_EN </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40009100) IRQ_DIG_INT high level interrupt enable </i>
//    <edit> 
//      <loc> ( (unsigned char)((LORAC_LORAC_CR0 >> 5) & 0x7), ((LORAC_LORAC_CR0 = (LORAC_LORAC_CR0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------  Field Item: LORAC_LORAC_CR0_SCK_MOSI_SEL  ----------------------------
// SVD Line: 10217

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR0_SCK_MOSI_SEL
//    <name> SCK_MOSI_SEL </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40009100) SCK/MOSI/MISO source selection for RF TRX </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR0 ) </loc>
//      <o.9..9> SCK_MOSI_SEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LORAC_LORAC_CR0_NSS_SEL  ------------------------------
// SVD Line: 10224

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR0_NSS_SEL
//    <name> NSS_SEL </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40009100) NSS source selection for RF TRX </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR0 ) </loc>
//      <o.10..10> NSS_SEL
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LORAC_LORAC_CR0  --------------------------------
// SVD Line: 10201

//  <rtree> SFDITEM_REG__LORAC_LORAC_CR0
//    <name> LORAC_CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009100) control register 0 </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_CR0 >> 0) & 0xFFFFFFFF), ((LORAC_LORAC_CR0 = (LORAC_LORAC_CR0 & ~(0x6E0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x6E0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR0_IRQ_DIG_INT_EN </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR0_SCK_MOSI_SEL </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR0_NSS_SEL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: LORAC_LORAC_CR1  -----------------------------
// SVD Line: 10233

unsigned int LORAC_LORAC_CR1 __AT (0x40009104);



// -----------------------  Field Item: LORAC_LORAC_CR1_PWRTCXO_EN_BAT  ---------------------------
// SVD Line: 10242

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR1_PWRTCXO_EN_BAT
//    <name> PWRTCXO_EN_BAT </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009104) PWRTCXO_EN_BAT control </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR1 ) </loc>
//      <o.0..0> PWRTCXO_EN_BAT
//    </check>
//  </item>
//  


// -------------------------  Field Item: LORAC_LORAC_CR1_TCXO_EN_BAT  ----------------------------
// SVD Line: 10249

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR1_TCXO_EN_BAT
//    <name> TCXO_EN_BAT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40009104) TCXO_EN_BAT control </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR1 ) </loc>
//      <o.1..1> TCXO_EN_BAT
//    </check>
//  </item>
//  


// -----------------------  Field Item: LORAC_LORAC_CR1_CLK_32M_EN_BAT  ---------------------------
// SVD Line: 10256

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR1_CLK_32M_EN_BAT
//    <name> CLK_32M_EN_BAT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40009104) CLK_32M_EN_BAT control </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR1 ) </loc>
//      <o.2..2> CLK_32M_EN_BAT
//    </check>
//  </item>
//  


// -------------------------  Field Item: LORAC_LORAC_CR1_NRESET_BAT  -----------------------------
// SVD Line: 10263

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR1_NRESET_BAT
//    <name> NRESET_BAT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40009104) NRESET_BAT control </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR1 ) </loc>
//      <o.5..5> NRESET_BAT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: LORAC_LORAC_CR1_POR_BAT  ------------------------------
// SVD Line: 10270

//  <item> SFDITEM_FIELD__LORAC_LORAC_CR1_POR_BAT
//    <name> POR_BAT </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40009104) POR_BAT control </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_CR1 ) </loc>
//      <o.7..7> POR_BAT
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LORAC_LORAC_CR1  --------------------------------
// SVD Line: 10233

//  <rtree> SFDITEM_REG__LORAC_LORAC_CR1
//    <name> LORAC_CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009104) control register 1 </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_CR1 >> 0) & 0xFFFFFFFF), ((LORAC_LORAC_CR1 = (LORAC_LORAC_CR1 & ~(0xA7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xA7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR1_PWRTCXO_EN_BAT </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR1_TCXO_EN_BAT </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR1_CLK_32M_EN_BAT </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR1_NRESET_BAT </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_CR1_POR_BAT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LORAC_LORAC_SR  -----------------------------
// SVD Line: 10279

unsigned int LORAC_LORAC_SR __AT (0x40009108);



// ----------------------  Field Item: LORAC_LORAC_SR_CLK_32M_RDY_BAT_SR  -------------------------
// SVD Line: 10288

//  <item> SFDITEM_FIELD__LORAC_LORAC_SR_CLK_32M_RDY_BAT_SR
//    <name> CLK_32M_RDY_BAT_SR </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40009108) CLK_32M_RDY_BAT status flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_SR ) </loc>
//      <o.1..1> CLK_32M_RDY_BAT_SR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LORAC_LORAC_SR_IRQ_DIG_SR  -----------------------------
// SVD Line: 10295

//  <item> SFDITEM_FIELD__LORAC_LORAC_SR_IRQ_DIG_SR
//    <name> IRQ_DIG_SR </name>
//    <r> 
//    <i> [Bits 7..5] RO (@ 0x40009108) IRQ_DIG flag </i>
//    <edit> 
//      <loc> ( (unsigned char)((LORAC_LORAC_SR >> 5) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: LORAC_LORAC_SR_BUSY_DIG_SR  -----------------------------
// SVD Line: 10302

//  <item> SFDITEM_FIELD__LORAC_LORAC_SR_BUSY_DIG_SR
//    <name> BUSY_DIG_SR </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x40009108) BUSY_DIG status flag </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_SR ) </loc>
//      <o.8..8> BUSY_DIG_SR
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: LORAC_LORAC_SR  ---------------------------------
// SVD Line: 10279

//  <rtree> SFDITEM_REG__LORAC_LORAC_SR
//    <name> LORAC_SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40009108) status register </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_SR_CLK_32M_RDY_BAT_SR </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_SR_IRQ_DIG_SR </item>
//    <item> SFDITEM_FIELD__LORAC_LORAC_SR_BUSY_DIG_SR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LORAC_LORAC_NSS_CR  ---------------------------
// SVD Line: 10311

unsigned int LORAC_LORAC_NSS_CR __AT (0x4000910C);



// -------------------------  Field Item: LORAC_LORAC_NSS_CR_REG_NSS  -----------------------------
// SVD Line: 10320

//  <item> SFDITEM_FIELD__LORAC_LORAC_NSS_CR_REG_NSS
//    <name> REG_NSS </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000910C) NSS control bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_NSS_CR ) </loc>
//      <o.0..0> REG_NSS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: LORAC_LORAC_NSS_CR  -------------------------------
// SVD Line: 10311

//  <rtree> SFDITEM_REG__LORAC_LORAC_NSS_CR
//    <name> LORAC_NSS_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000910C) nss control register </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_NSS_CR >> 0) & 0xFFFFFFFF), ((LORAC_LORAC_NSS_CR = (LORAC_LORAC_NSS_CR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_NSS_CR_REG_NSS </item>
//  </rtree>
//  


// ------------------------  Register Item Address: LORAC_LORAC_SCK_CR  ---------------------------
// SVD Line: 10329

unsigned int LORAC_LORAC_SCK_CR __AT (0x40009110);



// -------------------------  Field Item: LORAC_LORAC_SCK_CR_REG_SCK  -----------------------------
// SVD Line: 10338

//  <item> SFDITEM_FIELD__LORAC_LORAC_SCK_CR_REG_SCK
//    <name> REG_SCK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009110) SCK control bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_SCK_CR ) </loc>
//      <o.0..0> REG_SCK
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: LORAC_LORAC_SCK_CR  -------------------------------
// SVD Line: 10329

//  <rtree> SFDITEM_REG__LORAC_LORAC_SCK_CR
//    <name> LORAC_SCK_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009110) sck control register </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_SCK_CR >> 0) & 0xFFFFFFFF), ((LORAC_LORAC_SCK_CR = (LORAC_LORAC_SCK_CR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_SCK_CR_REG_SCK </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LORAC_LORAC_MOSI_CR  ---------------------------
// SVD Line: 10347

unsigned int LORAC_LORAC_MOSI_CR __AT (0x40009114);



// ------------------------  Field Item: LORAC_LORAC_MOSI_CR_REG_MOSI  ----------------------------
// SVD Line: 10356

//  <item> SFDITEM_FIELD__LORAC_LORAC_MOSI_CR_REG_MOSI
//    <name> REG_MOSI </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40009114) MOSI control bit </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_MOSI_CR ) </loc>
//      <o.0..0> REG_MOSI
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: LORAC_LORAC_MOSI_CR  ------------------------------
// SVD Line: 10347

//  <rtree> SFDITEM_REG__LORAC_LORAC_MOSI_CR
//    <name> LORAC_MOSI_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40009114) mosi control register </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_MOSI_CR >> 0) & 0xFFFFFFFF), ((LORAC_LORAC_MOSI_CR = (LORAC_LORAC_MOSI_CR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_MOSI_CR_REG_MOSI </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LORAC_LORAC_MISO_SR  ---------------------------
// SVD Line: 10365

unsigned int LORAC_LORAC_MISO_SR __AT (0x40009118);



// ------------------------  Field Item: LORAC_LORAC_MISO_SR_REG_MISO  ----------------------------
// SVD Line: 10374

//  <item> SFDITEM_FIELD__LORAC_LORAC_MISO_SR_REG_MISO
//    <name> REG_MISO </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40009118) REG_MISO </i>
//    <check> 
//      <loc> ( (unsigned int) LORAC_LORAC_MISO_SR ) </loc>
//      <o.0..0> REG_MISO
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: LORAC_LORAC_MISO_SR  ------------------------------
// SVD Line: 10365

//  <rtree> SFDITEM_REG__LORAC_LORAC_MISO_SR
//    <name> LORAC_MISO_SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40009118) miso control register </i>
//    <loc> ( (unsigned int)((LORAC_LORAC_MISO_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LORAC_LORAC_MISO_SR_REG_MISO </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: LORAC  -------------------------------------
// SVD Line: 9853

//  <view> LORAC
//    <name> LORAC </name>
//    <item> SFDITEM_REG__LORAC_SSP_CR0 </item>
//    <item> SFDITEM_REG__LORAC_SSP_CR1 </item>
//    <item> SFDITEM_REG__LORAC_SSP_DR </item>
//    <item> SFDITEM_REG__LORAC_SSP_SR </item>
//    <item> SFDITEM_REG__LORAC_SSP_CPSR </item>
//    <item> SFDITEM_REG__LORAC_SSP_IMSC </item>
//    <item> SFDITEM_REG__LORAC_SSP_RIS </item>
//    <item> SFDITEM_REG__LORAC_SSP_MIS </item>
//    <item> SFDITEM_REG__LORAC_SSP_ICR </item>
//    <item> SFDITEM_REG__LORAC_SSP_DMA_CR </item>
//    <item> SFDITEM_REG__LORAC_LORAC_CR0 </item>
//    <item> SFDITEM_REG__LORAC_LORAC_CR1 </item>
//    <item> SFDITEM_REG__LORAC_LORAC_SR </item>
//    <item> SFDITEM_REG__LORAC_LORAC_NSS_CR </item>
//    <item> SFDITEM_REG__LORAC_LORAC_SCK_CR </item>
//    <item> SFDITEM_REG__LORAC_LORAC_MOSI_CR </item>
//    <item> SFDITEM_REG__LORAC_LORAC_MISO_SR </item>
//  </view>
//  


// -----------------------------  Register Item Address: AFEC_CR  ---------------------------------
// SVD Line: 10399

unsigned int AFEC_CR __AT (0x40008200);



// ---------------------------------  Field Item: AFEC_CR_CR  -------------------------------------
// SVD Line: 10408

//  <item> SFDITEM_FIELD__AFEC_CR_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008200) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((AFEC_CR >> 0) & 0xFFFFFFFF), ((AFEC_CR = (AFEC_CR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: AFEC_CR  ------------------------------------
// SVD Line: 10399

//  <rtree> SFDITEM_REG__AFEC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008200) control register </i>
//    <loc> ( (unsigned int)((AFEC_CR >> 0) & 0xFFFFFFFF), ((AFEC_CR = (AFEC_CR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AFEC_CR_CR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: AFEC_INT_SR  -------------------------------
// SVD Line: 10417

unsigned int AFEC_INT_SR __AT (0x40008204);



// -------------------------------  Field Item: AFEC_INT_SR_CR  -----------------------------------
// SVD Line: 10426

//  <item> SFDITEM_FIELD__AFEC_INT_SR_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008204) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((AFEC_INT_SR >> 0) & 0xFFFFFFFF), ((AFEC_INT_SR = (AFEC_INT_SR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: AFEC_INT_SR  ----------------------------------
// SVD Line: 10417

//  <rtree> SFDITEM_REG__AFEC_INT_SR
//    <name> INT_SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008204) interrupt status register </i>
//    <loc> ( (unsigned int)((AFEC_INT_SR >> 0) & 0xFFFFFFFF), ((AFEC_INT_SR = (AFEC_INT_SR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__AFEC_INT_SR_CR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: AFEC_RAW_SR  -------------------------------
// SVD Line: 10435

unsigned int AFEC_RAW_SR __AT (0x40008208);



// --------------------------  Field Item: AFEC_RAW_SR_RCO24M_READY  ------------------------------
// SVD Line: 10444

//  <item> SFDITEM_FIELD__AFEC_RAW_SR_RCO24M_READY
//    <name> RCO24M_READY </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40008208) RCO24M_READY </i>
//    <check> 
//      <loc> ( (unsigned int) AFEC_RAW_SR ) </loc>
//      <o.2..2> RCO24M_READY
//    </check>
//  </item>
//  


// --------------------------  Field Item: AFEC_RAW_SR_SR_PLL_UNLOCK  -----------------------------
// SVD Line: 10451

//  <item> SFDITEM_FIELD__AFEC_RAW_SR_SR_PLL_UNLOCK
//    <name> SR_PLL_UNLOCK </name>
//    <r> 
//    <i> [Bit 30] RO (@ 0x40008208) SR_PLL_UNLOCK </i>
//    <check> 
//      <loc> ( (unsigned int) AFEC_RAW_SR ) </loc>
//      <o.30..30> SR_PLL_UNLOCK
//    </check>
//  </item>
//  


// -------------------------  Field Item: AFEC_RAW_SR_SR_RCO4M_READY  -----------------------------
// SVD Line: 10458

//  <item> SFDITEM_FIELD__AFEC_RAW_SR_SR_RCO4M_READY
//    <name> SR_RCO4M_READY </name>
//    <r> 
//    <i> [Bit 31] RO (@ 0x40008208) SR_RCO4M_READY </i>
//    <check> 
//      <loc> ( (unsigned int) AFEC_RAW_SR ) </loc>
//      <o.31..31> SR_RCO4M_READY
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: AFEC_RAW_SR  ----------------------------------
// SVD Line: 10435

//  <rtree> SFDITEM_REG__AFEC_RAW_SR
//    <name> RAW_SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40008208) raw status register </i>
//    <loc> ( (unsigned int)((AFEC_RAW_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__AFEC_RAW_SR_RCO24M_READY </item>
//    <item> SFDITEM_FIELD__AFEC_RAW_SR_SR_PLL_UNLOCK </item>
//    <item> SFDITEM_FIELD__AFEC_RAW_SR_SR_RCO4M_READY </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: AFEC  -------------------------------------
// SVD Line: 10385

//  <view> AFEC
//    <name> AFEC </name>
//    <item> SFDITEM_REG__AFEC_CR </item>
//    <item> SFDITEM_REG__AFEC_INT_SR </item>
//    <item> SFDITEM_REG__AFEC_RAW_SR </item>
//  </view>
//  


// -----------------------------  Register Item Address: IWDG_CR  ---------------------------------
// SVD Line: 10483

unsigned int IWDG_CR __AT (0x4001D000);



// --------------------------------  Field Item: IWDG_CR_START  -----------------------------------
// SVD Line: 10492

//  <item> SFDITEM_FIELD__IWDG_CR_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D000) START </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_CR ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// -------------------------------  Field Item: IWDG_CR_PREDIV  -----------------------------------
// SVD Line: 10499

//  <item> SFDITEM_FIELD__IWDG_CR_PREDIV
//    <name> PREDIV </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x4001D000) PREDIV </i>
//    <edit> 
//      <loc> ( (unsigned char)((IWDG_CR >> 1) & 0x7), ((IWDG_CR = (IWDG_CR & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: IWDG_CR_WKEN  ------------------------------------
// SVD Line: 10506

//  <item> SFDITEM_FIELD__IWDG_CR_WKEN
//    <name> WKEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D000) WKEN </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_CR ) </loc>
//      <o.4..4> WKEN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: IWDG_CR_RSTEN  -----------------------------------
// SVD Line: 10513

//  <item> SFDITEM_FIELD__IWDG_CR_RSTEN
//    <name> RSTEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D000) RSTEN </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_CR ) </loc>
//      <o.5..5> RSTEN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: IWDG_CR  ------------------------------------
// SVD Line: 10483

//  <rtree> SFDITEM_REG__IWDG_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D000) control register </i>
//    <loc> ( (unsigned int)((IWDG_CR >> 0) & 0xFFFFFFFF), ((IWDG_CR = (IWDG_CR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_CR_START </item>
//    <item> SFDITEM_FIELD__IWDG_CR_PREDIV </item>
//    <item> SFDITEM_FIELD__IWDG_CR_WKEN </item>
//    <item> SFDITEM_FIELD__IWDG_CR_RSTEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_MAX  --------------------------------
// SVD Line: 10522

unsigned int IWDG_MAX __AT (0x4001D004);



// --------------------------------  Field Item: IWDG_MAX_MAX  ------------------------------------
// SVD Line: 10531

//  <item> SFDITEM_FIELD__IWDG_MAX_MAX
//    <name> MAX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D004) MAX </i>
//    <edit> 
//      <loc> ( (unsigned int)((IWDG_MAX >> 0) & 0xFFFFFFFF), ((IWDG_MAX = (IWDG_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_MAX  ------------------------------------
// SVD Line: 10522

//  <rtree> SFDITEM_REG__IWDG_MAX
//    <name> MAX </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D004) max value register </i>
//    <loc> ( (unsigned int)((IWDG_MAX >> 0) & 0xFFFFFFFF), ((IWDG_MAX = (IWDG_MAX & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_MAX_MAX </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_WIN  --------------------------------
// SVD Line: 10540

unsigned int IWDG_WIN __AT (0x4001D008);



// --------------------------------  Field Item: IWDG_WIN_WIN  ------------------------------------
// SVD Line: 10549

//  <item> SFDITEM_FIELD__IWDG_WIN_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D008) WIN </i>
//    <edit> 
//      <loc> ( (unsigned int)((IWDG_WIN >> 0) & 0xFFFFFFFF), ((IWDG_WIN = (IWDG_WIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_WIN  ------------------------------------
// SVD Line: 10540

//  <rtree> SFDITEM_REG__IWDG_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D008) window value register </i>
//    <loc> ( (unsigned int)((IWDG_WIN >> 0) & 0xFFFFFFFF), ((IWDG_WIN = (IWDG_WIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_WIN_WIN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_SR  ---------------------------------
// SVD Line: 10558

unsigned int IWDG_SR __AT (0x4001D00C);



// ----------------------------  Field Item: IWDG_SR_WRITE_CR_DONE  -------------------------------
// SVD Line: 10567

//  <item> SFDITEM_FIELD__IWDG_SR_WRITE_CR_DONE
//    <name> WRITE_CR_DONE </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001D00C) WRITE_CR_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.0..0> WRITE_CR_DONE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: IWDG_SR_MAX_SET_DONE  --------------------------------
// SVD Line: 10574

//  <item> SFDITEM_FIELD__IWDG_SR_MAX_SET_DONE
//    <name> MAX_SET_DONE </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001D00C) MAX_SET_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.1..1> MAX_SET_DONE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: IWDG_SR_WIN_SET_DONE  --------------------------------
// SVD Line: 10581

//  <item> SFDITEM_FIELD__IWDG_SR_WIN_SET_DONE
//    <name> WIN_SET_DONE </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001D00C) WIN_SET_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.2..2> WIN_SET_DONE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: IWDG_SR_WRITE_SR2_DONE  -------------------------------
// SVD Line: 10588

//  <item> SFDITEM_FIELD__IWDG_SR_WRITE_SR2_DONE
//    <name> WRITE_SR2_DONE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001D00C) WRITE_SR2_DONE </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR ) </loc>
//      <o.3..3> WRITE_SR2_DONE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: IWDG_SR  ------------------------------------
// SVD Line: 10558

//  <rtree> SFDITEM_REG__IWDG_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001D00C) status register </i>
//    <loc> ( (unsigned int)((IWDG_SR >> 0) & 0xFFFFFFFF), ((IWDG_SR = (IWDG_SR & ~(0x8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_SR_WRITE_CR_DONE </item>
//    <item> SFDITEM_FIELD__IWDG_SR_MAX_SET_DONE </item>
//    <item> SFDITEM_FIELD__IWDG_SR_WIN_SET_DONE </item>
//    <item> SFDITEM_FIELD__IWDG_SR_WRITE_SR2_DONE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_SR1  --------------------------------
// SVD Line: 10597

unsigned int IWDG_SR1 __AT (0x4001D010);



// ---------------------------  Field Item: IWDG_SR1_RESET_REQ_SYNC  ------------------------------
// SVD Line: 10606

//  <item> SFDITEM_FIELD__IWDG_SR1_RESET_REQ_SYNC
//    <name> RESET_REQ_SYNC </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001D010) RESET_REQ_SYNC </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR1 ) </loc>
//      <o.12..12> RESET_REQ_SYNC
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_SR1  ------------------------------------
// SVD Line: 10597

//  <rtree> SFDITEM_REG__IWDG_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001D010) status register 1 </i>
//    <loc> ( (unsigned int)((IWDG_SR1 >> 0) & 0xFFFFFFFF), ((IWDG_SR1 = (IWDG_SR1 & ~(0x1000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_SR1_RESET_REQ_SYNC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_CR1  --------------------------------
// SVD Line: 10615

unsigned int IWDG_CR1 __AT (0x4001D014);



// --------------------------  Field Item: IWDG_CR1_RESET_REQ_INT_EN  -----------------------------
// SVD Line: 10624

//  <item> SFDITEM_FIELD__IWDG_CR1_RESET_REQ_INT_EN
//    <name> RESET_REQ_INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D014) RESET_REQ_INT_EN </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_CR1 ) </loc>
//      <o.0..0> RESET_REQ_INT_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: IWDG_CR1_RESET_REQ_RST_EN  -----------------------------
// SVD Line: 10631

//  <item> SFDITEM_FIELD__IWDG_CR1_RESET_REQ_RST_EN
//    <name> RESET_REQ_RST_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001D014) RESET_REQ_RST_EN </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_CR1 ) </loc>
//      <o.1..1> RESET_REQ_RST_EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_CR1  ------------------------------------
// SVD Line: 10615

//  <rtree> SFDITEM_REG__IWDG_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D014) control register 1 </i>
//    <loc> ( (unsigned int)((IWDG_CR1 >> 0) & 0xFFFFFFFF), ((IWDG_CR1 = (IWDG_CR1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_CR1_RESET_REQ_INT_EN </item>
//    <item> SFDITEM_FIELD__IWDG_CR1_RESET_REQ_RST_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: IWDG_SR2  --------------------------------
// SVD Line: 10640

unsigned int IWDG_SR2 __AT (0x4001D018);



// ----------------------------  Field Item: IWDG_SR2_RESET_REQ_SR  -------------------------------
// SVD Line: 10649

//  <item> SFDITEM_FIELD__IWDG_SR2_RESET_REQ_SR
//    <name> RESET_REQ_SR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D018) RESET_REQ_SR </i>
//    <check> 
//      <loc> ( (unsigned int) IWDG_SR2 ) </loc>
//      <o.0..0> RESET_REQ_SR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: IWDG_SR2  ------------------------------------
// SVD Line: 10640

//  <rtree> SFDITEM_REG__IWDG_SR2
//    <name> SR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D018) status register 2 </i>
//    <loc> ( (unsigned int)((IWDG_SR2 >> 0) & 0xFFFFFFFF), ((IWDG_SR2 = (IWDG_SR2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__IWDG_SR2_RESET_REQ_SR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: IWDG  -------------------------------------
// SVD Line: 10469

//  <view> IWDG
//    <name> IWDG </name>
//    <item> SFDITEM_REG__IWDG_CR </item>
//    <item> SFDITEM_REG__IWDG_MAX </item>
//    <item> SFDITEM_REG__IWDG_WIN </item>
//    <item> SFDITEM_REG__IWDG_SR </item>
//    <item> SFDITEM_REG__IWDG_SR1 </item>
//    <item> SFDITEM_REG__IWDG_CR1 </item>
//    <item> SFDITEM_REG__IWDG_SR2 </item>
//  </view>
//  


// -----------------------------  Register Item Address: WDG_LOAD  --------------------------------
// SVD Line: 10674

unsigned int WDG_LOAD __AT (0x4001E000);



// --------------------------------  Field Item: WDG_LOAD_DATA  -----------------------------------
// SVD Line: 10683

//  <item> SFDITEM_FIELD__WDG_LOAD_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E000) DATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_LOAD >> 0) & 0xFFFFFFFF), ((WDG_LOAD = (WDG_LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDG_LOAD  ------------------------------------
// SVD Line: 10674

//  <rtree> SFDITEM_REG__WDG_LOAD
//    <name> LOAD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E000) load register </i>
//    <loc> ( (unsigned int)((WDG_LOAD >> 0) & 0xFFFFFFFF), ((WDG_LOAD = (WDG_LOAD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_LOAD_DATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDG_VALUE  --------------------------------
// SVD Line: 10692

unsigned int WDG_VALUE __AT (0x4001E004);



// -------------------------------  Field Item: WDG_VALUE_DATA  -----------------------------------
// SVD Line: 10701

//  <item> SFDITEM_FIELD__WDG_VALUE_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E004) DATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_VALUE >> 0) & 0xFFFFFFFF), ((WDG_VALUE = (WDG_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDG_VALUE  -----------------------------------
// SVD Line: 10692

//  <rtree> SFDITEM_REG__WDG_VALUE
//    <name> VALUE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E004) value register </i>
//    <loc> ( (unsigned int)((WDG_VALUE >> 0) & 0xFFFFFFFF), ((WDG_VALUE = (WDG_VALUE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_VALUE_DATA </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WDG_CONTROL  -------------------------------
// SVD Line: 10710

unsigned int WDG_CONTROL __AT (0x4001E008);



// -----------------------------  Field Item: WDG_CONTROL_CONTROL  --------------------------------
// SVD Line: 10719

//  <item> SFDITEM_FIELD__WDG_CONTROL_CONTROL
//    <name> CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E008) CONTROL </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_CONTROL >> 0) & 0xFFFFFFFF), ((WDG_CONTROL = (WDG_CONTROL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: WDG_CONTROL  ----------------------------------
// SVD Line: 10710

//  <rtree> SFDITEM_REG__WDG_CONTROL
//    <name> CONTROL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E008) control register </i>
//    <loc> ( (unsigned int)((WDG_CONTROL >> 0) & 0xFFFFFFFF), ((WDG_CONTROL = (WDG_CONTROL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_CONTROL_CONTROL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDG_INTCLR  -------------------------------
// SVD Line: 10728

unsigned int WDG_INTCLR __AT (0x4001E00C);



// -------------------------------  Field Item: WDG_INTCLR_DATA  ----------------------------------
// SVD Line: 10737

//  <item> SFDITEM_FIELD__WDG_INTCLR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E00C) DATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_INTCLR >> 0) & 0xFFFFFFFF), ((WDG_INTCLR = (WDG_INTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: WDG_INTCLR  -----------------------------------
// SVD Line: 10728

//  <rtree> SFDITEM_REG__WDG_INTCLR
//    <name> INTCLR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001E00C) clear interrupt register </i>
//    <loc> ( (unsigned int)((WDG_INTCLR >> 0) & 0xFFFFFFFF), ((WDG_INTCLR = (WDG_INTCLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_INTCLR_DATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDG_RIS  ---------------------------------
// SVD Line: 10746

unsigned int WDG_RIS __AT (0x4001E010);



// ---------------------------------  Field Item: WDG_RIS_RIS  ------------------------------------
// SVD Line: 10755

//  <item> SFDITEM_FIELD__WDG_RIS_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E010) RIS </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: WDG_RIS  ------------------------------------
// SVD Line: 10746

//  <rtree> SFDITEM_REG__WDG_RIS
//    <name> RIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E010) raw interrupt status register </i>
//    <loc> ( (unsigned int)((WDG_RIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_RIS_RIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDG_MIS  ---------------------------------
// SVD Line: 10764

unsigned int WDG_MIS __AT (0x4001E014);



// ---------------------------------  Field Item: WDG_MIS_MIS  ------------------------------------
// SVD Line: 10773

//  <item> SFDITEM_FIELD__WDG_MIS_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E014) MIS </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: WDG_MIS  ------------------------------------
// SVD Line: 10764

//  <rtree> SFDITEM_REG__WDG_MIS
//    <name> MIS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001E014) interrupt status register </i>
//    <loc> ( (unsigned int)((WDG_MIS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_MIS_MIS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDG_LOCK  --------------------------------
// SVD Line: 10782

unsigned int WDG_LOCK __AT (0x4001EC00);



// --------------------------------  Field Item: WDG_LOCK_LOCK  -----------------------------------
// SVD Line: 10791

//  <item> SFDITEM_FIELD__WDG_LOCK_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001EC00) LOCK </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_LOCK >> 0) & 0xFFFFFFFF), ((WDG_LOCK = (WDG_LOCK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDG_LOCK  ------------------------------------
// SVD Line: 10782

//  <rtree> SFDITEM_REG__WDG_LOCK
//    <name> LOCK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001EC00) lock register </i>
//    <loc> ( (unsigned int)((WDG_LOCK >> 0) & 0xFFFFFFFF), ((WDG_LOCK = (WDG_LOCK & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_LOCK_LOCK </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDG_ITCR  --------------------------------
// SVD Line: 10800

unsigned int WDG_ITCR __AT (0x4001EF00);



// --------------------------------  Field Item: WDG_ITCR_ITCR  -----------------------------------
// SVD Line: 10809

//  <item> SFDITEM_FIELD__WDG_ITCR_ITCR
//    <name> ITCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001EF00) ITCR </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_ITCR >> 0) & 0xFFFFFFFF), ((WDG_ITCR = (WDG_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDG_ITCR  ------------------------------------
// SVD Line: 10800

//  <rtree> SFDITEM_REG__WDG_ITCR
//    <name> ITCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001EF00) integration test control register </i>
//    <loc> ( (unsigned int)((WDG_ITCR >> 0) & 0xFFFFFFFF), ((WDG_ITCR = (WDG_ITCR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_ITCR_ITCR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDG_ITOP  --------------------------------
// SVD Line: 10818

unsigned int WDG_ITOP __AT (0x4001EF04);



// --------------------------------  Field Item: WDG_ITOP_ITOP  -----------------------------------
// SVD Line: 10827

//  <item> SFDITEM_FIELD__WDG_ITOP_ITOP
//    <name> ITOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001EF04) ITOP </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_ITOP >> 0) & 0xFFFFFFFF), ((WDG_ITOP = (WDG_ITOP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDG_ITOP  ------------------------------------
// SVD Line: 10818

//  <rtree> SFDITEM_REG__WDG_ITOP
//    <name> ITOP </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001EF04) integration test output set register </i>
//    <loc> ( (unsigned int)((WDG_ITOP >> 0) & 0xFFFFFFFF), ((WDG_ITOP = (WDG_ITOP & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDG_ITOP_ITOP </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID4  ------------------------------
// SVD Line: 10836

unsigned int WDG_PERIPHID4 __AT (0x4001EFD0);



// ---------------------------  Field Item: WDG_PERIPHID4_PERIPHID  -------------------------------
// SVD Line: 10845

//  <item> SFDITEM_FIELD__WDG_PERIPHID4_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001EFD0) PERIPHID </i>
//    <check> 
//      <loc> ( (unsigned int) WDG_PERIPHID4 ) </loc>
//      <o.0..0> PERIPHID
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID4  ---------------------------------
// SVD Line: 10836

//  <rtree> SFDITEM_REG__WDG_PERIPHID4
//    <name> PERIPHID4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFD0) peripheral id register 4 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID4_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID5  ------------------------------
// SVD Line: 10854

unsigned int WDG_PERIPHID5 __AT (0x4001EFD4);



// ---------------------------  Field Item: WDG_PERIPHID5_PERIPHID  -------------------------------
// SVD Line: 10863

//  <item> SFDITEM_FIELD__WDG_PERIPHID5_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFD4) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID5 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID5  ---------------------------------
// SVD Line: 10854

//  <rtree> SFDITEM_REG__WDG_PERIPHID5
//    <name> PERIPHID5 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFD4) peripheral id register 5 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID5 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID5_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID6  ------------------------------
// SVD Line: 10872

unsigned int WDG_PERIPHID6 __AT (0x4001EFD8);



// ---------------------------  Field Item: WDG_PERIPHID6_PERIPHID  -------------------------------
// SVD Line: 10881

//  <item> SFDITEM_FIELD__WDG_PERIPHID6_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFD8) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID6 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID6  ---------------------------------
// SVD Line: 10872

//  <rtree> SFDITEM_REG__WDG_PERIPHID6
//    <name> PERIPHID6 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFD8) peripheral id register 6 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID6 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID6_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID7  ------------------------------
// SVD Line: 10890

unsigned int WDG_PERIPHID7 __AT (0x4001EFDC);



// ---------------------------  Field Item: WDG_PERIPHID7_PERIPHID  -------------------------------
// SVD Line: 10899

//  <item> SFDITEM_FIELD__WDG_PERIPHID7_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFDC) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID7 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID7  ---------------------------------
// SVD Line: 10890

//  <rtree> SFDITEM_REG__WDG_PERIPHID7
//    <name> PERIPHID7 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFDC) peripheral id register 7 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID7 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID7_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID0  ------------------------------
// SVD Line: 10908

unsigned int WDG_PERIPHID0 __AT (0x4001EFE0);



// ---------------------------  Field Item: WDG_PERIPHID0_PERIPHID  -------------------------------
// SVD Line: 10917

//  <item> SFDITEM_FIELD__WDG_PERIPHID0_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFE0) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID0  ---------------------------------
// SVD Line: 10908

//  <rtree> SFDITEM_REG__WDG_PERIPHID0
//    <name> PERIPHID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFE0) peripheral id register 0 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID0_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID1  ------------------------------
// SVD Line: 10926

unsigned int WDG_PERIPHID1 __AT (0x4001EFE4);



// ---------------------------  Field Item: WDG_PERIPHID1_PERIPHID  -------------------------------
// SVD Line: 10935

//  <item> SFDITEM_FIELD__WDG_PERIPHID1_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFE4) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID1  ---------------------------------
// SVD Line: 10926

//  <rtree> SFDITEM_REG__WDG_PERIPHID1
//    <name> PERIPHID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFE4) peripheral id register 1 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID1_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID2  ------------------------------
// SVD Line: 10944

unsigned int WDG_PERIPHID2 __AT (0x4001EFE8);



// ---------------------------  Field Item: WDG_PERIPHID2_PERIPHID  -------------------------------
// SVD Line: 10953

//  <item> SFDITEM_FIELD__WDG_PERIPHID2_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFE8) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID2  ---------------------------------
// SVD Line: 10944

//  <rtree> SFDITEM_REG__WDG_PERIPHID2
//    <name> PERIPHID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFE8) peripheral id register 2 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID2_PERIPHID </item>
//  </rtree>
//  


// --------------------------  Register Item Address: WDG_PERIPHID3  ------------------------------
// SVD Line: 10962

unsigned int WDG_PERIPHID3 __AT (0x4001EFEC);



// ---------------------------  Field Item: WDG_PERIPHID3_PERIPHID  -------------------------------
// SVD Line: 10971

//  <item> SFDITEM_FIELD__WDG_PERIPHID3_PERIPHID
//    <name> PERIPHID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFEC) PERIPHID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PERIPHID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PERIPHID3  ---------------------------------
// SVD Line: 10962

//  <rtree> SFDITEM_REG__WDG_PERIPHID3
//    <name> PERIPHID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFEC) peripheral id register 3 </i>
//    <loc> ( (unsigned int)((WDG_PERIPHID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PERIPHID3_PERIPHID </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WDG_PCELLID0  ------------------------------
// SVD Line: 10980

unsigned int WDG_PCELLID0 __AT (0x4001EFF0);



// ----------------------------  Field Item: WDG_PCELLID0_PCELLID  --------------------------------
// SVD Line: 10989

//  <item> SFDITEM_FIELD__WDG_PCELLID0_PCELLID
//    <name> PCELLID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFF0) PCELLID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PCELLID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PCELLID0  ----------------------------------
// SVD Line: 10980

//  <rtree> SFDITEM_REG__WDG_PCELLID0
//    <name> PCELLID0 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFF0) component id register 0 </i>
//    <loc> ( (unsigned int)((WDG_PCELLID0 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PCELLID0_PCELLID </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WDG_PCELLID1  ------------------------------
// SVD Line: 10998

unsigned int WDG_PCELLID1 __AT (0x4001EFF4);



// ----------------------------  Field Item: WDG_PCELLID1_PCELLID  --------------------------------
// SVD Line: 11007

//  <item> SFDITEM_FIELD__WDG_PCELLID1_PCELLID
//    <name> PCELLID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFF4) PCELLID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PCELLID1  ----------------------------------
// SVD Line: 10998

//  <rtree> SFDITEM_REG__WDG_PCELLID1
//    <name> PCELLID1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFF4) component id register 1 </i>
//    <loc> ( (unsigned int)((WDG_PCELLID1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PCELLID1_PCELLID </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WDG_PCELLID2  ------------------------------
// SVD Line: 11016

unsigned int WDG_PCELLID2 __AT (0x4001EFF8);



// ----------------------------  Field Item: WDG_PCELLID2_PCELLID  --------------------------------
// SVD Line: 11025

//  <item> SFDITEM_FIELD__WDG_PCELLID2_PCELLID
//    <name> PCELLID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFF8) PCELLID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PCELLID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PCELLID2  ----------------------------------
// SVD Line: 11016

//  <rtree> SFDITEM_REG__WDG_PCELLID2
//    <name> PCELLID2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFF8) component id register 2 </i>
//    <loc> ( (unsigned int)((WDG_PCELLID2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PCELLID2_PCELLID </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: WDG_PCELLID3  ------------------------------
// SVD Line: 11034

unsigned int WDG_PCELLID3 __AT (0x4001EFFC);



// ----------------------------  Field Item: WDG_PCELLID3_PCELLID  --------------------------------
// SVD Line: 11043

//  <item> SFDITEM_FIELD__WDG_PCELLID3_PCELLID
//    <name> PCELLID </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFFC) PCELLID </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDG_PCELLID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: WDG_PCELLID3  ----------------------------------
// SVD Line: 11034

//  <rtree> SFDITEM_REG__WDG_PCELLID3
//    <name> PCELLID3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001EFFC) component id register 3 </i>
//    <loc> ( (unsigned int)((WDG_PCELLID3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__WDG_PCELLID3_PCELLID </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: WDG  --------------------------------------
// SVD Line: 10660

//  <view> WDG
//    <name> WDG </name>
//    <item> SFDITEM_REG__WDG_LOAD </item>
//    <item> SFDITEM_REG__WDG_VALUE </item>
//    <item> SFDITEM_REG__WDG_CONTROL </item>
//    <item> SFDITEM_REG__WDG_INTCLR </item>
//    <item> SFDITEM_REG__WDG_RIS </item>
//    <item> SFDITEM_REG__WDG_MIS </item>
//    <item> SFDITEM_REG__WDG_LOCK </item>
//    <item> SFDITEM_REG__WDG_ITCR </item>
//    <item> SFDITEM_REG__WDG_ITOP </item>
//    <item> SFDITEM_REG__WDG_PERIPHID4 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID5 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID6 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID7 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID0 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID1 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID2 </item>
//    <item> SFDITEM_REG__WDG_PERIPHID3 </item>
//    <item> SFDITEM_REG__WDG_PCELLID0 </item>
//    <item> SFDITEM_REG__WDG_PCELLID1 </item>
//    <item> SFDITEM_REG__WDG_PCELLID2 </item>
//    <item> SFDITEM_REG__WDG_PCELLID3 </item>
//  </view>
//  


// ------------------------------  Register Item Address: CRC_CR  ---------------------------------
// SVD Line: 11064

unsigned int CRC_CR __AT (0x40022000);



// ----------------------------  Field Item: CRC_CR_REVERSE_OUT_EN  -------------------------------
// SVD Line: 11073

//  <item> SFDITEM_FIELD__CRC_CR_REVERSE_OUT_EN
//    <name> REVERSE_OUT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40022000) REVERSE_OUT_EN </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CR ) </loc>
//      <o.0..0> REVERSE_OUT_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CRC_CR_REVERSE_IN  ---------------------------------
// SVD Line: 11080

//  <item> SFDITEM_FIELD__CRC_CR_REVERSE_IN
//    <name> REVERSE_IN </name>
//    <rw> 
//    <i> [Bits 2..1] RW (@ 0x40022000) REVERSE_IN </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CR >> 1) & 0x3), ((CRC_CR = (CRC_CR & ~(0x3UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CRC_CR_POLY_SIZE  ----------------------------------
// SVD Line: 11087

//  <item> SFDITEM_FIELD__CRC_CR_POLY_SIZE
//    <name> POLY_SIZE </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40022000) POLY_SIZE </i>
//    <edit> 
//      <loc> ( (unsigned char)((CRC_CR >> 3) & 0x3), ((CRC_CR = (CRC_CR & ~(0x3UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CRC_CR_CALC_INIT  ----------------------------------
// SVD Line: 11094

//  <item> SFDITEM_FIELD__CRC_CR_CALC_INIT
//    <name> CALC_INIT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40022000) CALC_INIT </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CR ) </loc>
//      <o.5..5> CALC_INIT
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CRC_CR_CALC_FLAG  ----------------------------------
// SVD Line: 11101

//  <item> SFDITEM_FIELD__CRC_CR_CALC_FLAG
//    <name> CALC_FLAG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40022000) CALC_FLAG </i>
//    <check> 
//      <loc> ( (unsigned int) CRC_CR ) </loc>
//      <o.6..6> CALC_FLAG
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_CR  -------------------------------------
// SVD Line: 11064

//  <rtree> SFDITEM_REG__CRC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022000) control register </i>
//    <loc> ( (unsigned int)((CRC_CR >> 0) & 0xFFFFFFFF), ((CRC_CR = (CRC_CR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_CR_REVERSE_OUT_EN </item>
//    <item> SFDITEM_FIELD__CRC_CR_REVERSE_IN </item>
//    <item> SFDITEM_FIELD__CRC_CR_POLY_SIZE </item>
//    <item> SFDITEM_FIELD__CRC_CR_CALC_INIT </item>
//    <item> SFDITEM_FIELD__CRC_CR_CALC_FLAG </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: CRC_DR  ---------------------------------
// SVD Line: 11110

unsigned int CRC_DR __AT (0x40022004);



// ---------------------------------  Field Item: CRC_DR_DATA  ------------------------------------
// SVD Line: 11119

//  <item> SFDITEM_FIELD__CRC_DR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022004) DATA </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_DR >> 0) & 0xFFFFFFFF), ((CRC_DR = (CRC_DR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: CRC_DR  -------------------------------------
// SVD Line: 11110

//  <rtree> SFDITEM_REG__CRC_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022004) data register </i>
//    <loc> ( (unsigned int)((CRC_DR >> 0) & 0xFFFFFFFF), ((CRC_DR = (CRC_DR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_DR_DATA </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_INIT  --------------------------------
// SVD Line: 11128

unsigned int CRC_INIT __AT (0x40022008);



// --------------------------------  Field Item: CRC_INIT_INIT  -----------------------------------
// SVD Line: 11137

//  <item> SFDITEM_FIELD__CRC_INIT_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022008) INIT </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_INIT >> 0) & 0xFFFFFFFF), ((CRC_INIT = (CRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CRC_INIT  ------------------------------------
// SVD Line: 11128

//  <rtree> SFDITEM_REG__CRC_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40022008) init value register </i>
//    <loc> ( (unsigned int)((CRC_INIT >> 0) & 0xFFFFFFFF), ((CRC_INIT = (CRC_INIT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_INIT_INIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CRC_POLY  --------------------------------
// SVD Line: 11146

unsigned int CRC_POLY __AT (0x4002200C);



// --------------------------------  Field Item: CRC_POLY_POLY  -----------------------------------
// SVD Line: 11155

//  <item> SFDITEM_FIELD__CRC_POLY_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002200C) POLY </i>
//    <edit> 
//      <loc> ( (unsigned int)((CRC_POLY >> 0) & 0xFFFFFFFF), ((CRC_POLY = (CRC_POLY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CRC_POLY  ------------------------------------
// SVD Line: 11146

//  <rtree> SFDITEM_REG__CRC_POLY
//    <name> POLY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002200C) polynomial register </i>
//    <loc> ( (unsigned int)((CRC_POLY >> 0) & 0xFFFFFFFF), ((CRC_POLY = (CRC_POLY & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CRC_POLY_POLY </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CRC  --------------------------------------
// SVD Line: 11054

//  <view> CRC
//    <name> CRC </name>
//    <item> SFDITEM_REG__CRC_CR </item>
//    <item> SFDITEM_REG__CRC_DR </item>
//    <item> SFDITEM_REG__CRC_INIT </item>
//    <item> SFDITEM_REG__CRC_POLY </item>
//  </view>
//  


// -----------------------------  Register Item Address: I2C0_CR  ---------------------------------
// SVD Line: 11180

unsigned int I2C0_CR __AT (0x40007000);



// --------------------------------  Field Item: I2C0_CR_START  -----------------------------------
// SVD Line: 11189

//  <item> SFDITEM_FIELD__I2C0_CR_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007000) Generate a Start condition </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_STOP  ------------------------------------
// SVD Line: 11196

//  <item> SFDITEM_FIELD__I2C0_CR_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007000) Generate a Stop condition </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_ACKNAK  -----------------------------------
// SVD Line: 11203

//  <item> SFDITEM_FIELD__I2C0_CR_ACKNAK
//    <name> ACKNAK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007000) positive/negative acknowledge </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.2..2> ACKNAK
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_CR_TB  -------------------------------------
// SVD Line: 11210

//  <item> SFDITEM_FIELD__I2C0_CR_TB
//    <name> TB </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007000) Transfer byte </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.3..3> TB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_TXBEGIN  ----------------------------------
// SVD Line: 11217

//  <item> SFDITEM_FIELD__I2C0_CR_TXBEGIN
//    <name> TXBEGIN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007000) Transaction begin </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.4..4> TXBEGIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_FIFOEN  -----------------------------------
// SVD Line: 11224

//  <item> SFDITEM_FIELD__I2C0_CR_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007000) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.5..5> FIFOEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_DMA_EN  -----------------------------------
// SVD Line: 11231

//  <item> SFDITEM_FIELD__I2C0_CR_DMA_EN
//    <name> DMA_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007000) DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.7..7> DMA_EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_MODE  ------------------------------------
// SVD Line: 11238

//  <item> SFDITEM_FIELD__I2C0_CR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40007000) Bus clock mode for the master </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_CR >> 8) & 0x3), ((I2C0_CR = (I2C0_CR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_CR_UR  -------------------------------------
// SVD Line: 11245

//  <item> SFDITEM_FIELD__I2C0_CR_UR
//    <name> UR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007000) Unit reset </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.10..10> UR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_IBRR  ------------------------------------
// SVD Line: 11252

//  <item> SFDITEM_FIELD__I2C0_CR_IBRR
//    <name> IBRR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007000) I2C bus reset request </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.11..11> IBRR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_CR_MA  -------------------------------------
// SVD Line: 11259

//  <item> SFDITEM_FIELD__I2C0_CR_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007000) Master abort </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.12..12> MA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_SCLE  ------------------------------------
// SVD Line: 11266

//  <item> SFDITEM_FIELD__I2C0_CR_SCLE
//    <name> SCLE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007000) SCL enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.13..13> SCLE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_CR_UE  -------------------------------------
// SVD Line: 11273

//  <item> SFDITEM_FIELD__I2C0_CR_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007000) I2C unit enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.14..14> UE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_ALDIE  -----------------------------------
// SVD Line: 11280

//  <item> SFDITEM_FIELD__I2C0_CR_ALDIE
//    <name> ALDIE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40007000) Arbitration loss detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.18..18> ALDIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_ITEIE  -----------------------------------
// SVD Line: 11287

//  <item> SFDITEM_FIELD__I2C0_CR_ITEIE
//    <name> ITEIE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40007000) I2Cx_DBR transmit-empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.19..19> ITEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_DRFIE  -----------------------------------
// SVD Line: 11294

//  <item> SFDITEM_FIELD__I2C0_CR_DRFIE
//    <name> DRFIE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40007000) I2Cx_DBR receive-full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.20..20> DRFIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C0_CR_GENERAL_CALL_DIS  ------------------------------
// SVD Line: 11301

//  <item> SFDITEM_FIELD__I2C0_CR_GENERAL_CALL_DIS
//    <name> GENERAL_CALL_DIS </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40007000) GENERAL_CALL_DIS </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.21..21> GENERAL_CALL_DIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_BEIE  ------------------------------------
// SVD Line: 11308

//  <item> SFDITEM_FIELD__I2C0_CR_BEIE
//    <name> BEIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007000) Bus error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.22..22> BEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_SADIE  -----------------------------------
// SVD Line: 11315

//  <item> SFDITEM_FIELD__I2C0_CR_SADIE
//    <name> SADIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007000) Slave address detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.23..23> SADIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_SSDIE  -----------------------------------
// SVD Line: 11322

//  <item> SFDITEM_FIELD__I2C0_CR_SSDIE
//    <name> SSDIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40007000) Slave Stop detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.24..24> SSDIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_MSDIE  -----------------------------------
// SVD Line: 11329

//  <item> SFDITEM_FIELD__I2C0_CR_MSDIE
//    <name> MSDIE </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40007000) Master Stop detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.25..25> MSDIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_CR_MSDE  ------------------------------------
// SVD Line: 11336

//  <item> SFDITEM_FIELD__I2C0_CR_MSDE
//    <name> MSDE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40007000) Master Stop detection enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.26..26> MSDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C0_CR_TXDONE_IE  ---------------------------------
// SVD Line: 11343

//  <item> SFDITEM_FIELD__I2C0_CR_TXDONE_IE
//    <name> TXDONE_IE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40007000) Transaction done interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.27..27> TXDONE_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_TXE_IE  -----------------------------------
// SVD Line: 11350

//  <item> SFDITEM_FIELD__I2C0_CR_TXE_IE
//    <name> TXE_IE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40007000) Transmit FIFO empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.28..28> TXE_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_RXHF_IE  ----------------------------------
// SVD Line: 11357

//  <item> SFDITEM_FIELD__I2C0_CR_RXHF_IE
//    <name> RXHF_IE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007000) Receive FIFO half full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.29..29> RXHF_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_RXF_IE  -----------------------------------
// SVD Line: 11364

//  <item> SFDITEM_FIELD__I2C0_CR_RXF_IE
//    <name> RXF_IE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007000) Receive FIFO full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.30..30> RXF_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_CR_RXOV_IE  ----------------------------------
// SVD Line: 11371

//  <item> SFDITEM_FIELD__I2C0_CR_RXOV_IE
//    <name> RXOV_IE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40007000) Receive FIFO overrun interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_CR ) </loc>
//      <o.31..31> RXOV_IE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2C0_CR  ------------------------------------
// SVD Line: 11180

//  <rtree> SFDITEM_REG__I2C0_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007000) control register </i>
//    <loc> ( (unsigned int)((I2C0_CR >> 0) & 0xFFFFFFFF), ((I2C0_CR = (I2C0_CR & ~(0xFFFC7FBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFC7FBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_CR_START </item>
//    <item> SFDITEM_FIELD__I2C0_CR_STOP </item>
//    <item> SFDITEM_FIELD__I2C0_CR_ACKNAK </item>
//    <item> SFDITEM_FIELD__I2C0_CR_TB </item>
//    <item> SFDITEM_FIELD__I2C0_CR_TXBEGIN </item>
//    <item> SFDITEM_FIELD__I2C0_CR_FIFOEN </item>
//    <item> SFDITEM_FIELD__I2C0_CR_DMA_EN </item>
//    <item> SFDITEM_FIELD__I2C0_CR_MODE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_UR </item>
//    <item> SFDITEM_FIELD__I2C0_CR_IBRR </item>
//    <item> SFDITEM_FIELD__I2C0_CR_MA </item>
//    <item> SFDITEM_FIELD__I2C0_CR_SCLE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_UE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_ALDIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_ITEIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_DRFIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_GENERAL_CALL_DIS </item>
//    <item> SFDITEM_FIELD__I2C0_CR_BEIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_SADIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_SSDIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_MSDIE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_MSDE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_TXDONE_IE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_TXE_IE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_RXHF_IE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_RXF_IE </item>
//    <item> SFDITEM_FIELD__I2C0_CR_RXOV_IE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_SR  ---------------------------------
// SVD Line: 11380

unsigned int I2C0_SR __AT (0x40007004);



// -------------------------------  Field Item: I2C0_SR_RW_MODE  ----------------------------------
// SVD Line: 11389

//  <item> SFDITEM_FIELD__I2C0_SR_RW_MODE
//    <name> RW_MODE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007004) RW_MODE </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.13..13> RW_MODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_SR_ACKNAK  -----------------------------------
// SVD Line: 11396

//  <item> SFDITEM_FIELD__I2C0_SR_ACKNAK
//    <name> ACKNAK </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40007004) ACK/NAK status flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.14..14> ACKNAK
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_UB  -------------------------------------
// SVD Line: 11403

//  <item> SFDITEM_FIELD__I2C0_SR_UB
//    <name> UB </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40007004) I2C unit busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.15..15> UB
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_IBB  ------------------------------------
// SVD Line: 11410

//  <item> SFDITEM_FIELD__I2C0_SR_IBB
//    <name> IBB </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40007004) I2C bus busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.16..16> IBB
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_ALD  ------------------------------------
// SVD Line: 11417

//  <item> SFDITEM_FIELD__I2C0_SR_ALD
//    <name> ALD </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40007004) Arbitration loss detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.18..18> ALD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_ITE  ------------------------------------
// SVD Line: 11424

//  <item> SFDITEM_FIELD__I2C0_SR_ITE
//    <name> ITE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40007004) I2Cx_DBR transmit empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.19..19> ITE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_IRF  ------------------------------------
// SVD Line: 11431

//  <item> SFDITEM_FIELD__I2C0_SR_IRF
//    <name> IRF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40007004) I2Cx_DBR receive full flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.20..20> IRF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C0_SR_GENERAL_CALL  --------------------------------
// SVD Line: 11438

//  <item> SFDITEM_FIELD__I2C0_SR_GENERAL_CALL
//    <name> GENERAL_CALL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40007004) GENERAL_CALL </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.21..21> GENERAL_CALL
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_BED  ------------------------------------
// SVD Line: 11445

//  <item> SFDITEM_FIELD__I2C0_SR_BED
//    <name> BED </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007004) Bus error detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.22..22> BED
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_SAD  ------------------------------------
// SVD Line: 11452

//  <item> SFDITEM_FIELD__I2C0_SR_SAD
//    <name> SAD </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007004) Slave address detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.23..23> SAD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_SR_SSDIE  -----------------------------------
// SVD Line: 11459

//  <item> SFDITEM_FIELD__I2C0_SR_SSDIE
//    <name> SSDIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40007004) Slave Stop detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.24..24> SSDIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_MSD  ------------------------------------
// SVD Line: 11466

//  <item> SFDITEM_FIELD__I2C0_SR_MSD
//    <name> MSD </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40007004) Master Stop detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.26..26> MSD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C0_SR_TXDONE  -----------------------------------
// SVD Line: 11473

//  <item> SFDITEM_FIELD__I2C0_SR_TXDONE
//    <name> TXDONE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40007004) Transaction done flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.27..27> TXDONE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_TXE  ------------------------------------
// SVD Line: 11480

//  <item> SFDITEM_FIELD__I2C0_SR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40007004) Transmit FIFO empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.28..28> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_SR_RXHF  ------------------------------------
// SVD Line: 11487

//  <item> SFDITEM_FIELD__I2C0_SR_RXHF
//    <name> RXHF </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007004) Receive FIFO half-full flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.29..29> RXHF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C0_SR_RXF  ------------------------------------
// SVD Line: 11494

//  <item> SFDITEM_FIELD__I2C0_SR_RXF
//    <name> RXF </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007004) Receive FIFO full flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.30..30> RXF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_SR_RXOV  ------------------------------------
// SVD Line: 11501

//  <item> SFDITEM_FIELD__I2C0_SR_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40007004) Receive FIFO overrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_SR ) </loc>
//      <o.31..31> RXOV
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2C0_SR  ------------------------------------
// SVD Line: 11380

//  <rtree> SFDITEM_REG__I2C0_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007004) status register </i>
//    <loc> ( (unsigned int)((I2C0_SR >> 0) & 0xFFFFFFFF), ((I2C0_SR = (I2C0_SR & ~(0xFDFC2000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFDFC2000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_SR_RW_MODE </item>
//    <item> SFDITEM_FIELD__I2C0_SR_ACKNAK </item>
//    <item> SFDITEM_FIELD__I2C0_SR_UB </item>
//    <item> SFDITEM_FIELD__I2C0_SR_IBB </item>
//    <item> SFDITEM_FIELD__I2C0_SR_ALD </item>
//    <item> SFDITEM_FIELD__I2C0_SR_ITE </item>
//    <item> SFDITEM_FIELD__I2C0_SR_IRF </item>
//    <item> SFDITEM_FIELD__I2C0_SR_GENERAL_CALL </item>
//    <item> SFDITEM_FIELD__I2C0_SR_BED </item>
//    <item> SFDITEM_FIELD__I2C0_SR_SAD </item>
//    <item> SFDITEM_FIELD__I2C0_SR_SSDIE </item>
//    <item> SFDITEM_FIELD__I2C0_SR_MSD </item>
//    <item> SFDITEM_FIELD__I2C0_SR_TXDONE </item>
//    <item> SFDITEM_FIELD__I2C0_SR_TXE </item>
//    <item> SFDITEM_FIELD__I2C0_SR_RXHF </item>
//    <item> SFDITEM_FIELD__I2C0_SR_RXF </item>
//    <item> SFDITEM_FIELD__I2C0_SR_RXOV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_SAR  --------------------------------
// SVD Line: 11510

unsigned int I2C0_SAR __AT (0x40007008);



// ---------------------------  Field Item: I2C0_SAR_SLAVE_ADDRESS  -------------------------------
// SVD Line: 11519

//  <item> SFDITEM_FIELD__I2C0_SAR_SLAVE_ADDRESS
//    <name> SLAVE_ADDRESS </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40007008) ASR6601 I2C slave address used in slave mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_SAR >> 0) & 0x7F), ((I2C0_SAR = (I2C0_SAR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_SAR  ------------------------------------
// SVD Line: 11510

//  <rtree> SFDITEM_REG__I2C0_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007008) slave address register </i>
//    <loc> ( (unsigned int)((I2C0_SAR >> 0) & 0xFFFFFFFF), ((I2C0_SAR = (I2C0_SAR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_SAR_SLAVE_ADDRESS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_DBR  --------------------------------
// SVD Line: 11528

unsigned int I2C0_DBR __AT (0x4000700C);



// ----------------------------  Field Item: I2C0_DBR_DATA_BUFFER  --------------------------------
// SVD Line: 11537

//  <item> SFDITEM_FIELD__I2C0_DBR_DATA_BUFFER
//    <name> DATA_BUFFER </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000700C) Buffer for I2C bus transmit/receive data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_DBR >> 0) & 0xFF), ((I2C0_DBR = (I2C0_DBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_DBR  ------------------------------------
// SVD Line: 11528

//  <rtree> SFDITEM_REG__I2C0_DBR
//    <name> DBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000700C) data buffer register </i>
//    <loc> ( (unsigned int)((I2C0_DBR >> 0) & 0xFFFFFFFF), ((I2C0_DBR = (I2C0_DBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_DBR_DATA_BUFFER </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_LCR  --------------------------------
// SVD Line: 11546

unsigned int I2C0_LCR __AT (0x40007010);



// --------------------------------  Field Item: I2C0_LCR_SLV  ------------------------------------
// SVD Line: 11555

//  <item> SFDITEM_FIELD__I2C0_LCR_SLV
//    <name> SLV </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40007010) Phase decrementer load value for standard mode SCL in master mode </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C0_LCR >> 0) & 0x1FF), ((I2C0_LCR = (I2C0_LCR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C0_LCR_FLV  ------------------------------------
// SVD Line: 11562

//  <item> SFDITEM_FIELD__I2C0_LCR_FLV
//    <name> FLV </name>
//    <rw> 
//    <i> [Bits 17..9] RW (@ 0x40007010) Phase decrementer load value for fast mode SCL in master mode </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C0_LCR >> 9) & 0x1FF), ((I2C0_LCR = (I2C0_LCR & ~(0x1FFUL << 9 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_LCR  ------------------------------------
// SVD Line: 11546

//  <rtree> SFDITEM_REG__I2C0_LCR
//    <name> LCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007010) load count register </i>
//    <loc> ( (unsigned int)((I2C0_LCR >> 0) & 0xFFFFFFFF), ((I2C0_LCR = (I2C0_LCR & ~(0x3FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_LCR_SLV </item>
//    <item> SFDITEM_FIELD__I2C0_LCR_FLV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_WCR  --------------------------------
// SVD Line: 11571

unsigned int I2C0_WCR __AT (0x40007014);



// -------------------------------  Field Item: I2C0_WCR_COUNT  -----------------------------------
// SVD Line: 11580

//  <item> SFDITEM_FIELD__I2C0_WCR_COUNT
//    <name> COUNT </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40007014) Counter values for defining the setup and hold times in standard and fast modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_WCR >> 0) & 0x1F), ((I2C0_WCR = (I2C0_WCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_WCR  ------------------------------------
// SVD Line: 11571

//  <rtree> SFDITEM_REG__I2C0_WCR
//    <name> WCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007014) wait count register </i>
//    <loc> ( (unsigned int)((I2C0_WCR >> 0) & 0xFFFFFFFF), ((I2C0_WCR = (I2C0_WCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_WCR_COUNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C0_RST_CYCL  ------------------------------
// SVD Line: 11589

unsigned int I2C0_RST_CYCL __AT (0x40007018);



// ----------------------------  Field Item: I2C0_RST_CYCL_RST_CYC  -------------------------------
// SVD Line: 11598

//  <item> SFDITEM_FIELD__I2C0_RST_CYCL_RST_CYC
//    <name> RST_CYC </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40007018) Serial bus reset SCL cycle count </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RST_CYCL >> 0) & 0xF), ((I2C0_RST_CYCL = (I2C0_RST_CYCL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C0_RST_CYCL  ---------------------------------
// SVD Line: 11589

//  <rtree> SFDITEM_REG__I2C0_RST_CYCL
//    <name> RST_CYCL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007018) reset cycle register </i>
//    <loc> ( (unsigned int)((I2C0_RST_CYCL >> 0) & 0xFFFFFFFF), ((I2C0_RST_CYCL = (I2C0_RST_CYCL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_RST_CYCL_RST_CYC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C0_BMR  --------------------------------
// SVD Line: 11607

unsigned int I2C0_BMR __AT (0x4000701C);



// --------------------------------  Field Item: I2C0_BMR_SDA  ------------------------------------
// SVD Line: 11616

//  <item> SFDITEM_FIELD__I2C0_BMR_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000701C) SDA pin state </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_BMR ) </loc>
//      <o.0..0> SDA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C0_BMR_SCL  ------------------------------------
// SVD Line: 11623

//  <item> SFDITEM_FIELD__I2C0_BMR_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000701C) SCL pin state </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_BMR ) </loc>
//      <o.1..1> SCL
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C0_BMR  ------------------------------------
// SVD Line: 11607

//  <rtree> SFDITEM_REG__I2C0_BMR
//    <name> BMR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000701C) bus monitor register </i>
//    <loc> ( (unsigned int)((I2C0_BMR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_BMR_SDA </item>
//    <item> SFDITEM_FIELD__I2C0_BMR_SCL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C0_WFIFO  -------------------------------
// SVD Line: 11632

unsigned int I2C0_WFIFO __AT (0x40007020);



// -------------------------------  Field Item: I2C0_WFIFO_DATA  ----------------------------------
// SVD Line: 11641

//  <item> SFDITEM_FIELD__I2C0_WFIFO_DATA
//    <name> DATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40007020) I2C bus send data for write transactions and dummy data for read transactions </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_WFIFO >> 0) & 0x0), ((I2C0_WFIFO = (I2C0_WFIFO & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: I2C0_WFIFO_CONTROL_STOP  ------------------------------
// SVD Line: 11648

//  <item> SFDITEM_FIELD__I2C0_WFIFO_CONTROL_STOP
//    <name> CONTROL_STOP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007020) CONTROL_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_WFIFO ) </loc>
//      <o.9..9> CONTROL_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C0_WFIFO_CONTROL_ACKNAK  -----------------------------
// SVD Line: 11655

//  <item> SFDITEM_FIELD__I2C0_WFIFO_CONTROL_ACKNAK
//    <name> CONTROL_ACKNAK </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007020) CONTROL_ACKNAK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_WFIFO ) </loc>
//      <o.10..10> CONTROL_ACKNAK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C0_WFIFO_CONTROL_TB  -------------------------------
// SVD Line: 11662

//  <item> SFDITEM_FIELD__I2C0_WFIFO_CONTROL_TB
//    <name> CONTROL_TB </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007020) CONTROL_TB </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_WFIFO ) </loc>
//      <o.11..11> CONTROL_TB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_WFIFO  -----------------------------------
// SVD Line: 11632

//  <rtree> SFDITEM_REG__I2C0_WFIFO
//    <name> WFIFO </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40007020) write fifo register </i>
//    <loc> ( (unsigned int)((I2C0_WFIFO >> 0) & 0xFFFFFFFF), ((I2C0_WFIFO = (I2C0_WFIFO & ~(0xEFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_DATA </item>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_CONTROL_STOP </item>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_CONTROL_ACKNAK </item>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_CONTROL_TB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C0_WFIFO_WPTR  -----------------------------
// SVD Line: 11671

unsigned int I2C0_WFIFO_WPTR __AT (0x40007024);



// ----------------------------  Field Item: I2C0_WFIFO_WPTR_DATA  --------------------------------
// SVD Line: 11680

//  <item> SFDITEM_FIELD__I2C0_WFIFO_WPTR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40007024) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_WFIFO_WPTR >> 0) & 0xF), ((I2C0_WFIFO_WPTR = (I2C0_WFIFO_WPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_WFIFO_WPTR  --------------------------------
// SVD Line: 11671

//  <rtree> SFDITEM_REG__I2C0_WFIFO_WPTR
//    <name> WFIFO_WPTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007024) write fifo write pointer register </i>
//    <loc> ( (unsigned int)((I2C0_WFIFO_WPTR >> 0) & 0xFFFFFFFF), ((I2C0_WFIFO_WPTR = (I2C0_WFIFO_WPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_WPTR_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C0_WFIFO_RPTR  -----------------------------
// SVD Line: 11689

unsigned int I2C0_WFIFO_RPTR __AT (0x40007028);



// ----------------------------  Field Item: I2C0_WFIFO_RPTR_DATA  --------------------------------
// SVD Line: 11698

//  <item> SFDITEM_FIELD__I2C0_WFIFO_RPTR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40007028) The position in the Transmit FIFO where the hardware will read the next entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_WFIFO_RPTR >> 0) & 0xF), ((I2C0_WFIFO_RPTR = (I2C0_WFIFO_RPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_WFIFO_RPTR  --------------------------------
// SVD Line: 11689

//  <rtree> SFDITEM_REG__I2C0_WFIFO_RPTR
//    <name> WFIFO_RPTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007028) write fifo read pointer register </i>
//    <loc> ( (unsigned int)((I2C0_WFIFO_RPTR >> 0) & 0xFFFFFFFF), ((I2C0_WFIFO_RPTR = (I2C0_WFIFO_RPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_RPTR_DATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C0_RFIFO  -------------------------------
// SVD Line: 11707

unsigned int I2C0_RFIFO __AT (0x4000702C);



// -------------------------------  Field Item: I2C0_RFIFO_DATA  ----------------------------------
// SVD Line: 11716

//  <item> SFDITEM_FIELD__I2C0_RFIFO_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4000702C) bus receive data for read transactions </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RFIFO >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C0_RFIFO  -----------------------------------
// SVD Line: 11707

//  <rtree> SFDITEM_REG__I2C0_RFIFO
//    <name> RFIFO </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000702C) read fifo register </i>
//    <loc> ( (unsigned int)((I2C0_RFIFO >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C0_RFIFO_WPTR  -----------------------------
// SVD Line: 11725

unsigned int I2C0_RFIFO_WPTR __AT (0x40007030);



// ----------------------------  Field Item: I2C0_RFIFO_WPTR_DATA  --------------------------------
// SVD Line: 11734

//  <item> SFDITEM_FIELD__I2C0_RFIFO_WPTR_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40007030) position in the Receive FIFO where the hardware will write the next entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RFIFO_WPTR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_RFIFO_WPTR  --------------------------------
// SVD Line: 11725

//  <rtree> SFDITEM_REG__I2C0_RFIFO_WPTR
//    <name> RFIFO_WPTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007030) read fifo write pointer register </i>
//    <loc> ( (unsigned int)((I2C0_RFIFO_WPTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_WPTR_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C0_RFIFO_RPTR  -----------------------------
// SVD Line: 11743

unsigned int I2C0_RFIFO_RPTR __AT (0x40007034);



// ----------------------------  Field Item: I2C0_RFIFO_RPTR_DATA  --------------------------------
// SVD Line: 11752

//  <item> SFDITEM_FIELD__I2C0_RFIFO_RPTR_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40007034) position in the Receive FIFO where the software will read the next entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RFIFO_RPTR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C0_RFIFO_RPTR  --------------------------------
// SVD Line: 11743

//  <rtree> SFDITEM_REG__I2C0_RFIFO_RPTR
//    <name> RFIFO_RPTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007034) read fifo read pointer register </i>
//    <loc> ( (unsigned int)((I2C0_RFIFO_RPTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_RPTR_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: I2C0_WFIFO_STATUS  ----------------------------
// SVD Line: 11761

unsigned int I2C0_WFIFO_STATUS __AT (0x40007040);



// ------------------------  Field Item: I2C0_WFIFO_STATUS_WFIFO_FULL  ----------------------------
// SVD Line: 11770

//  <item> SFDITEM_FIELD__I2C0_WFIFO_STATUS_WFIFO_FULL
//    <name> WFIFO_FULL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40007040) Transmit FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_WFIFO_STATUS ) </loc>
//      <o.0..0> WFIFO_FULL
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C0_WFIFO_STATUS_WFIFO_EMPTY  ---------------------------
// SVD Line: 11777

//  <item> SFDITEM_FIELD__I2C0_WFIFO_STATUS_WFIFO_EMPTY
//    <name> WFIFO_EMPTY </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40007040) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_WFIFO_STATUS ) </loc>
//      <o.1..1> WFIFO_EMPTY
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C0_WFIFO_STATUS_WFIFO_SIZE  ----------------------------
// SVD Line: 11784

//  <item> SFDITEM_FIELD__I2C0_WFIFO_STATUS_WFIFO_SIZE
//    <name> WFIFO_SIZE </name>
//    <rw> 
//    <i> [Bits 5..2] RW (@ 0x40007040) The Transmit FIFO size </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_WFIFO_STATUS >> 2) & 0xF), ((I2C0_WFIFO_STATUS = (I2C0_WFIFO_STATUS & ~(0xFUL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: I2C0_WFIFO_STATUS  -------------------------------
// SVD Line: 11761

//  <rtree> SFDITEM_REG__I2C0_WFIFO_STATUS
//    <name> WFIFO_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007040) write fifo status register </i>
//    <loc> ( (unsigned int)((I2C0_WFIFO_STATUS >> 0) & 0xFFFFFFFF), ((I2C0_WFIFO_STATUS = (I2C0_WFIFO_STATUS & ~(0x3CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_STATUS_WFIFO_FULL </item>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_STATUS_WFIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__I2C0_WFIFO_STATUS_WFIFO_SIZE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: I2C0_RFIFO_STATUS  ----------------------------
// SVD Line: 11793

unsigned int I2C0_RFIFO_STATUS __AT (0x40007044);



// -----------------------  Field Item: I2C0_RFIFO_STATUS_RFIFO_OVERRUN  --------------------------
// SVD Line: 11802

//  <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_OVERRUN
//    <name> RFIFO_OVERRUN </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40007044) Receive FIFO overrun </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_RFIFO_STATUS ) </loc>
//      <o.0..0> RFIFO_OVERRUN
//    </check>
//  </item>
//  


// ----------------------  Field Item: I2C0_RFIFO_STATUS_RFIFO_HALFFULL  --------------------------
// SVD Line: 11809

//  <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_HALFFULL
//    <name> RFIFO_HALFFULL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40007044) Receive FIFO half full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_RFIFO_STATUS ) </loc>
//      <o.1..1> RFIFO_HALFFULL
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C0_RFIFO_STATUS_RFIFO_FULL  ----------------------------
// SVD Line: 11816

//  <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_FULL
//    <name> RFIFO_FULL </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40007044) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_RFIFO_STATUS ) </loc>
//      <o.2..2> RFIFO_FULL
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C0_RFIFO_STATUS_RFIFO_EMPTY  ---------------------------
// SVD Line: 11823

//  <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_EMPTY
//    <name> RFIFO_EMPTY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40007044) Receive FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) I2C0_RFIFO_STATUS ) </loc>
//      <o.3..3> RFIFO_EMPTY
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C0_RFIFO_STATUS_RFIFO_SIZE  ----------------------------
// SVD Line: 11830

//  <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_SIZE
//    <name> RFIFO_SIZE </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40007044) Receive FIFO size </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C0_RFIFO_STATUS >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: I2C0_RFIFO_STATUS  -------------------------------
// SVD Line: 11793

//  <rtree> SFDITEM_REG__I2C0_RFIFO_STATUS
//    <name> RFIFO_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40007044) read fifo status register </i>
//    <loc> ( (unsigned int)((I2C0_RFIFO_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_OVERRUN </item>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_HALFFULL </item>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_FULL </item>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__I2C0_RFIFO_STATUS_RFIFO_SIZE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C0  -------------------------------------
// SVD Line: 11166

//  <view> I2C0
//    <name> I2C0 </name>
//    <item> SFDITEM_REG__I2C0_CR </item>
//    <item> SFDITEM_REG__I2C0_SR </item>
//    <item> SFDITEM_REG__I2C0_SAR </item>
//    <item> SFDITEM_REG__I2C0_DBR </item>
//    <item> SFDITEM_REG__I2C0_LCR </item>
//    <item> SFDITEM_REG__I2C0_WCR </item>
//    <item> SFDITEM_REG__I2C0_RST_CYCL </item>
//    <item> SFDITEM_REG__I2C0_BMR </item>
//    <item> SFDITEM_REG__I2C0_WFIFO </item>
//    <item> SFDITEM_REG__I2C0_WFIFO_WPTR </item>
//    <item> SFDITEM_REG__I2C0_WFIFO_RPTR </item>
//    <item> SFDITEM_REG__I2C0_RFIFO </item>
//    <item> SFDITEM_REG__I2C0_RFIFO_WPTR </item>
//    <item> SFDITEM_REG__I2C0_RFIFO_RPTR </item>
//    <item> SFDITEM_REG__I2C0_WFIFO_STATUS </item>
//    <item> SFDITEM_REG__I2C0_RFIFO_STATUS </item>
//  </view>
//  


// -----------------------------  Register Item Address: I2C1_CR  ---------------------------------
// SVD Line: 11855

unsigned int I2C1_CR __AT (0x40014000);



// --------------------------------  Field Item: I2C1_CR_START  -----------------------------------
// SVD Line: 11864

//  <item> SFDITEM_FIELD__I2C1_CR_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014000) Generate a Start condition </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_STOP  ------------------------------------
// SVD Line: 11871

//  <item> SFDITEM_FIELD__I2C1_CR_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014000) Generate a Stop condition </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_ACKNAK  -----------------------------------
// SVD Line: 11878

//  <item> SFDITEM_FIELD__I2C1_CR_ACKNAK
//    <name> ACKNAK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014000) positive/negative acknowledge </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.2..2> ACKNAK
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_CR_TB  -------------------------------------
// SVD Line: 11885

//  <item> SFDITEM_FIELD__I2C1_CR_TB
//    <name> TB </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014000) Transfer byte </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.3..3> TB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_TXBEGIN  ----------------------------------
// SVD Line: 11892

//  <item> SFDITEM_FIELD__I2C1_CR_TXBEGIN
//    <name> TXBEGIN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014000) Transaction begin </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.4..4> TXBEGIN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_FIFOEN  -----------------------------------
// SVD Line: 11899

//  <item> SFDITEM_FIELD__I2C1_CR_FIFOEN
//    <name> FIFOEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014000) FIFO mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.5..5> FIFOEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_DMA_EN  -----------------------------------
// SVD Line: 11906

//  <item> SFDITEM_FIELD__I2C1_CR_DMA_EN
//    <name> DMA_EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014000) DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.7..7> DMA_EN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_MODE  ------------------------------------
// SVD Line: 11913

//  <item> SFDITEM_FIELD__I2C1_CR_MODE
//    <name> MODE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40014000) Bus clock mode for the master </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_CR >> 8) & 0x3), ((I2C1_CR = (I2C1_CR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_CR_UR  -------------------------------------
// SVD Line: 11920

//  <item> SFDITEM_FIELD__I2C1_CR_UR
//    <name> UR </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014000) Unit reset </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.10..10> UR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_IBRR  ------------------------------------
// SVD Line: 11927

//  <item> SFDITEM_FIELD__I2C1_CR_IBRR
//    <name> IBRR </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014000) I2C bus reset request </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.11..11> IBRR
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_CR_MA  -------------------------------------
// SVD Line: 11934

//  <item> SFDITEM_FIELD__I2C1_CR_MA
//    <name> MA </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40014000) Master abort </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.12..12> MA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_SCLE  ------------------------------------
// SVD Line: 11941

//  <item> SFDITEM_FIELD__I2C1_CR_SCLE
//    <name> SCLE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014000) SCL enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.13..13> SCLE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_CR_UE  -------------------------------------
// SVD Line: 11948

//  <item> SFDITEM_FIELD__I2C1_CR_UE
//    <name> UE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40014000) I2C unit enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.14..14> UE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_ALDIE  -----------------------------------
// SVD Line: 11955

//  <item> SFDITEM_FIELD__I2C1_CR_ALDIE
//    <name> ALDIE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40014000) Arbitration loss detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.18..18> ALDIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_ITEIE  -----------------------------------
// SVD Line: 11962

//  <item> SFDITEM_FIELD__I2C1_CR_ITEIE
//    <name> ITEIE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40014000) I2Cx_DBR transmit-empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.19..19> ITEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_DRFIE  -----------------------------------
// SVD Line: 11969

//  <item> SFDITEM_FIELD__I2C1_CR_DRFIE
//    <name> DRFIE </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40014000) I2Cx_DBR receive-full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.20..20> DRFIE
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C1_CR_GENERAL_CALL_DIS  ------------------------------
// SVD Line: 11976

//  <item> SFDITEM_FIELD__I2C1_CR_GENERAL_CALL_DIS
//    <name> GENERAL_CALL_DIS </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40014000) GENERAL_CALL_DIS </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.21..21> GENERAL_CALL_DIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_BEIE  ------------------------------------
// SVD Line: 11983

//  <item> SFDITEM_FIELD__I2C1_CR_BEIE
//    <name> BEIE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40014000) Bus error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.22..22> BEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_SADIE  -----------------------------------
// SVD Line: 11990

//  <item> SFDITEM_FIELD__I2C1_CR_SADIE
//    <name> SADIE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40014000) Slave address detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.23..23> SADIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_SSDIE  -----------------------------------
// SVD Line: 11997

//  <item> SFDITEM_FIELD__I2C1_CR_SSDIE
//    <name> SSDIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40014000) Slave Stop detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.24..24> SSDIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_MSDIE  -----------------------------------
// SVD Line: 12004

//  <item> SFDITEM_FIELD__I2C1_CR_MSDIE
//    <name> MSDIE </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40014000) Master Stop detection interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.25..25> MSDIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_CR_MSDE  ------------------------------------
// SVD Line: 12011

//  <item> SFDITEM_FIELD__I2C1_CR_MSDE
//    <name> MSDE </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40014000) Master Stop detection enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.26..26> MSDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CR_TXDONE_IE  ---------------------------------
// SVD Line: 12018

//  <item> SFDITEM_FIELD__I2C1_CR_TXDONE_IE
//    <name> TXDONE_IE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40014000) Transaction done interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.27..27> TXDONE_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_TXE_IE  -----------------------------------
// SVD Line: 12025

//  <item> SFDITEM_FIELD__I2C1_CR_TXE_IE
//    <name> TXE_IE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40014000) Transmit FIFO empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.28..28> TXE_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_RXHF_IE  ----------------------------------
// SVD Line: 12032

//  <item> SFDITEM_FIELD__I2C1_CR_RXHF_IE
//    <name> RXHF_IE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40014000) Receive FIFO half full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.29..29> RXHF_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_RXF_IE  -----------------------------------
// SVD Line: 12039

//  <item> SFDITEM_FIELD__I2C1_CR_RXF_IE
//    <name> RXF_IE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40014000) Receive FIFO full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.30..30> RXF_IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_CR_RXOV_IE  ----------------------------------
// SVD Line: 12046

//  <item> SFDITEM_FIELD__I2C1_CR_RXOV_IE
//    <name> RXOV_IE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40014000) Receive FIFO overrun interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CR ) </loc>
//      <o.31..31> RXOV_IE
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2C1_CR  ------------------------------------
// SVD Line: 11855

//  <rtree> SFDITEM_REG__I2C1_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014000) control register </i>
//    <loc> ( (unsigned int)((I2C1_CR >> 0) & 0xFFFFFFFF), ((I2C1_CR = (I2C1_CR & ~(0xFFFC7FBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFC7FBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CR_START </item>
//    <item> SFDITEM_FIELD__I2C1_CR_STOP </item>
//    <item> SFDITEM_FIELD__I2C1_CR_ACKNAK </item>
//    <item> SFDITEM_FIELD__I2C1_CR_TB </item>
//    <item> SFDITEM_FIELD__I2C1_CR_TXBEGIN </item>
//    <item> SFDITEM_FIELD__I2C1_CR_FIFOEN </item>
//    <item> SFDITEM_FIELD__I2C1_CR_DMA_EN </item>
//    <item> SFDITEM_FIELD__I2C1_CR_MODE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_UR </item>
//    <item> SFDITEM_FIELD__I2C1_CR_IBRR </item>
//    <item> SFDITEM_FIELD__I2C1_CR_MA </item>
//    <item> SFDITEM_FIELD__I2C1_CR_SCLE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_UE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_ALDIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_ITEIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_DRFIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_GENERAL_CALL_DIS </item>
//    <item> SFDITEM_FIELD__I2C1_CR_BEIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_SADIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_SSDIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_MSDIE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_MSDE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_TXDONE_IE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_TXE_IE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_RXHF_IE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_RXF_IE </item>
//    <item> SFDITEM_FIELD__I2C1_CR_RXOV_IE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_SR  ---------------------------------
// SVD Line: 12055

unsigned int I2C1_SR __AT (0x40014004);



// -------------------------------  Field Item: I2C1_SR_RW_MODE  ----------------------------------
// SVD Line: 12064

//  <item> SFDITEM_FIELD__I2C1_SR_RW_MODE
//    <name> RW_MODE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014004) RW_MODE </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.13..13> RW_MODE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_SR_ACKNAK  -----------------------------------
// SVD Line: 12071

//  <item> SFDITEM_FIELD__I2C1_SR_ACKNAK
//    <name> ACKNAK </name>
//    <r> 
//    <i> [Bit 14] RO (@ 0x40014004) ACK/NAK status flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.14..14> ACKNAK
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_UB  -------------------------------------
// SVD Line: 12078

//  <item> SFDITEM_FIELD__I2C1_SR_UB
//    <name> UB </name>
//    <r> 
//    <i> [Bit 15] RO (@ 0x40014004) I2C unit busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.15..15> UB
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_IBB  ------------------------------------
// SVD Line: 12085

//  <item> SFDITEM_FIELD__I2C1_SR_IBB
//    <name> IBB </name>
//    <r> 
//    <i> [Bit 16] RO (@ 0x40014004) I2C bus busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.16..16> IBB
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_ALD  ------------------------------------
// SVD Line: 12092

//  <item> SFDITEM_FIELD__I2C1_SR_ALD
//    <name> ALD </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40014004) Arbitration loss detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.18..18> ALD
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_ITE  ------------------------------------
// SVD Line: 12099

//  <item> SFDITEM_FIELD__I2C1_SR_ITE
//    <name> ITE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40014004) I2Cx_DBR transmit empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.19..19> ITE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_IRF  ------------------------------------
// SVD Line: 12106

//  <item> SFDITEM_FIELD__I2C1_SR_IRF
//    <name> IRF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40014004) I2Cx_DBR receive full flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.20..20> IRF
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_SR_GENERAL_CALL  --------------------------------
// SVD Line: 12113

//  <item> SFDITEM_FIELD__I2C1_SR_GENERAL_CALL
//    <name> GENERAL_CALL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40014004) GENERAL_CALL </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.21..21> GENERAL_CALL
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_BED  ------------------------------------
// SVD Line: 12120

//  <item> SFDITEM_FIELD__I2C1_SR_BED
//    <name> BED </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40014004) Bus error detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.22..22> BED
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_SAD  ------------------------------------
// SVD Line: 12127

//  <item> SFDITEM_FIELD__I2C1_SR_SAD
//    <name> SAD </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40014004) Slave address detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.23..23> SAD
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_SR_SSDIE  -----------------------------------
// SVD Line: 12134

//  <item> SFDITEM_FIELD__I2C1_SR_SSDIE
//    <name> SSDIE </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40014004) Slave Stop detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.24..24> SSDIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_MSD  ------------------------------------
// SVD Line: 12141

//  <item> SFDITEM_FIELD__I2C1_SR_MSD
//    <name> MSD </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40014004) Master Stop detection flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.26..26> MSD
//    </check>
//  </item>
//  


// -------------------------------  Field Item: I2C1_SR_TXDONE  -----------------------------------
// SVD Line: 12148

//  <item> SFDITEM_FIELD__I2C1_SR_TXDONE
//    <name> TXDONE </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40014004) Transaction done flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.27..27> TXDONE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_TXE  ------------------------------------
// SVD Line: 12155

//  <item> SFDITEM_FIELD__I2C1_SR_TXE
//    <name> TXE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40014004) Transmit FIFO empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.28..28> TXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_SR_RXHF  ------------------------------------
// SVD Line: 12162

//  <item> SFDITEM_FIELD__I2C1_SR_RXHF
//    <name> RXHF </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40014004) Receive FIFO half-full flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.29..29> RXHF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: I2C1_SR_RXF  ------------------------------------
// SVD Line: 12169

//  <item> SFDITEM_FIELD__I2C1_SR_RXF
//    <name> RXF </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40014004) Receive FIFO full flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.30..30> RXF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_SR_RXOV  ------------------------------------
// SVD Line: 12176

//  <item> SFDITEM_FIELD__I2C1_SR_RXOV
//    <name> RXOV </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40014004) Receive FIFO overrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_SR ) </loc>
//      <o.31..31> RXOV
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2C1_SR  ------------------------------------
// SVD Line: 12055

//  <rtree> SFDITEM_REG__I2C1_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014004) status register </i>
//    <loc> ( (unsigned int)((I2C1_SR >> 0) & 0xFFFFFFFF), ((I2C1_SR = (I2C1_SR & ~(0xFDFC2000UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFDFC2000) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_SR_RW_MODE </item>
//    <item> SFDITEM_FIELD__I2C1_SR_ACKNAK </item>
//    <item> SFDITEM_FIELD__I2C1_SR_UB </item>
//    <item> SFDITEM_FIELD__I2C1_SR_IBB </item>
//    <item> SFDITEM_FIELD__I2C1_SR_ALD </item>
//    <item> SFDITEM_FIELD__I2C1_SR_ITE </item>
//    <item> SFDITEM_FIELD__I2C1_SR_IRF </item>
//    <item> SFDITEM_FIELD__I2C1_SR_GENERAL_CALL </item>
//    <item> SFDITEM_FIELD__I2C1_SR_BED </item>
//    <item> SFDITEM_FIELD__I2C1_SR_SAD </item>
//    <item> SFDITEM_FIELD__I2C1_SR_SSDIE </item>
//    <item> SFDITEM_FIELD__I2C1_SR_MSD </item>
//    <item> SFDITEM_FIELD__I2C1_SR_TXDONE </item>
//    <item> SFDITEM_FIELD__I2C1_SR_TXE </item>
//    <item> SFDITEM_FIELD__I2C1_SR_RXHF </item>
//    <item> SFDITEM_FIELD__I2C1_SR_RXF </item>
//    <item> SFDITEM_FIELD__I2C1_SR_RXOV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_SAR  --------------------------------
// SVD Line: 12185

unsigned int I2C1_SAR __AT (0x40014008);



// ---------------------------  Field Item: I2C1_SAR_SLAVE_ADDRESS  -------------------------------
// SVD Line: 12194

//  <item> SFDITEM_FIELD__I2C1_SAR_SLAVE_ADDRESS
//    <name> SLAVE_ADDRESS </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40014008) ASR6601 I2C slave address used in slave mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_SAR >> 0) & 0x7F), ((I2C1_SAR = (I2C1_SAR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_SAR  ------------------------------------
// SVD Line: 12185

//  <rtree> SFDITEM_REG__I2C1_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014008) slave address register </i>
//    <loc> ( (unsigned int)((I2C1_SAR >> 0) & 0xFFFFFFFF), ((I2C1_SAR = (I2C1_SAR & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_SAR_SLAVE_ADDRESS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_DBR  --------------------------------
// SVD Line: 12203

unsigned int I2C1_DBR __AT (0x4001400C);



// ----------------------------  Field Item: I2C1_DBR_DATA_BUFFER  --------------------------------
// SVD Line: 12212

//  <item> SFDITEM_FIELD__I2C1_DBR_DATA_BUFFER
//    <name> DATA_BUFFER </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001400C) Buffer for I2C bus transmit/receive data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_DBR >> 0) & 0xFF), ((I2C1_DBR = (I2C1_DBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_DBR  ------------------------------------
// SVD Line: 12203

//  <rtree> SFDITEM_REG__I2C1_DBR
//    <name> DBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001400C) data buffer register </i>
//    <loc> ( (unsigned int)((I2C1_DBR >> 0) & 0xFFFFFFFF), ((I2C1_DBR = (I2C1_DBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_DBR_DATA_BUFFER </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_LCR  --------------------------------
// SVD Line: 12221

unsigned int I2C1_LCR __AT (0x40014010);



// --------------------------------  Field Item: I2C1_LCR_SLV  ------------------------------------
// SVD Line: 12230

//  <item> SFDITEM_FIELD__I2C1_LCR_SLV
//    <name> SLV </name>
//    <rw> 
//    <i> [Bits 8..0] RW (@ 0x40014010) Phase decrementer load value for standard mode SCL in master mode </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C1_LCR >> 0) & 0x1FF), ((I2C1_LCR = (I2C1_LCR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C1_LCR_FLV  ------------------------------------
// SVD Line: 12237

//  <item> SFDITEM_FIELD__I2C1_LCR_FLV
//    <name> FLV </name>
//    <rw> 
//    <i> [Bits 17..9] RW (@ 0x40014010) Phase decrementer load value for fast mode SCL in master mode </i>
//    <edit> 
//      <loc> ( (unsigned short)((I2C1_LCR >> 9) & 0x1FF), ((I2C1_LCR = (I2C1_LCR & ~(0x1FFUL << 9 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1FF) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_LCR  ------------------------------------
// SVD Line: 12221

//  <rtree> SFDITEM_REG__I2C1_LCR
//    <name> LCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014010) load count register </i>
//    <loc> ( (unsigned int)((I2C1_LCR >> 0) & 0xFFFFFFFF), ((I2C1_LCR = (I2C1_LCR & ~(0x3FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_LCR_SLV </item>
//    <item> SFDITEM_FIELD__I2C1_LCR_FLV </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_WCR  --------------------------------
// SVD Line: 12246

unsigned int I2C1_WCR __AT (0x40014014);



// -------------------------------  Field Item: I2C1_WCR_COUNT  -----------------------------------
// SVD Line: 12255

//  <item> SFDITEM_FIELD__I2C1_WCR_COUNT
//    <name> COUNT </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40014014) Counter values for defining the setup and hold times in standard and fast modes </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_WCR >> 0) & 0x1F), ((I2C1_WCR = (I2C1_WCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_WCR  ------------------------------------
// SVD Line: 12246

//  <rtree> SFDITEM_REG__I2C1_WCR
//    <name> WCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014014) wait count register </i>
//    <loc> ( (unsigned int)((I2C1_WCR >> 0) & 0xFFFFFFFF), ((I2C1_WCR = (I2C1_WCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_WCR_COUNT </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_RST_CYCL  ------------------------------
// SVD Line: 12264

unsigned int I2C1_RST_CYCL __AT (0x40014018);



// ----------------------------  Field Item: I2C1_RST_CYCL_RST_CYC  -------------------------------
// SVD Line: 12273

//  <item> SFDITEM_FIELD__I2C1_RST_CYCL_RST_CYC
//    <name> RST_CYC </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40014018) Serial bus reset SCL cycle count </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_RST_CYCL >> 0) & 0xF), ((I2C1_RST_CYCL = (I2C1_RST_CYCL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_RST_CYCL  ---------------------------------
// SVD Line: 12264

//  <rtree> SFDITEM_REG__I2C1_RST_CYCL
//    <name> RST_CYCL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014018) reset cycle register </i>
//    <loc> ( (unsigned int)((I2C1_RST_CYCL >> 0) & 0xFFFFFFFF), ((I2C1_RST_CYCL = (I2C1_RST_CYCL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_RST_CYCL_RST_CYC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2C1_BMR  --------------------------------
// SVD Line: 12282

unsigned int I2C1_BMR __AT (0x4001401C);



// --------------------------------  Field Item: I2C1_BMR_SDA  ------------------------------------
// SVD Line: 12291

//  <item> SFDITEM_FIELD__I2C1_BMR_SDA
//    <name> SDA </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001401C) SDA pin state </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_BMR ) </loc>
//      <o.0..0> SDA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: I2C1_BMR_SCL  ------------------------------------
// SVD Line: 12298

//  <item> SFDITEM_FIELD__I2C1_BMR_SCL
//    <name> SCL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001401C) SCL pin state </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_BMR ) </loc>
//      <o.1..1> SCL
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_BMR  ------------------------------------
// SVD Line: 12282

//  <rtree> SFDITEM_REG__I2C1_BMR
//    <name> BMR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001401C) bus monitor register </i>
//    <loc> ( (unsigned int)((I2C1_BMR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_BMR_SDA </item>
//    <item> SFDITEM_FIELD__I2C1_BMR_SCL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_WFIFO  -------------------------------
// SVD Line: 12307

unsigned int I2C1_WFIFO __AT (0x40014020);



// -------------------------------  Field Item: I2C1_WFIFO_DATA  ----------------------------------
// SVD Line: 12316

//  <item> SFDITEM_FIELD__I2C1_WFIFO_DATA
//    <name> DATA </name>
//    <w> 
//    <i> [Bits 7..0] WO (@ 0x40014020) I2C bus send data for write transactions and dummy data for read transactions </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_WFIFO >> 0) & 0x0), ((I2C1_WFIFO = (I2C1_WFIFO & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: I2C1_WFIFO_CONTROL_STOP  ------------------------------
// SVD Line: 12323

//  <item> SFDITEM_FIELD__I2C1_WFIFO_CONTROL_STOP
//    <name> CONTROL_STOP </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014020) CONTROL_STOP </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_WFIFO ) </loc>
//      <o.9..9> CONTROL_STOP
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2C1_WFIFO_CONTROL_ACKNAK  -----------------------------
// SVD Line: 12330

//  <item> SFDITEM_FIELD__I2C1_WFIFO_CONTROL_ACKNAK
//    <name> CONTROL_ACKNAK </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014020) CONTROL_ACKNAK </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_WFIFO ) </loc>
//      <o.10..10> CONTROL_ACKNAK
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_WFIFO_CONTROL_TB  -------------------------------
// SVD Line: 12337

//  <item> SFDITEM_FIELD__I2C1_WFIFO_CONTROL_TB
//    <name> CONTROL_TB </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014020) CONTROL_TB </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_WFIFO ) </loc>
//      <o.11..11> CONTROL_TB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: I2C1_WFIFO  -----------------------------------
// SVD Line: 12307

//  <rtree> SFDITEM_REG__I2C1_WFIFO
//    <name> WFIFO </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40014020) write fifo register </i>
//    <loc> ( (unsigned int)((I2C1_WFIFO >> 0) & 0xFFFFFFFF), ((I2C1_WFIFO = (I2C1_WFIFO & ~(0xEFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xEFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_DATA </item>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_CONTROL_STOP </item>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_CONTROL_ACKNAK </item>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_CONTROL_TB </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C1_WFIFO_WPTR  -----------------------------
// SVD Line: 12346

unsigned int I2C1_WFIFO_WPTR __AT (0x40014024);



// ----------------------------  Field Item: I2C1_WFIFO_WPTR_DATA  --------------------------------
// SVD Line: 12355

//  <item> SFDITEM_FIELD__I2C1_WFIFO_WPTR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40014024) DATA </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_WFIFO_WPTR >> 0) & 0xF), ((I2C1_WFIFO_WPTR = (I2C1_WFIFO_WPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C1_WFIFO_WPTR  --------------------------------
// SVD Line: 12346

//  <rtree> SFDITEM_REG__I2C1_WFIFO_WPTR
//    <name> WFIFO_WPTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014024) write fifo write pointer register </i>
//    <loc> ( (unsigned int)((I2C1_WFIFO_WPTR >> 0) & 0xFFFFFFFF), ((I2C1_WFIFO_WPTR = (I2C1_WFIFO_WPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_WPTR_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C1_WFIFO_RPTR  -----------------------------
// SVD Line: 12364

unsigned int I2C1_WFIFO_RPTR __AT (0x40014028);



// ----------------------------  Field Item: I2C1_WFIFO_RPTR_DATA  --------------------------------
// SVD Line: 12373

//  <item> SFDITEM_FIELD__I2C1_WFIFO_RPTR_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40014028) The position in the Transmit FIFO where the hardware will read the next entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_WFIFO_RPTR >> 0) & 0xF), ((I2C1_WFIFO_RPTR = (I2C1_WFIFO_RPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C1_WFIFO_RPTR  --------------------------------
// SVD Line: 12364

//  <rtree> SFDITEM_REG__I2C1_WFIFO_RPTR
//    <name> WFIFO_RPTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014028) write fifo read pointer register </i>
//    <loc> ( (unsigned int)((I2C1_WFIFO_RPTR >> 0) & 0xFFFFFFFF), ((I2C1_WFIFO_RPTR = (I2C1_WFIFO_RPTR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_RPTR_DATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_RFIFO  -------------------------------
// SVD Line: 12382

unsigned int I2C1_RFIFO __AT (0x4001402C);



// -------------------------------  Field Item: I2C1_RFIFO_DATA  ----------------------------------
// SVD Line: 12391

//  <item> SFDITEM_FIELD__I2C1_RFIFO_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 7..0] RO (@ 0x4001402C) bus receive data for read transactions </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_RFIFO >> 0) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C1_RFIFO  -----------------------------------
// SVD Line: 12382

//  <rtree> SFDITEM_REG__I2C1_RFIFO
//    <name> RFIFO </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001402C) read fifo register </i>
//    <loc> ( (unsigned int)((I2C1_RFIFO >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C1_RFIFO_WPTR  -----------------------------
// SVD Line: 12400

unsigned int I2C1_RFIFO_WPTR __AT (0x40014030);



// ----------------------------  Field Item: I2C1_RFIFO_WPTR_DATA  --------------------------------
// SVD Line: 12409

//  <item> SFDITEM_FIELD__I2C1_RFIFO_WPTR_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40014030) position in the Receive FIFO where the hardware will write the next entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_RFIFO_WPTR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C1_RFIFO_WPTR  --------------------------------
// SVD Line: 12400

//  <rtree> SFDITEM_REG__I2C1_RFIFO_WPTR
//    <name> RFIFO_WPTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40014030) read fifo write pointer register </i>
//    <loc> ( (unsigned int)((I2C1_RFIFO_WPTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_WPTR_DATA </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C1_RFIFO_RPTR  -----------------------------
// SVD Line: 12418

unsigned int I2C1_RFIFO_RPTR __AT (0x40014034);



// ----------------------------  Field Item: I2C1_RFIFO_RPTR_DATA  --------------------------------
// SVD Line: 12427

//  <item> SFDITEM_FIELD__I2C1_RFIFO_RPTR_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 3..0] RO (@ 0x40014034) position in the Receive FIFO where the software will read the next entry </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_RFIFO_RPTR >> 0) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C1_RFIFO_RPTR  --------------------------------
// SVD Line: 12418

//  <rtree> SFDITEM_REG__I2C1_RFIFO_RPTR
//    <name> RFIFO_RPTR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40014034) read fifo read pointer register </i>
//    <loc> ( (unsigned int)((I2C1_RFIFO_RPTR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_RPTR_DATA </item>
//  </rtree>
//  


// ------------------------  Register Item Address: I2C1_WFIFO_STATUS  ----------------------------
// SVD Line: 12436

unsigned int I2C1_WFIFO_STATUS __AT (0x40014040);



// ------------------------  Field Item: I2C1_WFIFO_STATUS_WFIFO_FULL  ----------------------------
// SVD Line: 12445

//  <item> SFDITEM_FIELD__I2C1_WFIFO_STATUS_WFIFO_FULL
//    <name> WFIFO_FULL </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40014040) Transmit FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_WFIFO_STATUS ) </loc>
//      <o.0..0> WFIFO_FULL
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C1_WFIFO_STATUS_WFIFO_EMPTY  ---------------------------
// SVD Line: 12452

//  <item> SFDITEM_FIELD__I2C1_WFIFO_STATUS_WFIFO_EMPTY
//    <name> WFIFO_EMPTY </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40014040) Transmit FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_WFIFO_STATUS ) </loc>
//      <o.1..1> WFIFO_EMPTY
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C1_WFIFO_STATUS_WFIFO_SIZE  ----------------------------
// SVD Line: 12459

//  <item> SFDITEM_FIELD__I2C1_WFIFO_STATUS_WFIFO_SIZE
//    <name> WFIFO_SIZE </name>
//    <rw> 
//    <i> [Bits 5..2] RW (@ 0x40014040) The Transmit FIFO size </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_WFIFO_STATUS >> 2) & 0xF), ((I2C1_WFIFO_STATUS = (I2C1_WFIFO_STATUS & ~(0xFUL << 2 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 2 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: I2C1_WFIFO_STATUS  -------------------------------
// SVD Line: 12436

//  <rtree> SFDITEM_REG__I2C1_WFIFO_STATUS
//    <name> WFIFO_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40014040) write fifo status register </i>
//    <loc> ( (unsigned int)((I2C1_WFIFO_STATUS >> 0) & 0xFFFFFFFF), ((I2C1_WFIFO_STATUS = (I2C1_WFIFO_STATUS & ~(0x3CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_STATUS_WFIFO_FULL </item>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_STATUS_WFIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__I2C1_WFIFO_STATUS_WFIFO_SIZE </item>
//  </rtree>
//  


// ------------------------  Register Item Address: I2C1_RFIFO_STATUS  ----------------------------
// SVD Line: 12468

unsigned int I2C1_RFIFO_STATUS __AT (0x40014044);



// -----------------------  Field Item: I2C1_RFIFO_STATUS_RFIFO_OVERRUN  --------------------------
// SVD Line: 12477

//  <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_OVERRUN
//    <name> RFIFO_OVERRUN </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40014044) Receive FIFO overrun </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_RFIFO_STATUS ) </loc>
//      <o.0..0> RFIFO_OVERRUN
//    </check>
//  </item>
//  


// ----------------------  Field Item: I2C1_RFIFO_STATUS_RFIFO_HALFFULL  --------------------------
// SVD Line: 12484

//  <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_HALFFULL
//    <name> RFIFO_HALFFULL </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40014044) Receive FIFO half full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_RFIFO_STATUS ) </loc>
//      <o.1..1> RFIFO_HALFFULL
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C1_RFIFO_STATUS_RFIFO_FULL  ----------------------------
// SVD Line: 12491

//  <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_FULL
//    <name> RFIFO_FULL </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40014044) Receive FIFO full </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_RFIFO_STATUS ) </loc>
//      <o.2..2> RFIFO_FULL
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C1_RFIFO_STATUS_RFIFO_EMPTY  ---------------------------
// SVD Line: 12498

//  <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_EMPTY
//    <name> RFIFO_EMPTY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40014044) Receive FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_RFIFO_STATUS ) </loc>
//      <o.3..3> RFIFO_EMPTY
//    </check>
//  </item>
//  


// ------------------------  Field Item: I2C1_RFIFO_STATUS_RFIFO_SIZE  ----------------------------
// SVD Line: 12505

//  <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_SIZE
//    <name> RFIFO_SIZE </name>
//    <r> 
//    <i> [Bits 7..4] RO (@ 0x40014044) Receive FIFO size </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_RFIFO_STATUS >> 4) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: I2C1_RFIFO_STATUS  -------------------------------
// SVD Line: 12468

//  <rtree> SFDITEM_REG__I2C1_RFIFO_STATUS
//    <name> RFIFO_STATUS </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40014044) read fifo status register </i>
//    <loc> ( (unsigned int)((I2C1_RFIFO_STATUS >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_OVERRUN </item>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_HALFFULL </item>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_FULL </item>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__I2C1_RFIFO_STATUS_RFIFO_SIZE </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C1  -------------------------------------
// SVD Line: 11841

//  <view> I2C1
//    <name> I2C1 </name>
//    <item> SFDITEM_REG__I2C1_CR </item>
//    <item> SFDITEM_REG__I2C1_SR </item>
//    <item> SFDITEM_REG__I2C1_SAR </item>
//    <item> SFDITEM_REG__I2C1_DBR </item>
//    <item> SFDITEM_REG__I2C1_LCR </item>
//    <item> SFDITEM_REG__I2C1_WCR </item>
//    <item> SFDITEM_REG__I2C1_RST_CYCL </item>
//    <item> SFDITEM_REG__I2C1_BMR </item>
//    <item> SFDITEM_REG__I2C1_WFIFO </item>
//    <item> SFDITEM_REG__I2C1_WFIFO_WPTR </item>
//    <item> SFDITEM_REG__I2C1_WFIFO_RPTR </item>
//    <item> SFDITEM_REG__I2C1_RFIFO </item>
//    <item> SFDITEM_REG__I2C1_RFIFO_WPTR </item>
//    <item> SFDITEM_REG__I2C1_RFIFO_RPTR </item>
//    <item> SFDITEM_REG__I2C1_WFIFO_STATUS </item>
//    <item> SFDITEM_REG__I2C1_RFIFO_STATUS </item>
//  </view>
//  


// ----------------------------  Register Item Address: SYSCFG_CR0  -------------------------------
// SVD Line: 12526

unsigned int SYSCFG_CR0 __AT (0x40001000);



// -----------------------  Field Item: SYSCFG_CR0_DMAC0_HANDSHAKE3_SEL  --------------------------
// SVD Line: 12535

//  <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE3_SEL
//    <name> DMAC0_HANDSHAKE3_SEL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40001000) DMAC0 HANDSHAKE3 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR0 >> 0) & 0x3F), ((SYSCFG_CR0 = (SYSCFG_CR0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR0_DMAC0_HANDSHAKE2_SEL  --------------------------
// SVD Line: 12542

//  <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE2_SEL
//    <name> DMAC0_HANDSHAKE2_SEL </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40001000) DMAC0 HANDSHAKE2 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR0 >> 8) & 0x3F), ((SYSCFG_CR0 = (SYSCFG_CR0 & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR0_DMAC0_HANDSHAKE1_SEL  --------------------------
// SVD Line: 12549

//  <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE1_SEL
//    <name> DMAC0_HANDSHAKE1_SEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40001000) DMAC0 HANDSHAKE1 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR0 >> 16) & 0x3F), ((SYSCFG_CR0 = (SYSCFG_CR0 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR0_DMAC0_HANDSHAKE0_SEL  --------------------------
// SVD Line: 12556

//  <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE0_SEL
//    <name> DMAC0_HANDSHAKE0_SEL </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40001000) DMAC0 HANDSHAKE0 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR0 >> 24) & 0x3F), ((SYSCFG_CR0 = (SYSCFG_CR0 & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR0  -----------------------------------
// SVD Line: 12526

//  <rtree> SFDITEM_REG__SYSCFG_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001000) control register 0 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR0 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR0 = (SYSCFG_CR0 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE3_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE2_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE1_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR0_DMAC0_HANDSHAKE0_SEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR1  -------------------------------
// SVD Line: 12565

unsigned int SYSCFG_CR1 __AT (0x40001004);



// -----------------------  Field Item: SYSCFG_CR1_DMAC1_HANDSHAKE3_SEL  --------------------------
// SVD Line: 12574

//  <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE3_SEL
//    <name> DMAC1_HANDSHAKE3_SEL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40001004) DMAC1 HANDSHAKE3 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR1 >> 0) & 0x3F), ((SYSCFG_CR1 = (SYSCFG_CR1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR1_DMAC1_HANDSHAKE2_SEL  --------------------------
// SVD Line: 12581

//  <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE2_SEL
//    <name> DMAC1_HANDSHAKE2_SEL </name>
//    <rw> 
//    <i> [Bits 13..8] RW (@ 0x40001004) DMAC1 HANDSHAKE2 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR1 >> 8) & 0x3F), ((SYSCFG_CR1 = (SYSCFG_CR1 & ~(0x3FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR1_DMAC1_HANDSHAKE1_SEL  --------------------------
// SVD Line: 12588

//  <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE1_SEL
//    <name> DMAC1_HANDSHAKE1_SEL </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40001004) DMAC1 HANDSHAKE1 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR1 >> 16) & 0x3F), ((SYSCFG_CR1 = (SYSCFG_CR1 & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR1_DMAC1_HANDSHAKE0_SEL  --------------------------
// SVD Line: 12595

//  <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE0_SEL
//    <name> DMAC1_HANDSHAKE0_SEL </name>
//    <rw> 
//    <i> [Bits 29..24] RW (@ 0x40001004) DMAC1 HANDSHAKE0 selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR1 >> 24) & 0x3F), ((SYSCFG_CR1 = (SYSCFG_CR1 & ~(0x3FUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR1  -----------------------------------
// SVD Line: 12565

//  <rtree> SFDITEM_REG__SYSCFG_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001004) control register 1 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR1 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR1 = (SYSCFG_CR1 & ~(0x3F3F3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE3_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE2_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE1_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR1_DMAC1_HANDSHAKE0_SEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR2  -------------------------------
// SVD Line: 12604

unsigned int SYSCFG_CR2 __AT (0x40001008);



// -----------------------  Field Item: SYSCFG_CR2_SSP_AFEC_DMA_CLR_SEL  --------------------------
// SVD Line: 12613

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SSP_AFEC_DMA_CLR_SEL
//    <name> SSP_AFEC_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001008) SSP (for afec) DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.0..0> SSP_AFEC_DMA_CLR_SEL
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR2_SSP2_DMA_CLR_SEL  ----------------------------
// SVD Line: 12620

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SSP2_DMA_CLR_SEL
//    <name> SSP2_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40001008) SSP2 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.1..1> SSP2_DMA_CLR_SEL
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR2_SSP1_DMA_CLR_SEL  ----------------------------
// SVD Line: 12627

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SSP1_DMA_CLR_SEL
//    <name> SSP1_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40001008) SSP1 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.2..2> SSP1_DMA_CLR_SEL
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR2_SSP0_DMA_CLR_SEL  ----------------------------
// SVD Line: 12634

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SSP0_DMA_CLR_SEL
//    <name> SSP0_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40001008) SSP0 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.3..3> SSP0_DMA_CLR_SEL
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_CR2_UART3_DMA_CLR_SEL  ----------------------------
// SVD Line: 12641

//  <item> SFDITEM_FIELD__SYSCFG_CR2_UART3_DMA_CLR_SEL
//    <name> UART3_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40001008) UART3 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.4..4> UART3_DMA_CLR_SEL
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_CR2_UART2_DMA_CLR_SEL  ----------------------------
// SVD Line: 12648

//  <item> SFDITEM_FIELD__SYSCFG_CR2_UART2_DMA_CLR_SEL
//    <name> UART2_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40001008) UART2 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.5..5> UART2_DMA_CLR_SEL
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_CR2_UART1_DMA_CLR_SEL  ----------------------------
// SVD Line: 12655

//  <item> SFDITEM_FIELD__SYSCFG_CR2_UART1_DMA_CLR_SEL
//    <name> UART1_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40001008) UART1 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.6..6> UART1_DMA_CLR_SEL
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_CR2_UART0_DMA_CLR_SEL  ----------------------------
// SVD Line: 12662

//  <item> SFDITEM_FIELD__SYSCFG_CR2_UART0_DMA_CLR_SEL
//    <name> UART0_DMA_CLR_SEL </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40001008) UART0 DMA_CLR signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.7..7> UART0_DMA_CLR_SEL
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR2_SYSCFG_DBG_SLEEP  ----------------------------
// SVD Line: 12669

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_DBG_SLEEP
//    <name> SYSCFG_DBG_SLEEP </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40001008) to allow a debug connection in Deepsleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.10..10> SYSCFG_DBG_SLEEP
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR2_CPU_STCALIB_SKEW  ----------------------------
// SVD Line: 12676

//  <item> SFDITEM_FIELD__SYSCFG_CR2_CPU_STCALIB_SKEW
//    <name> CPU_STCALIB_SKEW </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40001008) CPU SysTick skew configuration </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.11..11> CPU_STCALIB_SKEW
//    </check>
//  </item>
//  


// ------------------------  Field Item: SYSCFG_CR2_QSPI_REMAP_ENABLE  ----------------------------
// SVD Line: 12683

//  <item> SFDITEM_FIELD__SYSCFG_CR2_QSPI_REMAP_ENABLE
//    <name> QSPI_REMAP_ENABLE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40001008) QSPI remap function enable </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.17..17> QSPI_REMAP_ENABLE
//    </check>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR2_QSPI_MEM_ENCRYPT_EN  ---------------------------
// SVD Line: 12690

//  <item> SFDITEM_FIELD__SYSCFG_CR2_QSPI_MEM_ENCRYPT_EN
//    <name> QSPI_MEM_ENCRYPT_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40001008) QSPI memory encryption enable </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.18..18> QSPI_MEM_ENCRYPT_EN
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_BASICTIM1_EN  -----------------------
// SVD Line: 12697

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_BASICTIM1_EN
//    <name> SYSCFG_HALTED_BASICTIM1_EN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40001008) BASICTIM1 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.19..19> SYSCFG_HALTED_BASICTIM1_EN
//    </check>
//  </item>
//  


// --------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_BASICTIM0_EN  -----------------------
// SVD Line: 12704

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_BASICTIM0_EN
//    <name> SYSCFG_HALTED_BASICTIM0_EN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40001008) BASICTIM0 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.20..20> SYSCFG_HALTED_BASICTIM0_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_GPTIM3_EN  -------------------------
// SVD Line: 12711

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM3_EN
//    <name> SYSCFG_HALTED_GPTIM3_EN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40001008) GPTIM3 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.21..21> SYSCFG_HALTED_GPTIM3_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_GPTIM2_EN  -------------------------
// SVD Line: 12718

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM2_EN
//    <name> SYSCFG_HALTED_GPTIM2_EN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40001008) GPTIM2 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.22..22> SYSCFG_HALTED_GPTIM2_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_GPTIM1_EN  -------------------------
// SVD Line: 12725

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM1_EN
//    <name> SYSCFG_HALTED_GPTIM1_EN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40001008) GPTIM1 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.23..23> SYSCFG_HALTED_GPTIM1_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_GPTIM0_EN  -------------------------
// SVD Line: 12732

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM0_EN
//    <name> SYSCFG_HALTED_GPTIM0_EN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40001008) GPTIM0 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.24..24> SYSCFG_HALTED_GPTIM0_EN
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_WWDG_EN  --------------------------
// SVD Line: 12739

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_WWDG_EN
//    <name> SYSCFG_HALTED_WWDG_EN </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40001008) window watchdog counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.25..25> SYSCFG_HALTED_WWDG_EN
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_IWDG_EN  --------------------------
// SVD Line: 12746

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_IWDG_EN
//    <name> SYSCFG_HALTED_IWDG_EN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40001008) independent watchdog counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.26..26> SYSCFG_HALTED_IWDG_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_LPTIM0_EN  -------------------------
// SVD Line: 12753

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_LPTIM0_EN
//    <name> SYSCFG_HALTED_LPTIM0_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40001008) LPTIM0 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.27..27> SYSCFG_HALTED_LPTIM0_EN
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR2_SYSCFG_HALTED_LPTIM1_EN  -------------------------
// SVD Line: 12760

//  <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_LPTIM1_EN
//    <name> SYSCFG_HALTED_LPTIM1_EN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40001008) LPTIM1 counter is stopped when the core is halted </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR2 ) </loc>
//      <o.30..30> SYSCFG_HALTED_LPTIM1_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR2  -----------------------------------
// SVD Line: 12604

//  <rtree> SFDITEM_REG__SYSCFG_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001008) control register 2 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR2 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR2 = (SYSCFG_CR2 & ~(0x4FFE0CFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x4FFE0CFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SSP_AFEC_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SSP2_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SSP1_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SSP0_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_UART3_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_UART2_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_UART1_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_UART0_DMA_CLR_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_DBG_SLEEP </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_CPU_STCALIB_SKEW </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_QSPI_REMAP_ENABLE </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_QSPI_MEM_ENCRYPT_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_BASICTIM1_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_BASICTIM0_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM3_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM2_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM1_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_GPTIM0_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_WWDG_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_IWDG_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_LPTIM0_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR2_SYSCFG_HALTED_LPTIM1_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR3  -------------------------------
// SVD Line: 12769

unsigned int SYSCFG_CR3 __AT (0x4000100C);



// ------------------------  Field Item: SYSCFG_CR3_SYSCFG_DBG_STANDBY  ---------------------------
// SVD Line: 12778

//  <item> SFDITEM_FIELD__SYSCFG_CR3_SYSCFG_DBG_STANDBY
//    <name> SYSCFG_DBG_STANDBY </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000100C) allow a debug connection in Standby mode </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR3 ) </loc>
//      <o.0..0> SYSCFG_DBG_STANDBY
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR3_SYSCFG_DBG_STOP  -----------------------------
// SVD Line: 12785

//  <item> SFDITEM_FIELD__SYSCFG_CR3_SYSCFG_DBG_STOP
//    <name> SYSCFG_DBG_STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000100C) allow a debug connection in Stop mode </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR3 ) </loc>
//      <o.1..1> SYSCFG_DBG_STOP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR3  -----------------------------------
// SVD Line: 12769

//  <rtree> SFDITEM_REG__SYSCFG_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000100C) control register 3 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR3 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR3 = (SYSCFG_CR3 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR3_SYSCFG_DBG_STANDBY </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR3_SYSCFG_DBG_STOP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR4  -------------------------------
// SVD Line: 12794

unsigned int SYSCFG_CR4 __AT (0x40001010);



// ---------------------------  Field Item: SYSCFG_CR4_USER_DEFINED  ------------------------------
// SVD Line: 12803

//  <item> SFDITEM_FIELD__SYSCFG_CR4_USER_DEFINED
//    <name> USER_DEFINED </name>
//    <rw> 
//    <i> [Bits 30..0] RW (@ 0x40001010) USER_DEFINED </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCFG_CR4 >> 0) & 0x7FFFFFFF), ((SYSCFG_CR4 = (SYSCFG_CR4 & ~(0x7FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYSCFG_CR4_SYSCFG_CR4_REG  -----------------------------
// SVD Line: 12810

//  <item> SFDITEM_FIELD__SYSCFG_CR4_SYSCFG_CR4_REG
//    <name> SYSCFG_CR4_REG </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40001010) LPTIM1 IN2 remapping enable </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR4 ) </loc>
//      <o.31..31> SYSCFG_CR4_REG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR4  -----------------------------------
// SVD Line: 12794

//  <rtree> SFDITEM_REG__SYSCFG_CR4
//    <name> CR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001010) control register 4 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR4 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR4 = (SYSCFG_CR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR4_USER_DEFINED </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR4_SYSCFG_CR4_REG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR5  -------------------------------
// SVD Line: 12819

unsigned int SYSCFG_CR5 __AT (0x40001014);



// ---------------------------  Field Item: SYSCFG_CR5_USER_DEFINED  ------------------------------
// SVD Line: 12828

//  <item> SFDITEM_FIELD__SYSCFG_CR5_USER_DEFINED
//    <name> USER_DEFINED </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001014) USER_DEFINED </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCFG_CR5 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR5 = (SYSCFG_CR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR5  -----------------------------------
// SVD Line: 12819

//  <rtree> SFDITEM_REG__SYSCFG_CR5
//    <name> CR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001014) control register 5 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR5 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR5 = (SYSCFG_CR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR5_USER_DEFINED </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR6  -------------------------------
// SVD Line: 12837

unsigned int SYSCFG_CR6 __AT (0x40001018);



// ---------------------  Field Item: SYSCFG_CR6_DMAC0_MASTER_SECURE_LOCK  ------------------------
// SVD Line: 12846

//  <item> SFDITEM_FIELD__SYSCFG_CR6_DMAC0_MASTER_SECURE_LOCK
//    <name> DMAC0_MASTER_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40001018) DMAC0 master interface security lock </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR6 ) </loc>
//      <o.0..0> DMAC0_MASTER_SECURE_LOCK
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR6_DMAC0_SLAVE_SECURE_LOCK  -------------------------
// SVD Line: 12853

//  <item> SFDITEM_FIELD__SYSCFG_CR6_DMAC0_SLAVE_SECURE_LOCK
//    <name> DMAC0_SLAVE_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40001018) DMAC0 slave interface security lock </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR6 ) </loc>
//      <o.1..1> DMAC0_SLAVE_SECURE_LOCK
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR6_SAC_SECURE_LOCK  -----------------------------
// SVD Line: 12860

//  <item> SFDITEM_FIELD__SYSCFG_CR6_SAC_SECURE_LOCK
//    <name> SAC_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40001018) SAC security lock </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR6 ) </loc>
//      <o.2..2> SAC_SECURE_LOCK
//    </check>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR6_SEC_SECURE_LOCK  -----------------------------
// SVD Line: 12867

//  <item> SFDITEM_FIELD__SYSCFG_CR6_SEC_SECURE_LOCK
//    <name> SEC_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40001018) SEC security lock </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR6 ) </loc>
//      <o.3..3> SEC_SECURE_LOCK
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR6_ANALOG_MAIN_SECURE_LOCK  -------------------------
// SVD Line: 12874

//  <item> SFDITEM_FIELD__SYSCFG_CR6_ANALOG_MAIN_SECURE_LOCK
//    <name> ANALOG_MAIN_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bits 14..5] RW (@ 0x40001018) Security lock for main domain configuration of AFEC </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSCFG_CR6 >> 5) & 0x3FF), ((SYSCFG_CR6 = (SYSCFG_CR6 & ~(0x3FFUL << 5 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------  Field Item: SYSCFG_CR6_RNGC_SECURE_LOCK  ----------------------------
// SVD Line: 12881

//  <item> SFDITEM_FIELD__SYSCFG_CR6_RNGC_SECURE_LOCK
//    <name> RNGC_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40001018) RNGC security lock </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR6 ) </loc>
//      <o.15..15> RNGC_SECURE_LOCK
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR6  -----------------------------------
// SVD Line: 12837

//  <rtree> SFDITEM_REG__SYSCFG_CR6
//    <name> CR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001018) control register 6 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR6 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR6 = (SYSCFG_CR6 & ~(0xFFEFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFEF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR6_DMAC0_MASTER_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR6_DMAC0_SLAVE_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR6_SAC_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR6_SEC_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR6_ANALOG_MAIN_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR6_RNGC_SECURE_LOCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR7  -------------------------------
// SVD Line: 12890

unsigned int SYSCFG_CR7 __AT (0x4000101C);



// ----------------------  Field Item: SYSCFG_CR7_RTC_TAMPER_SECURE_LOCK  -------------------------
// SVD Line: 12899

//  <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_TAMPER_SECURE_LOCK
//    <name> RTC_TAMPER_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000101C) Tamper configuration security lock in RTC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR7 ) </loc>
//      <o.0..0> RTC_TAMPER_SECURE_LOCK
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR7_RTC_WAKEUP0_SECURE_LOCK  -------------------------
// SVD Line: 12906

//  <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_WAKEUP0_SECURE_LOCK
//    <name> RTC_WAKEUP0_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000101C) Tamper configuration security lock in RTC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR7 ) </loc>
//      <o.1..1> RTC_WAKEUP0_SECURE_LOCK
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR7_RTC_WAKEUP1_SECURE_LOCK  -------------------------
// SVD Line: 12913

//  <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_WAKEUP1_SECURE_LOCK
//    <name> RTC_WAKEUP1_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000101C) Wakeup1 configuration security lock in RTC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR7 ) </loc>
//      <o.2..2> RTC_WAKEUP1_SECURE_LOCK
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR7_RTC_WAKEUP2_SECURE_LOCK  -------------------------
// SVD Line: 12920

//  <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_WAKEUP2_SECURE_LOCK
//    <name> RTC_WAKEUP2_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000101C) Wakeup2 configuration security lock in RTC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR7 ) </loc>
//      <o.3..3> RTC_WAKEUP2_SECURE_LOCK
//    </check>
//  </item>
//  


// ---------------------  Field Item: SYSCFG_CR7_RTC_CALENDAR_SECURE_LOCK  ------------------------
// SVD Line: 12927

//  <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_CALENDAR_SECURE_LOCK
//    <name> RTC_CALENDAR_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000101C) Calendar configuration security lock in RTC </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR7 ) </loc>
//      <o.4..4> RTC_CALENDAR_SECURE_LOCK
//    </check>
//  </item>
//  


// ----------------------  Field Item: SYSCFG_CR7_ANALOG_AON_SECURE_LOCK  -------------------------
// SVD Line: 12934

//  <item> SFDITEM_FIELD__SYSCFG_CR7_ANALOG_AON_SECURE_LOCK
//    <name> ANALOG_AON_SECURE_LOCK </name>
//    <rw> 
//    <i> [Bits 14..5] RW (@ 0x4000101C) Security lock for AON domain configuration of AFEC </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSCFG_CR7 >> 5) & 0x3FF), ((SYSCFG_CR7 = (SYSCFG_CR7 & ~(0x3FFUL << 5 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR7  -----------------------------------
// SVD Line: 12890

//  <rtree> SFDITEM_REG__SYSCFG_CR7
//    <name> CR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000101C) control register 7 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR7 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR7 = (SYSCFG_CR7 & ~(0x7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_TAMPER_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_WAKEUP0_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_WAKEUP1_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_WAKEUP2_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR7_RTC_CALENDAR_SECURE_LOCK </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR7_ANALOG_AON_SECURE_LOCK </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR8  -------------------------------
// SVD Line: 12943

unsigned int SYSCFG_CR8 __AT (0x40001020);



// -----------------------  Field Item: SYSCFG_CR8_QSPI_MEM_ENCRYPT_KEY  --------------------------
// SVD Line: 12952

//  <item> SFDITEM_FIELD__SYSCFG_CR8_QSPI_MEM_ENCRYPT_KEY
//    <name> QSPI_MEM_ENCRYPT_KEY </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001020) Encryption key for QSPI memory </i>
//    <edit> 
//      <loc> ( (unsigned int)((SYSCFG_CR8 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR8 = (SYSCFG_CR8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR8  -----------------------------------
// SVD Line: 12943

//  <rtree> SFDITEM_REG__SYSCFG_CR8
//    <name> CR8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001020) control register 8 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR8 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR8 = (SYSCFG_CR8 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR8_QSPI_MEM_ENCRYPT_KEY </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SYSCFG_CR9  -------------------------------
// SVD Line: 12961

unsigned int SYSCFG_CR9 __AT (0x40001024);



// -----------------------  Field Item: SYSCFG_CR9_QSPI_REMAP_DST_ADDR  ---------------------------
// SVD Line: 12970

//  <item> SFDITEM_FIELD__SYSCFG_CR9_QSPI_REMAP_DST_ADDR
//    <name> QSPI_REMAP_DST_ADDR </name>
//    <rw> 
//    <i> [Bits 13..0] RW (@ 0x40001024) QSPI remap destination address </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSCFG_CR9 >> 0) & 0x3FFF), ((SYSCFG_CR9 = (SYSCFG_CR9 & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------  Field Item: SYSCFG_CR9_QSPI_REMAP_SRC_ADDR  ---------------------------
// SVD Line: 12977

//  <item> SFDITEM_FIELD__SYSCFG_CR9_QSPI_REMAP_SRC_ADDR
//    <name> QSPI_REMAP_SRC_ADDR </name>
//    <rw> 
//    <i> [Bits 27..14] RW (@ 0x40001024) QSPI remap source address </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSCFG_CR9 >> 14) & 0x3FFF), ((SYSCFG_CR9 = (SYSCFG_CR9 & ~(0x3FFFUL << 14 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR9  -----------------------------------
// SVD Line: 12961

//  <rtree> SFDITEM_REG__SYSCFG_CR9
//    <name> CR9 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001024) control register 9 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR9 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR9 = (SYSCFG_CR9 & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR9_QSPI_REMAP_DST_ADDR </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR9_QSPI_REMAP_SRC_ADDR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SYSCFG_CR10  -------------------------------
// SVD Line: 12986

unsigned int SYSCFG_CR10 __AT (0x40001028);



// -------------------------  Field Item: SYSCFG_CR10_QSPI_REMAP_SIZE  ----------------------------
// SVD Line: 12995

//  <item> SFDITEM_FIELD__SYSCFG_CR10_QSPI_REMAP_SIZE
//    <name> QSPI_REMAP_SIZE </name>
//    <rw> 
//    <i> [Bits 13..0] RW (@ 0x40001028) Address space for QSPI remapping </i>
//    <edit> 
//      <loc> ( (unsigned short)((SYSCFG_CR10 >> 0) & 0x3FFF), ((SYSCFG_CR10 = (SYSCFG_CR10 & ~(0x3FFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: SYSCFG_CR10_I2S_MODE_SEL  ------------------------------
// SVD Line: 13002

//  <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_MODE_SEL
//    <name> I2S_MODE_SEL </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40001028) I2S works in master or slave mode </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR10 ) </loc>
//      <o.14..14> I2S_MODE_SEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYSCFG_CR10_I2S_WS_LEN  -------------------------------
// SVD Line: 13009

//  <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_WS_LEN
//    <name> I2S_WS_LEN </name>
//    <rw> 
//    <i> [Bits 21..15] RW (@ 0x40001028) I2S main interface resolution configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((SYSCFG_CR10 >> 15) & 0x7F), ((SYSCFG_CR10 = (SYSCFG_CR10 & ~(0x7FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: SYSCFG_CR10_I2S_WS_EN  -------------------------------
// SVD Line: 13016

//  <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_WS_EN
//    <name> I2S_WS_EN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40001028) I2S WS enable </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR10 ) </loc>
//      <o.22..22> I2S_WS_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: SYSCFG_CR10_I2S_WS_SEL  -------------------------------
// SVD Line: 13023

//  <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_WS_SEL
//    <name> I2S_WS_SEL </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40001028) I2S WS output delay enable </i>
//    <check> 
//      <loc> ( (unsigned int) SYSCFG_CR10 ) </loc>
//      <o.23..23> I2S_WS_SEL
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SYSCFG_CR10  ----------------------------------
// SVD Line: 12986

//  <rtree> SFDITEM_REG__SYSCFG_CR10
//    <name> CR10 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001028) control register 10 </i>
//    <loc> ( (unsigned int)((SYSCFG_CR10 >> 0) & 0xFFFFFFFF), ((SYSCFG_CR10 = (SYSCFG_CR10 & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SYSCFG_CR10_QSPI_REMAP_SIZE </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_MODE_SEL </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_WS_LEN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_WS_EN </item>
//    <item> SFDITEM_FIELD__SYSCFG_CR10_I2S_WS_SEL </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: SYSCFG  ------------------------------------
// SVD Line: 12516

//  <view> SYSCFG
//    <name> SYSCFG </name>
//    <item> SFDITEM_REG__SYSCFG_CR0 </item>
//    <item> SFDITEM_REG__SYSCFG_CR1 </item>
//    <item> SFDITEM_REG__SYSCFG_CR2 </item>
//    <item> SFDITEM_REG__SYSCFG_CR3 </item>
//    <item> SFDITEM_REG__SYSCFG_CR4 </item>
//    <item> SFDITEM_REG__SYSCFG_CR5 </item>
//    <item> SFDITEM_REG__SYSCFG_CR6 </item>
//    <item> SFDITEM_REG__SYSCFG_CR7 </item>
//    <item> SFDITEM_REG__SYSCFG_CR8 </item>
//    <item> SFDITEM_REG__SYSCFG_CR9 </item>
//    <item> SFDITEM_REG__SYSCFG_CR10 </item>
//  </view>
//  


// -----------------------------  Register Item Address: PWR_CR0  ---------------------------------
// SVD Line: 13048

unsigned int PWR_CR0 __AT (0x40001800);



// ---------------------------------  Field Item: PWR_CR0_CR  -------------------------------------
// SVD Line: 13057

//  <item> SFDITEM_FIELD__PWR_CR0_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001800) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_CR0 >> 0) & 0xFFFFFFFF), ((PWR_CR0 = (PWR_CR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR0  ------------------------------------
// SVD Line: 13048

//  <rtree> SFDITEM_REG__PWR_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001800) control register 0 </i>
//    <loc> ( (unsigned int)((PWR_CR0 >> 0) & 0xFFFFFFFF), ((PWR_CR0 = (PWR_CR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR0_CR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR1  ---------------------------------
// SVD Line: 13066

unsigned int PWR_CR1 __AT (0x40001804);



// ---------------------------------  Field Item: PWR_CR1_CR  -------------------------------------
// SVD Line: 13075

//  <item> SFDITEM_FIELD__PWR_CR1_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001804) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_CR1 >> 0) & 0xFFFFFFFF), ((PWR_CR1 = (PWR_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR1  ------------------------------------
// SVD Line: 13066

//  <rtree> SFDITEM_REG__PWR_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001804) control register 1 </i>
//    <loc> ( (unsigned int)((PWR_CR1 >> 0) & 0xFFFFFFFF), ((PWR_CR1 = (PWR_CR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR1_CR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_SR0  ---------------------------------
// SVD Line: 13084

unsigned int PWR_SR0 __AT (0x40001808);



// ---------------------------------  Field Item: PWR_SR0_SR  -------------------------------------
// SVD Line: 13093

//  <item> SFDITEM_FIELD__PWR_SR0_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001808) SR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_SR0 >> 0) & 0xFFFFFFFF), ((PWR_SR0 = (PWR_SR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_SR0  ------------------------------------
// SVD Line: 13084

//  <rtree> SFDITEM_REG__PWR_SR0
//    <name> SR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001808) status register 0 </i>
//    <loc> ( (unsigned int)((PWR_SR0 >> 0) & 0xFFFFFFFF), ((PWR_SR0 = (PWR_SR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_SR0_SR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_SR1  ---------------------------------
// SVD Line: 13102

unsigned int PWR_SR1 __AT (0x4000180C);



// ---------------------------------  Field Item: PWR_SR1_SR  -------------------------------------
// SVD Line: 13111

//  <item> SFDITEM_FIELD__PWR_SR1_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000180C) SR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_SR1 >> 0) & 0xFFFFFFFF), ((PWR_SR1 = (PWR_SR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_SR1  ------------------------------------
// SVD Line: 13102

//  <rtree> SFDITEM_REG__PWR_SR1
//    <name> SR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000180C) status register 1 </i>
//    <loc> ( (unsigned int)((PWR_SR1 >> 0) & 0xFFFFFFFF), ((PWR_SR1 = (PWR_SR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_SR1_SR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR2  ---------------------------------
// SVD Line: 13120

unsigned int PWR_CR2 __AT (0x40001810);



// ---------------------------------  Field Item: PWR_CR2_CR  -------------------------------------
// SVD Line: 13129

//  <item> SFDITEM_FIELD__PWR_CR2_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001810) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_CR2 >> 0) & 0xFFFFFFFF), ((PWR_CR2 = (PWR_CR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR2  ------------------------------------
// SVD Line: 13120

//  <rtree> SFDITEM_REG__PWR_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001810) control register 2 </i>
//    <loc> ( (unsigned int)((PWR_CR2 >> 0) & 0xFFFFFFFF), ((PWR_CR2 = (PWR_CR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR2_CR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR3  ---------------------------------
// SVD Line: 13138

unsigned int PWR_CR3 __AT (0x40001814);



// ---------------------------------  Field Item: PWR_CR3_CR  -------------------------------------
// SVD Line: 13147

//  <item> SFDITEM_FIELD__PWR_CR3_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001814) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_CR3 >> 0) & 0xFFFFFFFF), ((PWR_CR3 = (PWR_CR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR3  ------------------------------------
// SVD Line: 13138

//  <rtree> SFDITEM_REG__PWR_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001814) control register 3 </i>
//    <loc> ( (unsigned int)((PWR_CR3 >> 0) & 0xFFFFFFFF), ((PWR_CR3 = (PWR_CR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR3_CR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR4  ---------------------------------
// SVD Line: 13156

unsigned int PWR_CR4 __AT (0x40001818);



// ---------------------------------  Field Item: PWR_CR4_CR  -------------------------------------
// SVD Line: 13165

//  <item> SFDITEM_FIELD__PWR_CR4_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001818) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_CR4 >> 0) & 0xFFFFFFFF), ((PWR_CR4 = (PWR_CR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR4  ------------------------------------
// SVD Line: 13156

//  <rtree> SFDITEM_REG__PWR_CR4
//    <name> CR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40001818) control register 4 </i>
//    <loc> ( (unsigned int)((PWR_CR4 >> 0) & 0xFFFFFFFF), ((PWR_CR4 = (PWR_CR4 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR4_CR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWR_CR5  ---------------------------------
// SVD Line: 13174

unsigned int PWR_CR5 __AT (0x4000181C);



// ---------------------------------  Field Item: PWR_CR5_CR  -------------------------------------
// SVD Line: 13183

//  <item> SFDITEM_FIELD__PWR_CR5_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000181C) CR </i>
//    <edit> 
//      <loc> ( (unsigned int)((PWR_CR5 >> 0) & 0xFFFFFFFF), ((PWR_CR5 = (PWR_CR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: PWR_CR5  ------------------------------------
// SVD Line: 13174

//  <rtree> SFDITEM_REG__PWR_CR5
//    <name> CR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000181C) control register 5 </i>
//    <loc> ( (unsigned int)((PWR_CR5 >> 0) & 0xFFFFFFFF), ((PWR_CR5 = (PWR_CR5 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWR_CR5_CR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWR  --------------------------------------
// SVD Line: 13034

//  <view> PWR
//    <name> PWR </name>
//    <item> SFDITEM_REG__PWR_CR0 </item>
//    <item> SFDITEM_REG__PWR_CR1 </item>
//    <item> SFDITEM_REG__PWR_SR0 </item>
//    <item> SFDITEM_REG__PWR_SR1 </item>
//    <item> SFDITEM_REG__PWR_CR2 </item>
//    <item> SFDITEM_REG__PWR_CR3 </item>
//    <item> SFDITEM_REG__PWR_CR4 </item>
//    <item> SFDITEM_REG__PWR_CR5 </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIMER0_CR1  -------------------------------
// SVD Line: 13208

unsigned short TIMER0_CR1 __AT (0x4000A000);



// -------------------------------  Field Item: TIMER0_CR1_CEN  -----------------------------------
// SVD Line: 13217

//  <item> SFDITEM_FIELD__TIMER0_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_UDIS  ----------------------------------
// SVD Line: 13224

//  <item> SFDITEM_FIELD__TIMER0_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_URS  -----------------------------------
// SVD Line: 13231

//  <item> SFDITEM_FIELD__TIMER0_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A000) Update Request Source </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_OPM  -----------------------------------
// SVD Line: 13238

//  <item> SFDITEM_FIELD__TIMER0_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A000) One Pulse Mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_DIR  -----------------------------------
// SVD Line: 13245

//  <item> SFDITEM_FIELD__TIMER0_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A000) Count direction </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_CMS  -----------------------------------
// SVD Line: 13252

//  <item> SFDITEM_FIELD__TIMER0_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4000A000) counting mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CR1 >> 5) & 0x3), ((TIMER0_CR1 = (TIMER0_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_ARPE  ----------------------------------
// SVD Line: 13259

//  <item> SFDITEM_FIELD__TIMER0_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000A000) shadow reload register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR1_CKD  -----------------------------------
// SVD Line: 13266

//  <item> SFDITEM_FIELD__TIMER0_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000A000) sampling clock divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CR1 >> 8) & 0x3), ((TIMER0_CR1 = (TIMER0_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CR1  -----------------------------------
// SVD Line: 13208

//  <rtree> SFDITEM_REG__TIMER0_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A000) TIMER control register 1 </i>
//    <loc> ( (unsigned short)((TIMER0_CR1 >> 0) & 0xFFFF), ((TIMER0_CR1 = (TIMER0_CR1 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIMER0_CR1_CKD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_CR2  -------------------------------
// SVD Line: 13275

unsigned short TIMER0_CR2 __AT (0x4000A004);



// -------------------------------  Field Item: TIMER0_CR2_CCDS  ----------------------------------
// SVD Line: 13284

//  <item> SFDITEM_FIELD__TIMER0_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A004) DMA request source selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR2_MMS  -----------------------------------
// SVD Line: 13291

//  <item> SFDITEM_FIELD__TIMER0_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A004) mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CR2 >> 4) & 0x7), ((TIMER0_CR2 = (TIMER0_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_CR2_TI0S  ----------------------------------
// SVD Line: 13298

//  <item> SFDITEM_FIELD__TIMER0_CR2_TI0S
//    <name> TI0S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000A004) channel 0/1 source Select </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CR2 ) </loc>
//      <o.7..7> TI0S
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CR2  -----------------------------------
// SVD Line: 13275

//  <rtree> SFDITEM_REG__TIMER0_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A004) TIMER control register 2 </i>
//    <loc> ( (unsigned short)((TIMER0_CR2 >> 0) & 0xFFFF), ((TIMER0_CR2 = (TIMER0_CR2 & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIMER0_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIMER0_CR2_TI0S </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_SMCR  -------------------------------
// SVD Line: 13307

unsigned short TIMER0_SMCR __AT (0x4000A008);



// -------------------------------  Field Item: TIMER0_SMCR_SMS  ----------------------------------
// SVD Line: 13316

//  <item> SFDITEM_FIELD__TIMER0_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000A008) slave mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_SMCR >> 0) & 0x7), ((TIMER0_SMCR = (TIMER0_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SMCR_TS  -----------------------------------
// SVD Line: 13323

//  <item> SFDITEM_FIELD__TIMER0_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A008) Trigger source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_SMCR >> 4) & 0x7), ((TIMER0_SMCR = (TIMER0_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SMCR_MSM  ----------------------------------
// SVD Line: 13330

//  <item> SFDITEM_FIELD__TIMER0_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000A008) Master-slave synchronization mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SMCR_ETF  ----------------------------------
// SVD Line: 13337

//  <item> SFDITEM_FIELD__TIMER0_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000A008) External trigger input filter configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_SMCR >> 8) & 0xF), ((TIMER0_SMCR = (TIMER0_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_SMCR_ETPS  ----------------------------------
// SVD Line: 13344

//  <item> SFDITEM_FIELD__TIMER0_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000A008) External trigger input frequency division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_SMCR >> 12) & 0x3), ((TIMER0_SMCR = (TIMER0_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SMCR_ECE  ----------------------------------
// SVD Line: 13351

//  <item> SFDITEM_FIELD__TIMER0_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000A008) External clock mode 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SMCR_ETP  ----------------------------------
// SVD Line: 13358

//  <item> SFDITEM_FIELD__TIMER0_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A008) External trigger polarity selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_SMCR  ----------------------------------
// SVD Line: 13307

//  <rtree> SFDITEM_REG__TIMER0_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A008) TIMER slave Mode Control register </i>
//    <loc> ( (unsigned short)((TIMER0_SMCR >> 0) & 0xFFFF), ((TIMER0_SMCR = (TIMER0_SMCR & ~(0xFFF7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_SMS </item>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_TS </item>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIMER0_SMCR_ETP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_DIER  -------------------------------
// SVD Line: 13367

unsigned short TIMER0_DIER __AT (0x4000A00C);



// -------------------------------  Field Item: TIMER0_DIER_UIE  ----------------------------------
// SVD Line: 13376

//  <item> SFDITEM_FIELD__TIMER0_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A00C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC0IE  ---------------------------------
// SVD Line: 13383

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC0IE
//    <name> CC0IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A00C) Channel 0 event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.1..1> CC0IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC1IE  ---------------------------------
// SVD Line: 13390

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A00C) Capture/Compare 1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.2..2> CC1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC2IE  ---------------------------------
// SVD Line: 13397

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A00C) Capture/Compare 2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.3..3> CC2IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC3IE  ---------------------------------
// SVD Line: 13404

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A00C) Capture/Compare 3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.4..4> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_DIER_TIE  ----------------------------------
// SVD Line: 13411

//  <item> SFDITEM_FIELD__TIMER0_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A00C) Trigger event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_DIER_UDE  ----------------------------------
// SVD Line: 13418

//  <item> SFDITEM_FIELD__TIMER0_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000A00C) Update event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC0DE  ---------------------------------
// SVD Line: 13425

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC0DE
//    <name> CC0DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A00C) Channel 0 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.9..9> CC0DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC1DE  ---------------------------------
// SVD Line: 13432

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A00C) Channel 1 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.10..10> CC1DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC2DE  ---------------------------------
// SVD Line: 13439

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A00C) Channel 2 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.11..11> CC2DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_DIER_CC3DE  ---------------------------------
// SVD Line: 13446

//  <item> SFDITEM_FIELD__TIMER0_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A00C) Channel 3 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.12..12> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_DIER_TDE  ----------------------------------
// SVD Line: 13453

//  <item> SFDITEM_FIELD__TIMER0_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000A00C) Trigger event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_DIER  ----------------------------------
// SVD Line: 13367

//  <rtree> SFDITEM_REG__TIMER0_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A00C) TIMER DMA/interrupt enable register </i>
//    <loc> ( (unsigned short)((TIMER0_DIER >> 0) & 0xFFFF), ((TIMER0_DIER = (TIMER0_DIER & ~(0x5F5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DIER_UIE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC0IE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC0DE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIMER0_DIER_TDE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_SR  --------------------------------
// SVD Line: 13462

unsigned short TIMER0_SR __AT (0x4000A010);



// --------------------------------  Field Item: TIMER0_SR_UIF  -----------------------------------
// SVD Line: 13471

//  <item> SFDITEM_FIELD__TIMER0_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC0IF  ----------------------------------
// SVD Line: 13478

//  <item> SFDITEM_FIELD__TIMER0_SR_CC0IF
//    <name> CC0IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A010) Capture/Compare 0 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.1..1> CC0IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC1IF  ----------------------------------
// SVD Line: 13485

//  <item> SFDITEM_FIELD__TIMER0_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A010) Capture/Compare 1 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.2..2> CC1IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC2IF  ----------------------------------
// SVD Line: 13492

//  <item> SFDITEM_FIELD__TIMER0_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A010) Capture/Compare 2 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.3..3> CC2IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC3IF  ----------------------------------
// SVD Line: 13499

//  <item> SFDITEM_FIELD__TIMER0_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A010) Capture/Compare 3 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.4..4> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_SR_TIF  -----------------------------------
// SVD Line: 13506

//  <item> SFDITEM_FIELD__TIMER0_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000A010) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC0OF  ----------------------------------
// SVD Line: 13513

//  <item> SFDITEM_FIELD__TIMER0_SR_CC0OF
//    <name> CC0OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A010) Capture 0 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.9..9> CC0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC1OF  ----------------------------------
// SVD Line: 13520

//  <item> SFDITEM_FIELD__TIMER0_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A010) Capture 1 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.10..10> CC1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC2OF  ----------------------------------
// SVD Line: 13527

//  <item> SFDITEM_FIELD__TIMER0_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A010) Capture 2 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.11..11> CC2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_SR_CC3OF  ----------------------------------
// SVD Line: 13534

//  <item> SFDITEM_FIELD__TIMER0_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A010) Capture 3 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_SR ) </loc>
//      <o.12..12> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIMER0_SR  -----------------------------------
// SVD Line: 13462

//  <rtree> SFDITEM_REG__TIMER0_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A010) status register </i>
//    <loc> ( (unsigned short)((TIMER0_SR >> 0) & 0xFFFF), ((TIMER0_SR = (TIMER0_SR & ~(0x1E5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1E5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_SR_UIF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC0IF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC0OF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIMER0_SR_CC3OF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_EGR  -------------------------------
// SVD Line: 13543

unsigned short TIMER0_EGR __AT (0x4000A014);



// --------------------------------  Field Item: TIMER0_EGR_UG  -----------------------------------
// SVD Line: 13552

//  <item> SFDITEM_FIELD__TIMER0_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000A014) Update event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_EGR_CC0G  ----------------------------------
// SVD Line: 13559

//  <item> SFDITEM_FIELD__TIMER0_EGR_CC0G
//    <name> CC0G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000A014) Channel 0 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_EGR ) </loc>
//      <o.1..1> CC0G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_EGR_CC1G  ----------------------------------
// SVD Line: 13566

//  <item> SFDITEM_FIELD__TIMER0_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000A014) Channel 1 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_EGR ) </loc>
//      <o.2..2> CC1G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_EGR_CC2G  ----------------------------------
// SVD Line: 13573

//  <item> SFDITEM_FIELD__TIMER0_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000A014) Channel 2 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_EGR ) </loc>
//      <o.3..3> CC2G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_EGR_CC3G  ----------------------------------
// SVD Line: 13580

//  <item> SFDITEM_FIELD__TIMER0_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000A014) Channel 3 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_EGR ) </loc>
//      <o.4..4> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER0_EGR_TG  -----------------------------------
// SVD Line: 13587

//  <item> SFDITEM_FIELD__TIMER0_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000A014) Trigger event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_EGR  -----------------------------------
// SVD Line: 13543

//  <rtree> SFDITEM_REG__TIMER0_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000A014) TIMER event generation register </i>
//    <loc> ( (unsigned short)((TIMER0_EGR >> 0) & 0xFFFF), ((TIMER0_EGR = (TIMER0_EGR & ~(0x5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_EGR_UG </item>
//    <item> SFDITEM_FIELD__TIMER0_EGR_CC0G </item>
//    <item> SFDITEM_FIELD__TIMER0_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIMER0_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIMER0_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIMER0_EGR_TG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCMR1  ------------------------------
// SVD Line: 13596

unsigned short TIMER0_CCMR1 __AT (0x4000A018);



// ------------------------------  Field Item: TIMER0_CCMR1_CC0S  ---------------------------------
// SVD Line: 13605

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_CC0S
//    <name> CC0S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000A018) Channel 0 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR1 >> 0) & 0x3), ((TIMER0_CCMR1 = (TIMER0_CCMR1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR1_OC0FE  ---------------------------------
// SVD Line: 13612

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0FE
//    <name> OC0FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A018) Channel 0 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR1 ) </loc>
//      <o.2..2> OC0FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR1_OC0PE  ---------------------------------
// SVD Line: 13619

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0PE
//    <name> OC0PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A018) Channel 0 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR1 ) </loc>
//      <o.3..3> OC0PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCMR1_OC0M  ---------------------------------
// SVD Line: 13626

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0M
//    <name> OC0M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A018) Channel 0 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR1 >> 4) & 0x7), ((TIMER0_CCMR1 = (TIMER0_CCMR1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR1_OC0CE  ---------------------------------
// SVD Line: 13633

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0CE
//    <name> OC0CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000A018) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR1 ) </loc>
//      <o.7..7> OC0CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCMR1_CC1S  ---------------------------------
// SVD Line: 13640

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000A018) Channel 1 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR1 >> 8) & 0x3), ((TIMER0_CCMR1 = (TIMER0_CCMR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR1_OC1FE  ---------------------------------
// SVD Line: 13647

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A018) Channel 1 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR1 ) </loc>
//      <o.10..10> OC1FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR1_OC1PE  ---------------------------------
// SVD Line: 13654

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A018) Channel 1 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR1 ) </loc>
//      <o.11..11> OC1PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCMR1_OC1M  ---------------------------------
// SVD Line: 13661

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000A018) Channel 1 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR1 >> 12) & 0x7), ((TIMER0_CCMR1 = (TIMER0_CCMR1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR1_OC1CE  ---------------------------------
// SVD Line: 13668

//  <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A018) Channel 1 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR1 ) </loc>
//      <o.15..15> OC1CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_CCMR1  ----------------------------------
// SVD Line: 13596

//  <rtree> SFDITEM_REG__TIMER0_CCMR1
//    <name> CCMR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A018) capture/compare mode register 1 </i>
//    <loc> ( (unsigned short)((TIMER0_CCMR1 >> 0) & 0xFFFF), ((TIMER0_CCMR1 = (TIMER0_CCMR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_CC0S </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0FE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0PE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0M </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC0CE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_CC1S </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1FE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1PE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1M </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR1_OC1CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCMR2  ------------------------------
// SVD Line: 13677

unsigned short TIMER0_CCMR2 __AT (0x4000A01C);



// ------------------------------  Field Item: TIMER0_CCMR2_CC2S  ---------------------------------
// SVD Line: 13686

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000A01C) Channel 2 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR2 >> 0) & 0x3), ((TIMER0_CCMR2 = (TIMER0_CCMR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR2_OC2FE  ---------------------------------
// SVD Line: 13693

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000A01C) Channel 2 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR2 ) </loc>
//      <o.2..2> OC2FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR2_OC2PE  ---------------------------------
// SVD Line: 13700

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A01C) Channel 2 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR2 ) </loc>
//      <o.3..3> OC2PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCMR2_OC2M  ---------------------------------
// SVD Line: 13707

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A01C) Channel 2 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR2 >> 4) & 0x7), ((TIMER0_CCMR2 = (TIMER0_CCMR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR2_OC2CE  ---------------------------------
// SVD Line: 13714

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000A01C) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR2 ) </loc>
//      <o.7..7> OC2CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCMR2_CC3S  ---------------------------------
// SVD Line: 13721

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000A01C) Channel 3 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR2 >> 8) & 0x3), ((TIMER0_CCMR2 = (TIMER0_CCMR2 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR2_OC3FE  ---------------------------------
// SVD Line: 13728

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000A01C) Channel 3 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR2 ) </loc>
//      <o.10..10> OC3FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR2_OC3PE  ---------------------------------
// SVD Line: 13735

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A01C) Channel 3 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR2 ) </loc>
//      <o.11..11> OC3PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCMR2_OC3M  ---------------------------------
// SVD Line: 13742

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000A01C) Channel 3 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_CCMR2 >> 12) & 0x7), ((TIMER0_CCMR2 = (TIMER0_CCMR2 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_CCMR2_OC3CE  ---------------------------------
// SVD Line: 13749

//  <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A01C) Channel 3 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCMR2 ) </loc>
//      <o.15..15> OC3CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER0_CCMR2  ----------------------------------
// SVD Line: 13677

//  <rtree> SFDITEM_REG__TIMER0_CCMR2
//    <name> CCMR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A01C) capture/compare mode register 2 </i>
//    <loc> ( (unsigned short)((TIMER0_CCMR2 >> 0) & 0xFFFF), ((TIMER0_CCMR2 = (TIMER0_CCMR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_CC2S </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2FE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2PE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2M </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC2CE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_CC3S </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3FE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3PE </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3M </item>
//    <item> SFDITEM_FIELD__TIMER0_CCMR2_OC3CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCER  -------------------------------
// SVD Line: 13758

unsigned short TIMER0_CCER __AT (0x4000A020);



// ------------------------------  Field Item: TIMER0_CCER_CC0E  ----------------------------------
// SVD Line: 13767

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC0E
//    <name> CC0E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000A020) Channel 0 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.0..0> CC0E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC0P  ----------------------------------
// SVD Line: 13774

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC0P
//    <name> CC0P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000A020) Channel 0 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.1..1> CC0P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC0NP  ---------------------------------
// SVD Line: 13781

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC0NP
//    <name> CC0NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000A020) Channel 0 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.3..3> CC0NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC1E  ----------------------------------
// SVD Line: 13788

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000A020) Channel 1 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.4..4> CC1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC1P  ----------------------------------
// SVD Line: 13795

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000A020) Channel 1 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.5..5> CC1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC1NP  ---------------------------------
// SVD Line: 13802

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000A020) Channel 1 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.7..7> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC2E  ----------------------------------
// SVD Line: 13809

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000A020) Channel 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.8..8> CC2E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC2P  ----------------------------------
// SVD Line: 13816

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000A020) Channel 2 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.9..9> CC2P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC2NP  ---------------------------------
// SVD Line: 13823

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000A020) Channel 2 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.11..11> CC2NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC3E  ----------------------------------
// SVD Line: 13830

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000A020) Channel 3 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.12..12> CC3E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC3P  ----------------------------------
// SVD Line: 13837

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000A020) Channel 3 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.13..13> CC3P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_CCER_CC3NP  ---------------------------------
// SVD Line: 13844

//  <item> SFDITEM_FIELD__TIMER0_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000A020) Channel 3 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER0_CCER ) </loc>
//      <o.15..15> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CCER  ----------------------------------
// SVD Line: 13758

//  <rtree> SFDITEM_REG__TIMER0_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A020) TIMER capture/compare enable register </i>
//    <loc> ( (unsigned short)((TIMER0_CCER >> 0) & 0xFFFF), ((TIMER0_CCER = (TIMER0_CCER & ~(0xBBBBUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xBBBB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC0E </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC0P </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC0NP </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC1E </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIMER0_CCER_CC3NP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_CNT  -------------------------------
// SVD Line: 13853

unsigned short TIMER0_CNT __AT (0x4000A024);



// -------------------------------  Field Item: TIMER0_CNT_CNT  -----------------------------------
// SVD Line: 13862

//  <item> SFDITEM_FIELD__TIMER0_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A024) Count value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CNT >> 0) & 0xFFFF), ((TIMER0_CNT = (TIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CNT  -----------------------------------
// SVD Line: 13853

//  <rtree> SFDITEM_REG__TIMER0_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A024) TIMER counter register </i>
//    <loc> ( (unsigned short)((TIMER0_CNT >> 0) & 0xFFFF), ((TIMER0_CNT = (TIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_PSC  -------------------------------
// SVD Line: 13871

unsigned short TIMER0_PSC __AT (0x4000A028);



// -------------------------------  Field Item: TIMER0_PSC_PSC  -----------------------------------
// SVD Line: 13880

//  <item> SFDITEM_FIELD__TIMER0_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_PSC >> 0) & 0xFFFF), ((TIMER0_PSC = (TIMER0_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_PSC  -----------------------------------
// SVD Line: 13871

//  <rtree> SFDITEM_REG__TIMER0_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A028) TIMER prescaler register </i>
//    <loc> ( (unsigned short)((TIMER0_PSC >> 0) & 0xFFFF), ((TIMER0_PSC = (TIMER0_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_ARR  -------------------------------
// SVD Line: 13889

unsigned int TIMER0_ARR __AT (0x4000A02C);



// -------------------------------  Field Item: TIMER0_ARR_ARR  -----------------------------------
// SVD Line: 13898

//  <item> SFDITEM_FIELD__TIMER0_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A02C) Counter reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_ARR >> 0) & 0xFFFF), ((TIMER0_ARR = (TIMER0_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_ARR  -----------------------------------
// SVD Line: 13889

//  <rtree> SFDITEM_REG__TIMER0_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000A02C) TIMER auto-reload register </i>
//    <loc> ( (unsigned int)((TIMER0_ARR >> 0) & 0xFFFFFFFF), ((TIMER0_ARR = (TIMER0_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_ARR_ARR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCR0  -------------------------------
// SVD Line: 13907

unsigned short TIMER0_CCR0 __AT (0x4000A034);



// -------------------------------  Field Item: TIMER0_CCR0_CCR  ----------------------------------
// SVD Line: 13916

//  <item> SFDITEM_FIELD__TIMER0_CCR0_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A034) Channel 0 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CCR0 >> 0) & 0xFFFF), ((TIMER0_CCR0 = (TIMER0_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CCR0  ----------------------------------
// SVD Line: 13907

//  <rtree> SFDITEM_REG__TIMER0_CCR0
//    <name> CCR0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A034) Channel 0 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER0_CCR0 >> 0) & 0xFFFF), ((TIMER0_CCR0 = (TIMER0_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCR0_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCR1  -------------------------------
// SVD Line: 13925

unsigned short TIMER0_CCR1 __AT (0x4000A038);



// -------------------------------  Field Item: TIMER0_CCR1_CCR  ----------------------------------
// SVD Line: 13934

//  <item> SFDITEM_FIELD__TIMER0_CCR1_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A038) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CCR1 >> 0) & 0xFFFF), ((TIMER0_CCR1 = (TIMER0_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CCR1  ----------------------------------
// SVD Line: 13925

//  <rtree> SFDITEM_REG__TIMER0_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A038) Channel 1 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER0_CCR1 >> 0) & 0xFFFF), ((TIMER0_CCR1 = (TIMER0_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCR1_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCR2  -------------------------------
// SVD Line: 13943

unsigned short TIMER0_CCR2 __AT (0x4000A03C);



// -------------------------------  Field Item: TIMER0_CCR2_CCR  ----------------------------------
// SVD Line: 13952

//  <item> SFDITEM_FIELD__TIMER0_CCR2_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A03C) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CCR2 >> 0) & 0xFFFF), ((TIMER0_CCR2 = (TIMER0_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CCR2  ----------------------------------
// SVD Line: 13943

//  <rtree> SFDITEM_REG__TIMER0_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A03C) Channel 2 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER0_CCR2 >> 0) & 0xFFFF), ((TIMER0_CCR2 = (TIMER0_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCR2_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CCR3  -------------------------------
// SVD Line: 13961

unsigned short TIMER0_CCR3 __AT (0x4000A040);



// -------------------------------  Field Item: TIMER0_CCR3_CCR  ----------------------------------
// SVD Line: 13970

//  <item> SFDITEM_FIELD__TIMER0_CCR3_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A040) Channel 3 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_CCR3 >> 0) & 0xFFFF), ((TIMER0_CCR3 = (TIMER0_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CCR3  ----------------------------------
// SVD Line: 13961

//  <rtree> SFDITEM_REG__TIMER0_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A040) Channel 3 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER0_CCR3 >> 0) & 0xFFFF), ((TIMER0_CCR3 = (TIMER0_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CCR3_CCR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_DCR  -------------------------------
// SVD Line: 13979

unsigned short TIMER0_DCR __AT (0x4000A048);



// -------------------------------  Field Item: TIMER0_DCR_DBA  -----------------------------------
// SVD Line: 13988

//  <item> SFDITEM_FIELD__TIMER0_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4000A048) DMA continuously reads and writes base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_DCR >> 0) & 0x1F), ((TIMER0_DCR = (TIMER0_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_DCR_DBL  -----------------------------------
// SVD Line: 13995

//  <item> SFDITEM_FIELD__TIMER0_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4000A048) DMA continuous read and write length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_DCR >> 8) & 0x1F), ((TIMER0_DCR = (TIMER0_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_DCR  -----------------------------------
// SVD Line: 13979

//  <rtree> SFDITEM_REG__TIMER0_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A048) DMA control register </i>
//    <loc> ( (unsigned short)((TIMER0_DCR >> 0) & 0xFFFF), ((TIMER0_DCR = (TIMER0_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DCR_DBA </item>
//    <item> SFDITEM_FIELD__TIMER0_DCR_DBL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_DMAR  -------------------------------
// SVD Line: 14004

unsigned short TIMER0_DMAR __AT (0x4000A04C);



// ------------------------------  Field Item: TIMER0_DMAR_DMAR  ----------------------------------
// SVD Line: 14013

//  <item> SFDITEM_FIELD__TIMER0_DMAR_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A04C) This register holds the value of the register for the current DMA operation </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER0_DMAR >> 0) & 0xFFFF), ((TIMER0_DMAR = (TIMER0_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_DMAR  ----------------------------------
// SVD Line: 14004

//  <rtree> SFDITEM_REG__TIMER0_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A04C) TIMER DMA address for full transfer register </i>
//    <loc> ( (unsigned short)((TIMER0_DMAR >> 0) & 0xFFFF), ((TIMER0_DMAR = (TIMER0_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_DMAR_DMAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_OR  --------------------------------
// SVD Line: 14022

unsigned short TIMER0_OR __AT (0x4000A050);



// ------------------------------  Field Item: TIMER0_OR_TI0_RMP  ---------------------------------
// SVD Line: 14031

//  <item> SFDITEM_FIELD__TIMER0_OR_TI0_RMP
//    <name> TI0_RMP </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000A050) Channel 0 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_OR >> 0) & 0xF), ((TIMER0_OR = (TIMER0_OR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_OR_TI3_RMP  ---------------------------------
// SVD Line: 14038

//  <item> SFDITEM_FIELD__TIMER0_OR_TI3_RMP
//    <name> TI3_RMP </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000A050) Channel 3 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_OR >> 4) & 0x7), ((TIMER0_OR = (TIMER0_OR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER0_OR_ETR_RMP  ---------------------------------
// SVD Line: 14045

//  <item> SFDITEM_FIELD__TIMER0_OR_ETR_RMP
//    <name> ETR_RMP </name>
//    <rw> 
//    <i> [Bits 10..7] RW (@ 0x4000A050) ETR remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER0_OR >> 7) & 0xF), ((TIMER0_OR = (TIMER0_OR & ~(0xFUL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIMER0_OR  -----------------------------------
// SVD Line: 14022

//  <rtree> SFDITEM_REG__TIMER0_OR
//    <name> OR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000A050) Option register </i>
//    <loc> ( (unsigned short)((TIMER0_OR >> 0) & 0xFFFF), ((TIMER0_OR = (TIMER0_OR & ~(0x7FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x7FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_OR_TI0_RMP </item>
//    <item> SFDITEM_FIELD__TIMER0_OR_TI3_RMP </item>
//    <item> SFDITEM_FIELD__TIMER0_OR_ETR_RMP </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER0  ------------------------------------
// SVD Line: 13194

//  <view> TIMER0
//    <name> TIMER0 </name>
//    <item> SFDITEM_REG__TIMER0_CR1 </item>
//    <item> SFDITEM_REG__TIMER0_CR2 </item>
//    <item> SFDITEM_REG__TIMER0_SMCR </item>
//    <item> SFDITEM_REG__TIMER0_DIER </item>
//    <item> SFDITEM_REG__TIMER0_SR </item>
//    <item> SFDITEM_REG__TIMER0_EGR </item>
//    <item> SFDITEM_REG__TIMER0_CCMR1 </item>
//    <item> SFDITEM_REG__TIMER0_CCMR2 </item>
//    <item> SFDITEM_REG__TIMER0_CCER </item>
//    <item> SFDITEM_REG__TIMER0_CNT </item>
//    <item> SFDITEM_REG__TIMER0_PSC </item>
//    <item> SFDITEM_REG__TIMER0_ARR </item>
//    <item> SFDITEM_REG__TIMER0_CCR0 </item>
//    <item> SFDITEM_REG__TIMER0_CCR1 </item>
//    <item> SFDITEM_REG__TIMER0_CCR2 </item>
//    <item> SFDITEM_REG__TIMER0_CCR3 </item>
//    <item> SFDITEM_REG__TIMER0_DCR </item>
//    <item> SFDITEM_REG__TIMER0_DMAR </item>
//    <item> SFDITEM_REG__TIMER0_OR </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIMER1_CR1  -------------------------------
// SVD Line: 14070

unsigned short TIMER1_CR1 __AT (0x4001A000);



// -------------------------------  Field Item: TIMER1_CR1_CEN  -----------------------------------
// SVD Line: 14079

//  <item> SFDITEM_FIELD__TIMER1_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_UDIS  ----------------------------------
// SVD Line: 14086

//  <item> SFDITEM_FIELD__TIMER1_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_URS  -----------------------------------
// SVD Line: 14093

//  <item> SFDITEM_FIELD__TIMER1_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A000) Update Request Source </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_OPM  -----------------------------------
// SVD Line: 14100

//  <item> SFDITEM_FIELD__TIMER1_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A000) One Pulse Mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_DIR  -----------------------------------
// SVD Line: 14107

//  <item> SFDITEM_FIELD__TIMER1_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A000) Count direction </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_CMS  -----------------------------------
// SVD Line: 14114

//  <item> SFDITEM_FIELD__TIMER1_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4001A000) counting mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CR1 >> 5) & 0x3), ((TIMER1_CR1 = (TIMER1_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_ARPE  ----------------------------------
// SVD Line: 14121

//  <item> SFDITEM_FIELD__TIMER1_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A000) shadow reload register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR1_CKD  -----------------------------------
// SVD Line: 14128

//  <item> SFDITEM_FIELD__TIMER1_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001A000) sampling clock divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CR1 >> 8) & 0x3), ((TIMER1_CR1 = (TIMER1_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CR1  -----------------------------------
// SVD Line: 14070

//  <rtree> SFDITEM_REG__TIMER1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A000) TIMER control register 1 </i>
//    <loc> ( (unsigned short)((TIMER1_CR1 >> 0) & 0xFFFF), ((TIMER1_CR1 = (TIMER1_CR1 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIMER1_CR1_CKD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_CR2  -------------------------------
// SVD Line: 14137

unsigned short TIMER1_CR2 __AT (0x4001A004);



// -------------------------------  Field Item: TIMER1_CR2_CCDS  ----------------------------------
// SVD Line: 14146

//  <item> SFDITEM_FIELD__TIMER1_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A004) DMA request source selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR2_MMS  -----------------------------------
// SVD Line: 14153

//  <item> SFDITEM_FIELD__TIMER1_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001A004) mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CR2 >> 4) & 0x7), ((TIMER1_CR2 = (TIMER1_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_CR2_TI0S  ----------------------------------
// SVD Line: 14160

//  <item> SFDITEM_FIELD__TIMER1_CR2_TI0S
//    <name> TI0S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A004) channel 0/1 source Select </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CR2 ) </loc>
//      <o.7..7> TI0S
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CR2  -----------------------------------
// SVD Line: 14137

//  <rtree> SFDITEM_REG__TIMER1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A004) TIMER control register 2 </i>
//    <loc> ( (unsigned short)((TIMER1_CR2 >> 0) & 0xFFFF), ((TIMER1_CR2 = (TIMER1_CR2 & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIMER1_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIMER1_CR2_TI0S </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_SMCR  -------------------------------
// SVD Line: 14169

unsigned short TIMER1_SMCR __AT (0x4001A008);



// -------------------------------  Field Item: TIMER1_SMCR_SMS  ----------------------------------
// SVD Line: 14178

//  <item> SFDITEM_FIELD__TIMER1_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4001A008) slave mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_SMCR >> 0) & 0x7), ((TIMER1_SMCR = (TIMER1_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SMCR_TS  -----------------------------------
// SVD Line: 14185

//  <item> SFDITEM_FIELD__TIMER1_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001A008) Trigger source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_SMCR >> 4) & 0x7), ((TIMER1_SMCR = (TIMER1_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SMCR_MSM  ----------------------------------
// SVD Line: 14192

//  <item> SFDITEM_FIELD__TIMER1_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A008) Master-slave synchronization mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SMCR_ETF  ----------------------------------
// SVD Line: 14199

//  <item> SFDITEM_FIELD__TIMER1_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001A008) External trigger input filter configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_SMCR >> 8) & 0xF), ((TIMER1_SMCR = (TIMER1_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_SMCR_ETPS  ----------------------------------
// SVD Line: 14206

//  <item> SFDITEM_FIELD__TIMER1_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4001A008) External trigger input frequency division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_SMCR >> 12) & 0x3), ((TIMER1_SMCR = (TIMER1_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SMCR_ECE  ----------------------------------
// SVD Line: 14213

//  <item> SFDITEM_FIELD__TIMER1_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001A008) External clock mode 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SMCR_ETP  ----------------------------------
// SVD Line: 14220

//  <item> SFDITEM_FIELD__TIMER1_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001A008) External trigger polarity selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_SMCR  ----------------------------------
// SVD Line: 14169

//  <rtree> SFDITEM_REG__TIMER1_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A008) TIMER slave Mode Control register </i>
//    <loc> ( (unsigned short)((TIMER1_SMCR >> 0) & 0xFFFF), ((TIMER1_SMCR = (TIMER1_SMCR & ~(0xFFF7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_SMS </item>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_TS </item>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIMER1_SMCR_ETP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_DIER  -------------------------------
// SVD Line: 14229

unsigned short TIMER1_DIER __AT (0x4001A00C);



// -------------------------------  Field Item: TIMER1_DIER_UIE  ----------------------------------
// SVD Line: 14238

//  <item> SFDITEM_FIELD__TIMER1_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A00C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC0IE  ---------------------------------
// SVD Line: 14245

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC0IE
//    <name> CC0IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A00C) Channel 0 event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.1..1> CC0IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC1IE  ---------------------------------
// SVD Line: 14252

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A00C) Capture/Compare 1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.2..2> CC1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC2IE  ---------------------------------
// SVD Line: 14259

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A00C) Capture/Compare 2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.3..3> CC2IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC3IE  ---------------------------------
// SVD Line: 14266

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A00C) Capture/Compare 3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.4..4> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_DIER_TIE  ----------------------------------
// SVD Line: 14273

//  <item> SFDITEM_FIELD__TIMER1_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A00C) Trigger event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_DIER_UDE  ----------------------------------
// SVD Line: 14280

//  <item> SFDITEM_FIELD__TIMER1_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001A00C) Update event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC0DE  ---------------------------------
// SVD Line: 14287

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC0DE
//    <name> CC0DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001A00C) Channel 0 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.9..9> CC0DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC1DE  ---------------------------------
// SVD Line: 14294

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001A00C) Channel 1 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.10..10> CC1DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC2DE  ---------------------------------
// SVD Line: 14301

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001A00C) Channel 2 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.11..11> CC2DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_DIER_CC3DE  ---------------------------------
// SVD Line: 14308

//  <item> SFDITEM_FIELD__TIMER1_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001A00C) Channel 3 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.12..12> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_DIER_TDE  ----------------------------------
// SVD Line: 14315

//  <item> SFDITEM_FIELD__TIMER1_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001A00C) Trigger event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_DIER  ----------------------------------
// SVD Line: 14229

//  <rtree> SFDITEM_REG__TIMER1_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A00C) TIMER DMA/interrupt enable register </i>
//    <loc> ( (unsigned short)((TIMER1_DIER >> 0) & 0xFFFF), ((TIMER1_DIER = (TIMER1_DIER & ~(0x5F5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DIER_UIE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC0IE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC0DE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIMER1_DIER_TDE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_SR  --------------------------------
// SVD Line: 14324

unsigned short TIMER1_SR __AT (0x4001A010);



// --------------------------------  Field Item: TIMER1_SR_UIF  -----------------------------------
// SVD Line: 14333

//  <item> SFDITEM_FIELD__TIMER1_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC0IF  ----------------------------------
// SVD Line: 14340

//  <item> SFDITEM_FIELD__TIMER1_SR_CC0IF
//    <name> CC0IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A010) Capture/Compare 0 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.1..1> CC0IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC1IF  ----------------------------------
// SVD Line: 14347

//  <item> SFDITEM_FIELD__TIMER1_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A010) Capture/Compare 1 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.2..2> CC1IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC2IF  ----------------------------------
// SVD Line: 14354

//  <item> SFDITEM_FIELD__TIMER1_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A010) Capture/Compare 2 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.3..3> CC2IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC3IF  ----------------------------------
// SVD Line: 14361

//  <item> SFDITEM_FIELD__TIMER1_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A010) Capture/Compare 3 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.4..4> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_SR_TIF  -----------------------------------
// SVD Line: 14368

//  <item> SFDITEM_FIELD__TIMER1_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A010) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC0OF  ----------------------------------
// SVD Line: 14375

//  <item> SFDITEM_FIELD__TIMER1_SR_CC0OF
//    <name> CC0OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001A010) Capture 0 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.9..9> CC0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC1OF  ----------------------------------
// SVD Line: 14382

//  <item> SFDITEM_FIELD__TIMER1_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001A010) Capture 1 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.10..10> CC1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC2OF  ----------------------------------
// SVD Line: 14389

//  <item> SFDITEM_FIELD__TIMER1_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001A010) Capture 2 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.11..11> CC2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_SR_CC3OF  ----------------------------------
// SVD Line: 14396

//  <item> SFDITEM_FIELD__TIMER1_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001A010) Capture 3 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_SR ) </loc>
//      <o.12..12> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIMER1_SR  -----------------------------------
// SVD Line: 14324

//  <rtree> SFDITEM_REG__TIMER1_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A010) status register </i>
//    <loc> ( (unsigned short)((TIMER1_SR >> 0) & 0xFFFF), ((TIMER1_SR = (TIMER1_SR & ~(0x1E5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1E5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_SR_UIF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC0IF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC0OF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIMER1_SR_CC3OF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_EGR  -------------------------------
// SVD Line: 14405

unsigned short TIMER1_EGR __AT (0x4001A014);



// --------------------------------  Field Item: TIMER1_EGR_UG  -----------------------------------
// SVD Line: 14414

//  <item> SFDITEM_FIELD__TIMER1_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001A014) Update event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_EGR_CC0G  ----------------------------------
// SVD Line: 14421

//  <item> SFDITEM_FIELD__TIMER1_EGR_CC0G
//    <name> CC0G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4001A014) Channel 0 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_EGR ) </loc>
//      <o.1..1> CC0G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_EGR_CC1G  ----------------------------------
// SVD Line: 14428

//  <item> SFDITEM_FIELD__TIMER1_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4001A014) Channel 1 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_EGR ) </loc>
//      <o.2..2> CC1G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_EGR_CC2G  ----------------------------------
// SVD Line: 14435

//  <item> SFDITEM_FIELD__TIMER1_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4001A014) Channel 2 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_EGR ) </loc>
//      <o.3..3> CC2G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_EGR_CC3G  ----------------------------------
// SVD Line: 14442

//  <item> SFDITEM_FIELD__TIMER1_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4001A014) Channel 3 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_EGR ) </loc>
//      <o.4..4> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER1_EGR_TG  -----------------------------------
// SVD Line: 14449

//  <item> SFDITEM_FIELD__TIMER1_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4001A014) Trigger event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_EGR  -----------------------------------
// SVD Line: 14405

//  <rtree> SFDITEM_REG__TIMER1_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001A014) TIMER event generation register </i>
//    <loc> ( (unsigned short)((TIMER1_EGR >> 0) & 0xFFFF), ((TIMER1_EGR = (TIMER1_EGR & ~(0x5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_EGR_UG </item>
//    <item> SFDITEM_FIELD__TIMER1_EGR_CC0G </item>
//    <item> SFDITEM_FIELD__TIMER1_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIMER1_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIMER1_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIMER1_EGR_TG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCMR1  ------------------------------
// SVD Line: 14458

unsigned short TIMER1_CCMR1 __AT (0x4001A018);



// ------------------------------  Field Item: TIMER1_CCMR1_CC0S  ---------------------------------
// SVD Line: 14467

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_CC0S
//    <name> CC0S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001A018) Channel 0 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR1 >> 0) & 0x3), ((TIMER1_CCMR1 = (TIMER1_CCMR1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR1_OC0FE  ---------------------------------
// SVD Line: 14474

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0FE
//    <name> OC0FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A018) Channel 0 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR1 ) </loc>
//      <o.2..2> OC0FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR1_OC0PE  ---------------------------------
// SVD Line: 14481

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0PE
//    <name> OC0PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A018) Channel 0 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR1 ) </loc>
//      <o.3..3> OC0PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCMR1_OC0M  ---------------------------------
// SVD Line: 14488

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0M
//    <name> OC0M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001A018) Channel 0 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR1 >> 4) & 0x7), ((TIMER1_CCMR1 = (TIMER1_CCMR1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR1_OC0CE  ---------------------------------
// SVD Line: 14495

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0CE
//    <name> OC0CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A018) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR1 ) </loc>
//      <o.7..7> OC0CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCMR1_CC1S  ---------------------------------
// SVD Line: 14502

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001A018) Channel 1 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR1 >> 8) & 0x3), ((TIMER1_CCMR1 = (TIMER1_CCMR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR1_OC1FE  ---------------------------------
// SVD Line: 14509

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001A018) Channel 1 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR1 ) </loc>
//      <o.10..10> OC1FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR1_OC1PE  ---------------------------------
// SVD Line: 14516

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001A018) Channel 1 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR1 ) </loc>
//      <o.11..11> OC1PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCMR1_OC1M  ---------------------------------
// SVD Line: 14523

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4001A018) Channel 1 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR1 >> 12) & 0x7), ((TIMER1_CCMR1 = (TIMER1_CCMR1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR1_OC1CE  ---------------------------------
// SVD Line: 14530

//  <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001A018) Channel 1 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR1 ) </loc>
//      <o.15..15> OC1CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_CCMR1  ----------------------------------
// SVD Line: 14458

//  <rtree> SFDITEM_REG__TIMER1_CCMR1
//    <name> CCMR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A018) capture/compare mode register 1 </i>
//    <loc> ( (unsigned short)((TIMER1_CCMR1 >> 0) & 0xFFFF), ((TIMER1_CCMR1 = (TIMER1_CCMR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_CC0S </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0FE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0PE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0M </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC0CE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_CC1S </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1FE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1PE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1M </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR1_OC1CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCMR2  ------------------------------
// SVD Line: 14539

unsigned short TIMER1_CCMR2 __AT (0x4001A01C);



// ------------------------------  Field Item: TIMER1_CCMR2_CC2S  ---------------------------------
// SVD Line: 14548

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001A01C) Channel 2 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR2 >> 0) & 0x3), ((TIMER1_CCMR2 = (TIMER1_CCMR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR2_OC2FE  ---------------------------------
// SVD Line: 14555

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A01C) Channel 2 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR2 ) </loc>
//      <o.2..2> OC2FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR2_OC2PE  ---------------------------------
// SVD Line: 14562

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A01C) Channel 2 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR2 ) </loc>
//      <o.3..3> OC2PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCMR2_OC2M  ---------------------------------
// SVD Line: 14569

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001A01C) Channel 2 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR2 >> 4) & 0x7), ((TIMER1_CCMR2 = (TIMER1_CCMR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR2_OC2CE  ---------------------------------
// SVD Line: 14576

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A01C) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR2 ) </loc>
//      <o.7..7> OC2CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCMR2_CC3S  ---------------------------------
// SVD Line: 14583

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001A01C) Channel 3 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR2 >> 8) & 0x3), ((TIMER1_CCMR2 = (TIMER1_CCMR2 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR2_OC3FE  ---------------------------------
// SVD Line: 14590

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001A01C) Channel 3 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR2 ) </loc>
//      <o.10..10> OC3FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR2_OC3PE  ---------------------------------
// SVD Line: 14597

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001A01C) Channel 3 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR2 ) </loc>
//      <o.11..11> OC3PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCMR2_OC3M  ---------------------------------
// SVD Line: 14604

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4001A01C) Channel 3 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_CCMR2 >> 12) & 0x7), ((TIMER1_CCMR2 = (TIMER1_CCMR2 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_CCMR2_OC3CE  ---------------------------------
// SVD Line: 14611

//  <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001A01C) Channel 3 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCMR2 ) </loc>
//      <o.15..15> OC3CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER1_CCMR2  ----------------------------------
// SVD Line: 14539

//  <rtree> SFDITEM_REG__TIMER1_CCMR2
//    <name> CCMR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A01C) capture/compare mode register 2 </i>
//    <loc> ( (unsigned short)((TIMER1_CCMR2 >> 0) & 0xFFFF), ((TIMER1_CCMR2 = (TIMER1_CCMR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_CC2S </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2FE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2PE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2M </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC2CE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_CC3S </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3FE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3PE </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3M </item>
//    <item> SFDITEM_FIELD__TIMER1_CCMR2_OC3CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCER  -------------------------------
// SVD Line: 14620

unsigned short TIMER1_CCER __AT (0x4001A020);



// ------------------------------  Field Item: TIMER1_CCER_CC0E  ----------------------------------
// SVD Line: 14629

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC0E
//    <name> CC0E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A020) Channel 0 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.0..0> CC0E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC0P  ----------------------------------
// SVD Line: 14636

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC0P
//    <name> CC0P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A020) Channel 0 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.1..1> CC0P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC0NP  ---------------------------------
// SVD Line: 14643

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC0NP
//    <name> CC0NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A020) Channel 0 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.3..3> CC0NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC1E  ----------------------------------
// SVD Line: 14650

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A020) Channel 1 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.4..4> CC1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC1P  ----------------------------------
// SVD Line: 14657

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A020) Channel 1 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.5..5> CC1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC1NP  ---------------------------------
// SVD Line: 14664

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A020) Channel 1 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.7..7> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC2E  ----------------------------------
// SVD Line: 14671

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001A020) Channel 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.8..8> CC2E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC2P  ----------------------------------
// SVD Line: 14678

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001A020) Channel 2 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.9..9> CC2P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC2NP  ---------------------------------
// SVD Line: 14685

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001A020) Channel 2 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.11..11> CC2NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC3E  ----------------------------------
// SVD Line: 14692

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001A020) Channel 3 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.12..12> CC3E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC3P  ----------------------------------
// SVD Line: 14699

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001A020) Channel 3 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.13..13> CC3P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER1_CCER_CC3NP  ---------------------------------
// SVD Line: 14706

//  <item> SFDITEM_FIELD__TIMER1_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001A020) Channel 3 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER1_CCER ) </loc>
//      <o.15..15> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CCER  ----------------------------------
// SVD Line: 14620

//  <rtree> SFDITEM_REG__TIMER1_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A020) TIMER capture/compare enable register </i>
//    <loc> ( (unsigned short)((TIMER1_CCER >> 0) & 0xFFFF), ((TIMER1_CCER = (TIMER1_CCER & ~(0xBBBBUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xBBBB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC0E </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC0P </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC0NP </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC1E </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIMER1_CCER_CC3NP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_CNT  -------------------------------
// SVD Line: 14715

unsigned short TIMER1_CNT __AT (0x4001A024);



// -------------------------------  Field Item: TIMER1_CNT_CNT  -----------------------------------
// SVD Line: 14724

//  <item> SFDITEM_FIELD__TIMER1_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A024) Count value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CNT >> 0) & 0xFFFF), ((TIMER1_CNT = (TIMER1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CNT  -----------------------------------
// SVD Line: 14715

//  <rtree> SFDITEM_REG__TIMER1_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A024) TIMER counter register </i>
//    <loc> ( (unsigned short)((TIMER1_CNT >> 0) & 0xFFFF), ((TIMER1_CNT = (TIMER1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_PSC  -------------------------------
// SVD Line: 14733

unsigned short TIMER1_PSC __AT (0x4001A028);



// -------------------------------  Field Item: TIMER1_PSC_PSC  -----------------------------------
// SVD Line: 14742

//  <item> SFDITEM_FIELD__TIMER1_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_PSC >> 0) & 0xFFFF), ((TIMER1_PSC = (TIMER1_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_PSC  -----------------------------------
// SVD Line: 14733

//  <rtree> SFDITEM_REG__TIMER1_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A028) TIMER prescaler register </i>
//    <loc> ( (unsigned short)((TIMER1_PSC >> 0) & 0xFFFF), ((TIMER1_PSC = (TIMER1_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_ARR  -------------------------------
// SVD Line: 14751

unsigned int TIMER1_ARR __AT (0x4001A02C);



// -------------------------------  Field Item: TIMER1_ARR_ARR  -----------------------------------
// SVD Line: 14760

//  <item> SFDITEM_FIELD__TIMER1_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A02C) Counter reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_ARR >> 0) & 0xFFFF), ((TIMER1_ARR = (TIMER1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_ARR  -----------------------------------
// SVD Line: 14751

//  <rtree> SFDITEM_REG__TIMER1_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A02C) TIMER auto-reload register </i>
//    <loc> ( (unsigned int)((TIMER1_ARR >> 0) & 0xFFFFFFFF), ((TIMER1_ARR = (TIMER1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_ARR_ARR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCR0  -------------------------------
// SVD Line: 14769

unsigned short TIMER1_CCR0 __AT (0x4001A034);



// -------------------------------  Field Item: TIMER1_CCR0_CCR  ----------------------------------
// SVD Line: 14778

//  <item> SFDITEM_FIELD__TIMER1_CCR0_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A034) Channel 0 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CCR0 >> 0) & 0xFFFF), ((TIMER1_CCR0 = (TIMER1_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CCR0  ----------------------------------
// SVD Line: 14769

//  <rtree> SFDITEM_REG__TIMER1_CCR0
//    <name> CCR0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A034) Channel 0 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER1_CCR0 >> 0) & 0xFFFF), ((TIMER1_CCR0 = (TIMER1_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCR0_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCR1  -------------------------------
// SVD Line: 14787

unsigned short TIMER1_CCR1 __AT (0x4001A038);



// -------------------------------  Field Item: TIMER1_CCR1_CCR  ----------------------------------
// SVD Line: 14796

//  <item> SFDITEM_FIELD__TIMER1_CCR1_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A038) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CCR1 >> 0) & 0xFFFF), ((TIMER1_CCR1 = (TIMER1_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CCR1  ----------------------------------
// SVD Line: 14787

//  <rtree> SFDITEM_REG__TIMER1_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A038) Channel 1 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER1_CCR1 >> 0) & 0xFFFF), ((TIMER1_CCR1 = (TIMER1_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCR1_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCR2  -------------------------------
// SVD Line: 14805

unsigned short TIMER1_CCR2 __AT (0x4001A03C);



// -------------------------------  Field Item: TIMER1_CCR2_CCR  ----------------------------------
// SVD Line: 14814

//  <item> SFDITEM_FIELD__TIMER1_CCR2_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A03C) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CCR2 >> 0) & 0xFFFF), ((TIMER1_CCR2 = (TIMER1_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CCR2  ----------------------------------
// SVD Line: 14805

//  <rtree> SFDITEM_REG__TIMER1_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A03C) Channel 2 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER1_CCR2 >> 0) & 0xFFFF), ((TIMER1_CCR2 = (TIMER1_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCR2_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CCR3  -------------------------------
// SVD Line: 14823

unsigned short TIMER1_CCR3 __AT (0x4001A040);



// -------------------------------  Field Item: TIMER1_CCR3_CCR  ----------------------------------
// SVD Line: 14832

//  <item> SFDITEM_FIELD__TIMER1_CCR3_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A040) Channel 3 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_CCR3 >> 0) & 0xFFFF), ((TIMER1_CCR3 = (TIMER1_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CCR3  ----------------------------------
// SVD Line: 14823

//  <rtree> SFDITEM_REG__TIMER1_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A040) Channel 3 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER1_CCR3 >> 0) & 0xFFFF), ((TIMER1_CCR3 = (TIMER1_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CCR3_CCR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_DCR  -------------------------------
// SVD Line: 14841

unsigned short TIMER1_DCR __AT (0x4001A048);



// -------------------------------  Field Item: TIMER1_DCR_DBA  -----------------------------------
// SVD Line: 14850

//  <item> SFDITEM_FIELD__TIMER1_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4001A048) DMA continuously reads and writes base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_DCR >> 0) & 0x1F), ((TIMER1_DCR = (TIMER1_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_DCR_DBL  -----------------------------------
// SVD Line: 14857

//  <item> SFDITEM_FIELD__TIMER1_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4001A048) DMA continuous read and write length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_DCR >> 8) & 0x1F), ((TIMER1_DCR = (TIMER1_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_DCR  -----------------------------------
// SVD Line: 14841

//  <rtree> SFDITEM_REG__TIMER1_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A048) DMA control register </i>
//    <loc> ( (unsigned short)((TIMER1_DCR >> 0) & 0xFFFF), ((TIMER1_DCR = (TIMER1_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DCR_DBA </item>
//    <item> SFDITEM_FIELD__TIMER1_DCR_DBL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_DMAR  -------------------------------
// SVD Line: 14866

unsigned short TIMER1_DMAR __AT (0x4001A04C);



// ------------------------------  Field Item: TIMER1_DMAR_DMAR  ----------------------------------
// SVD Line: 14875

//  <item> SFDITEM_FIELD__TIMER1_DMAR_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A04C) This register holds the value of the register for the current DMA operation </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER1_DMAR >> 0) & 0xFFFF), ((TIMER1_DMAR = (TIMER1_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_DMAR  ----------------------------------
// SVD Line: 14866

//  <rtree> SFDITEM_REG__TIMER1_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A04C) TIMER DMA address for full transfer register </i>
//    <loc> ( (unsigned short)((TIMER1_DMAR >> 0) & 0xFFFF), ((TIMER1_DMAR = (TIMER1_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_DMAR_DMAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_OR  --------------------------------
// SVD Line: 14884

unsigned short TIMER1_OR __AT (0x4001A050);



// ------------------------------  Field Item: TIMER1_OR_TI2_RMP  ---------------------------------
// SVD Line: 14893

//  <item> SFDITEM_FIELD__TIMER1_OR_TI2_RMP
//    <name> TI2_RMP </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001A050) Channel 2 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER1_OR >> 0) & 0x3), ((TIMER1_OR = (TIMER1_OR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIMER1_OR  -----------------------------------
// SVD Line: 14884

//  <rtree> SFDITEM_REG__TIMER1_OR
//    <name> OR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001A050) Option register </i>
//    <loc> ( (unsigned short)((TIMER1_OR >> 0) & 0xFFFF), ((TIMER1_OR = (TIMER1_OR & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_OR_TI2_RMP </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER1  ------------------------------------
// SVD Line: 14056

//  <view> TIMER1
//    <name> TIMER1 </name>
//    <item> SFDITEM_REG__TIMER1_CR1 </item>
//    <item> SFDITEM_REG__TIMER1_CR2 </item>
//    <item> SFDITEM_REG__TIMER1_SMCR </item>
//    <item> SFDITEM_REG__TIMER1_DIER </item>
//    <item> SFDITEM_REG__TIMER1_SR </item>
//    <item> SFDITEM_REG__TIMER1_EGR </item>
//    <item> SFDITEM_REG__TIMER1_CCMR1 </item>
//    <item> SFDITEM_REG__TIMER1_CCMR2 </item>
//    <item> SFDITEM_REG__TIMER1_CCER </item>
//    <item> SFDITEM_REG__TIMER1_CNT </item>
//    <item> SFDITEM_REG__TIMER1_PSC </item>
//    <item> SFDITEM_REG__TIMER1_ARR </item>
//    <item> SFDITEM_REG__TIMER1_CCR0 </item>
//    <item> SFDITEM_REG__TIMER1_CCR1 </item>
//    <item> SFDITEM_REG__TIMER1_CCR2 </item>
//    <item> SFDITEM_REG__TIMER1_CCR3 </item>
//    <item> SFDITEM_REG__TIMER1_DCR </item>
//    <item> SFDITEM_REG__TIMER1_DMAR </item>
//    <item> SFDITEM_REG__TIMER1_OR </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIMER2_CR1  -------------------------------
// SVD Line: 14918

unsigned short TIMER2_CR1 __AT (0x4000B000);



// -------------------------------  Field Item: TIMER2_CR1_CEN  -----------------------------------
// SVD Line: 14927

//  <item> SFDITEM_FIELD__TIMER2_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_UDIS  ----------------------------------
// SVD Line: 14934

//  <item> SFDITEM_FIELD__TIMER2_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_URS  -----------------------------------
// SVD Line: 14941

//  <item> SFDITEM_FIELD__TIMER2_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000B000) Update Request Source </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_OPM  -----------------------------------
// SVD Line: 14948

//  <item> SFDITEM_FIELD__TIMER2_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B000) One Pulse Mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_DIR  -----------------------------------
// SVD Line: 14955

//  <item> SFDITEM_FIELD__TIMER2_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000B000) Count direction </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_CMS  -----------------------------------
// SVD Line: 14962

//  <item> SFDITEM_FIELD__TIMER2_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4000B000) counting mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CR1 >> 5) & 0x3), ((TIMER2_CR1 = (TIMER2_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_ARPE  ----------------------------------
// SVD Line: 14969

//  <item> SFDITEM_FIELD__TIMER2_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B000) shadow reload register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR1_CKD  -----------------------------------
// SVD Line: 14976

//  <item> SFDITEM_FIELD__TIMER2_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000B000) sampling clock divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CR1 >> 8) & 0x3), ((TIMER2_CR1 = (TIMER2_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CR1  -----------------------------------
// SVD Line: 14918

//  <rtree> SFDITEM_REG__TIMER2_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B000) TIMER control register 1 </i>
//    <loc> ( (unsigned short)((TIMER2_CR1 >> 0) & 0xFFFF), ((TIMER2_CR1 = (TIMER2_CR1 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIMER2_CR1_CKD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_CR2  -------------------------------
// SVD Line: 14985

unsigned short TIMER2_CR2 __AT (0x4000B004);



// -------------------------------  Field Item: TIMER2_CR2_CCDS  ----------------------------------
// SVD Line: 14994

//  <item> SFDITEM_FIELD__TIMER2_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B004) DMA request source selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR2_MMS  -----------------------------------
// SVD Line: 15001

//  <item> SFDITEM_FIELD__TIMER2_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000B004) mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CR2 >> 4) & 0x7), ((TIMER2_CR2 = (TIMER2_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_CR2_TI0S  ----------------------------------
// SVD Line: 15008

//  <item> SFDITEM_FIELD__TIMER2_CR2_TI0S
//    <name> TI0S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B004) channel 0/1 source Select </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CR2 ) </loc>
//      <o.7..7> TI0S
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CR2  -----------------------------------
// SVD Line: 14985

//  <rtree> SFDITEM_REG__TIMER2_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B004) TIMER control register 2 </i>
//    <loc> ( (unsigned short)((TIMER2_CR2 >> 0) & 0xFFFF), ((TIMER2_CR2 = (TIMER2_CR2 & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIMER2_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIMER2_CR2_TI0S </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_SMCR  -------------------------------
// SVD Line: 15017

unsigned short TIMER2_SMCR __AT (0x4000B008);



// -------------------------------  Field Item: TIMER2_SMCR_SMS  ----------------------------------
// SVD Line: 15026

//  <item> SFDITEM_FIELD__TIMER2_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000B008) slave mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_SMCR >> 0) & 0x7), ((TIMER2_SMCR = (TIMER2_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SMCR_TS  -----------------------------------
// SVD Line: 15033

//  <item> SFDITEM_FIELD__TIMER2_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000B008) Trigger source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_SMCR >> 4) & 0x7), ((TIMER2_SMCR = (TIMER2_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SMCR_MSM  ----------------------------------
// SVD Line: 15040

//  <item> SFDITEM_FIELD__TIMER2_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B008) Master-slave synchronization mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SMCR_ETF  ----------------------------------
// SVD Line: 15047

//  <item> SFDITEM_FIELD__TIMER2_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4000B008) External trigger input filter configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_SMCR >> 8) & 0xF), ((TIMER2_SMCR = (TIMER2_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_SMCR_ETPS  ----------------------------------
// SVD Line: 15054

//  <item> SFDITEM_FIELD__TIMER2_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4000B008) External trigger input frequency division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_SMCR >> 12) & 0x3), ((TIMER2_SMCR = (TIMER2_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SMCR_ECE  ----------------------------------
// SVD Line: 15061

//  <item> SFDITEM_FIELD__TIMER2_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000B008) External clock mode 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SMCR_ETP  ----------------------------------
// SVD Line: 15068

//  <item> SFDITEM_FIELD__TIMER2_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000B008) External trigger polarity selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_SMCR  ----------------------------------
// SVD Line: 15017

//  <rtree> SFDITEM_REG__TIMER2_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B008) TIMER slave Mode Control register </i>
//    <loc> ( (unsigned short)((TIMER2_SMCR >> 0) & 0xFFFF), ((TIMER2_SMCR = (TIMER2_SMCR & ~(0xFFF7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_SMS </item>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_TS </item>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIMER2_SMCR_ETP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_DIER  -------------------------------
// SVD Line: 15077

unsigned short TIMER2_DIER __AT (0x4000B00C);



// -------------------------------  Field Item: TIMER2_DIER_UIE  ----------------------------------
// SVD Line: 15086

//  <item> SFDITEM_FIELD__TIMER2_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B00C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC0IE  ---------------------------------
// SVD Line: 15093

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC0IE
//    <name> CC0IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B00C) Channel 0 event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.1..1> CC0IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC1IE  ---------------------------------
// SVD Line: 15100

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000B00C) Capture/Compare 1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.2..2> CC1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC2IE  ---------------------------------
// SVD Line: 15107

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B00C) Capture/Compare 2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.3..3> CC2IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC3IE  ---------------------------------
// SVD Line: 15114

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000B00C) Capture/Compare 3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.4..4> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_DIER_TIE  ----------------------------------
// SVD Line: 15121

//  <item> SFDITEM_FIELD__TIMER2_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000B00C) Trigger event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_DIER_UDE  ----------------------------------
// SVD Line: 15128

//  <item> SFDITEM_FIELD__TIMER2_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000B00C) Update event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC0DE  ---------------------------------
// SVD Line: 15135

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC0DE
//    <name> CC0DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000B00C) Channel 0 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.9..9> CC0DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC1DE  ---------------------------------
// SVD Line: 15142

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000B00C) Channel 1 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.10..10> CC1DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC2DE  ---------------------------------
// SVD Line: 15149

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000B00C) Channel 2 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.11..11> CC2DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_DIER_CC3DE  ---------------------------------
// SVD Line: 15156

//  <item> SFDITEM_FIELD__TIMER2_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000B00C) Channel 3 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.12..12> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_DIER_TDE  ----------------------------------
// SVD Line: 15163

//  <item> SFDITEM_FIELD__TIMER2_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000B00C) Trigger event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_DIER  ----------------------------------
// SVD Line: 15077

//  <rtree> SFDITEM_REG__TIMER2_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B00C) TIMER DMA/interrupt enable register </i>
//    <loc> ( (unsigned short)((TIMER2_DIER >> 0) & 0xFFFF), ((TIMER2_DIER = (TIMER2_DIER & ~(0x5F5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_DIER_UIE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC0IE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC0DE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIMER2_DIER_TDE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_SR  --------------------------------
// SVD Line: 15172

unsigned short TIMER2_SR __AT (0x4000B010);



// --------------------------------  Field Item: TIMER2_SR_UIF  -----------------------------------
// SVD Line: 15181

//  <item> SFDITEM_FIELD__TIMER2_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC0IF  ----------------------------------
// SVD Line: 15188

//  <item> SFDITEM_FIELD__TIMER2_SR_CC0IF
//    <name> CC0IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B010) Capture/Compare 0 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.1..1> CC0IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC1IF  ----------------------------------
// SVD Line: 15195

//  <item> SFDITEM_FIELD__TIMER2_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000B010) Capture/Compare 1 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.2..2> CC1IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC2IF  ----------------------------------
// SVD Line: 15202

//  <item> SFDITEM_FIELD__TIMER2_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B010) Capture/Compare 2 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.3..3> CC2IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC3IF  ----------------------------------
// SVD Line: 15209

//  <item> SFDITEM_FIELD__TIMER2_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000B010) Capture/Compare 3 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.4..4> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER2_SR_TIF  -----------------------------------
// SVD Line: 15216

//  <item> SFDITEM_FIELD__TIMER2_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000B010) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC0OF  ----------------------------------
// SVD Line: 15223

//  <item> SFDITEM_FIELD__TIMER2_SR_CC0OF
//    <name> CC0OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000B010) Capture 0 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.9..9> CC0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC1OF  ----------------------------------
// SVD Line: 15230

//  <item> SFDITEM_FIELD__TIMER2_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000B010) Capture 1 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.10..10> CC1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC2OF  ----------------------------------
// SVD Line: 15237

//  <item> SFDITEM_FIELD__TIMER2_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000B010) Capture 2 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.11..11> CC2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_SR_CC3OF  ----------------------------------
// SVD Line: 15244

//  <item> SFDITEM_FIELD__TIMER2_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000B010) Capture 3 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_SR ) </loc>
//      <o.12..12> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIMER2_SR  -----------------------------------
// SVD Line: 15172

//  <rtree> SFDITEM_REG__TIMER2_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B010) status register </i>
//    <loc> ( (unsigned short)((TIMER2_SR >> 0) & 0xFFFF), ((TIMER2_SR = (TIMER2_SR & ~(0x1E5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1E5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_SR_UIF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC0IF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC0OF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIMER2_SR_CC3OF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_EGR  -------------------------------
// SVD Line: 15253

unsigned short TIMER2_EGR __AT (0x4000B014);



// --------------------------------  Field Item: TIMER2_EGR_UG  -----------------------------------
// SVD Line: 15262

//  <item> SFDITEM_FIELD__TIMER2_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000B014) Update event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_EGR_CC0G  ----------------------------------
// SVD Line: 15269

//  <item> SFDITEM_FIELD__TIMER2_EGR_CC0G
//    <name> CC0G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000B014) Channel 0 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_EGR ) </loc>
//      <o.1..1> CC0G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_EGR_CC1G  ----------------------------------
// SVD Line: 15276

//  <item> SFDITEM_FIELD__TIMER2_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000B014) Channel 1 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_EGR ) </loc>
//      <o.2..2> CC1G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_EGR_CC2G  ----------------------------------
// SVD Line: 15283

//  <item> SFDITEM_FIELD__TIMER2_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000B014) Channel 2 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_EGR ) </loc>
//      <o.3..3> CC2G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_EGR_CC3G  ----------------------------------
// SVD Line: 15290

//  <item> SFDITEM_FIELD__TIMER2_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000B014) Channel 3 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_EGR ) </loc>
//      <o.4..4> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER2_EGR_TG  -----------------------------------
// SVD Line: 15297

//  <item> SFDITEM_FIELD__TIMER2_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000B014) Trigger event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_EGR  -----------------------------------
// SVD Line: 15253

//  <rtree> SFDITEM_REG__TIMER2_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4000B014) TIMER event generation register </i>
//    <loc> ( (unsigned short)((TIMER2_EGR >> 0) & 0xFFFF), ((TIMER2_EGR = (TIMER2_EGR & ~(0x5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_EGR_UG </item>
//    <item> SFDITEM_FIELD__TIMER2_EGR_CC0G </item>
//    <item> SFDITEM_FIELD__TIMER2_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIMER2_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIMER2_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIMER2_EGR_TG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCMR1  ------------------------------
// SVD Line: 15306

unsigned short TIMER2_CCMR1 __AT (0x4000B018);



// ------------------------------  Field Item: TIMER2_CCMR1_CC0S  ---------------------------------
// SVD Line: 15315

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_CC0S
//    <name> CC0S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000B018) Channel 0 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR1 >> 0) & 0x3), ((TIMER2_CCMR1 = (TIMER2_CCMR1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR1_OC0FE  ---------------------------------
// SVD Line: 15322

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0FE
//    <name> OC0FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000B018) Channel 0 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR1 ) </loc>
//      <o.2..2> OC0FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR1_OC0PE  ---------------------------------
// SVD Line: 15329

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0PE
//    <name> OC0PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B018) Channel 0 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR1 ) </loc>
//      <o.3..3> OC0PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCMR1_OC0M  ---------------------------------
// SVD Line: 15336

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0M
//    <name> OC0M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000B018) Channel 0 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR1 >> 4) & 0x7), ((TIMER2_CCMR1 = (TIMER2_CCMR1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR1_OC0CE  ---------------------------------
// SVD Line: 15343

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0CE
//    <name> OC0CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B018) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR1 ) </loc>
//      <o.7..7> OC0CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCMR1_CC1S  ---------------------------------
// SVD Line: 15350

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000B018) Channel 1 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR1 >> 8) & 0x3), ((TIMER2_CCMR1 = (TIMER2_CCMR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR1_OC1FE  ---------------------------------
// SVD Line: 15357

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000B018) Channel 1 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR1 ) </loc>
//      <o.10..10> OC1FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR1_OC1PE  ---------------------------------
// SVD Line: 15364

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000B018) Channel 1 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR1 ) </loc>
//      <o.11..11> OC1PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCMR1_OC1M  ---------------------------------
// SVD Line: 15371

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000B018) Channel 1 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR1 >> 12) & 0x7), ((TIMER2_CCMR1 = (TIMER2_CCMR1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR1_OC1CE  ---------------------------------
// SVD Line: 15378

//  <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000B018) Channel 1 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR1 ) </loc>
//      <o.15..15> OC1CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER2_CCMR1  ----------------------------------
// SVD Line: 15306

//  <rtree> SFDITEM_REG__TIMER2_CCMR1
//    <name> CCMR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B018) capture/compare mode register 1 </i>
//    <loc> ( (unsigned short)((TIMER2_CCMR1 >> 0) & 0xFFFF), ((TIMER2_CCMR1 = (TIMER2_CCMR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_CC0S </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0FE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0PE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0M </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC0CE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_CC1S </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1FE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1PE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1M </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR1_OC1CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCMR2  ------------------------------
// SVD Line: 15387

unsigned short TIMER2_CCMR2 __AT (0x4000B01C);



// ------------------------------  Field Item: TIMER2_CCMR2_CC2S  ---------------------------------
// SVD Line: 15396

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000B01C) Channel 2 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR2 >> 0) & 0x3), ((TIMER2_CCMR2 = (TIMER2_CCMR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR2_OC2FE  ---------------------------------
// SVD Line: 15403

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000B01C) Channel 2 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR2 ) </loc>
//      <o.2..2> OC2FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR2_OC2PE  ---------------------------------
// SVD Line: 15410

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B01C) Channel 2 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR2 ) </loc>
//      <o.3..3> OC2PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCMR2_OC2M  ---------------------------------
// SVD Line: 15417

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000B01C) Channel 2 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR2 >> 4) & 0x7), ((TIMER2_CCMR2 = (TIMER2_CCMR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR2_OC2CE  ---------------------------------
// SVD Line: 15424

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B01C) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR2 ) </loc>
//      <o.7..7> OC2CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCMR2_CC3S  ---------------------------------
// SVD Line: 15431

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4000B01C) Channel 3 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR2 >> 8) & 0x3), ((TIMER2_CCMR2 = (TIMER2_CCMR2 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR2_OC3FE  ---------------------------------
// SVD Line: 15438

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000B01C) Channel 3 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR2 ) </loc>
//      <o.10..10> OC3FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR2_OC3PE  ---------------------------------
// SVD Line: 15445

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000B01C) Channel 3 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR2 ) </loc>
//      <o.11..11> OC3PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCMR2_OC3M  ---------------------------------
// SVD Line: 15452

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000B01C) Channel 3 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_CCMR2 >> 12) & 0x7), ((TIMER2_CCMR2 = (TIMER2_CCMR2 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_CCMR2_OC3CE  ---------------------------------
// SVD Line: 15459

//  <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000B01C) Channel 3 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCMR2 ) </loc>
//      <o.15..15> OC3CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER2_CCMR2  ----------------------------------
// SVD Line: 15387

//  <rtree> SFDITEM_REG__TIMER2_CCMR2
//    <name> CCMR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B01C) capture/compare mode register 2 </i>
//    <loc> ( (unsigned short)((TIMER2_CCMR2 >> 0) & 0xFFFF), ((TIMER2_CCMR2 = (TIMER2_CCMR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_CC2S </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2FE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2PE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2M </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC2CE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_CC3S </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3FE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3PE </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3M </item>
//    <item> SFDITEM_FIELD__TIMER2_CCMR2_OC3CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCER  -------------------------------
// SVD Line: 15468

unsigned short TIMER2_CCER __AT (0x4000B020);



// ------------------------------  Field Item: TIMER2_CCER_CC0E  ----------------------------------
// SVD Line: 15477

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC0E
//    <name> CC0E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B020) Channel 0 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.0..0> CC0E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC0P  ----------------------------------
// SVD Line: 15484

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC0P
//    <name> CC0P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B020) Channel 0 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.1..1> CC0P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC0NP  ---------------------------------
// SVD Line: 15491

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC0NP
//    <name> CC0NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000B020) Channel 0 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.3..3> CC0NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC1E  ----------------------------------
// SVD Line: 15498

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000B020) Channel 1 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.4..4> CC1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC1P  ----------------------------------
// SVD Line: 15505

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000B020) Channel 1 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.5..5> CC1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC1NP  ---------------------------------
// SVD Line: 15512

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B020) Channel 1 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.7..7> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC2E  ----------------------------------
// SVD Line: 15519

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000B020) Channel 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.8..8> CC2E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC2P  ----------------------------------
// SVD Line: 15526

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000B020) Channel 2 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.9..9> CC2P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC2NP  ---------------------------------
// SVD Line: 15533

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000B020) Channel 2 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.11..11> CC2NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC3E  ----------------------------------
// SVD Line: 15540

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000B020) Channel 3 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.12..12> CC3E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC3P  ----------------------------------
// SVD Line: 15547

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000B020) Channel 3 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.13..13> CC3P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_CCER_CC3NP  ---------------------------------
// SVD Line: 15554

//  <item> SFDITEM_FIELD__TIMER2_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000B020) Channel 3 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER2_CCER ) </loc>
//      <o.15..15> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CCER  ----------------------------------
// SVD Line: 15468

//  <rtree> SFDITEM_REG__TIMER2_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B020) TIMER capture/compare enable register </i>
//    <loc> ( (unsigned short)((TIMER2_CCER >> 0) & 0xFFFF), ((TIMER2_CCER = (TIMER2_CCER & ~(0xBBBBUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xBBBB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC0E </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC0P </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC0NP </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC1E </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIMER2_CCER_CC3NP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_CNT  -------------------------------
// SVD Line: 15563

unsigned short TIMER2_CNT __AT (0x4000B024);



// -------------------------------  Field Item: TIMER2_CNT_CNT  -----------------------------------
// SVD Line: 15572

//  <item> SFDITEM_FIELD__TIMER2_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B024) Count value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_CNT >> 0) & 0xFFFF), ((TIMER2_CNT = (TIMER2_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CNT  -----------------------------------
// SVD Line: 15563

//  <rtree> SFDITEM_REG__TIMER2_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B024) TIMER counter register </i>
//    <loc> ( (unsigned short)((TIMER2_CNT >> 0) & 0xFFFF), ((TIMER2_CNT = (TIMER2_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_PSC  -------------------------------
// SVD Line: 15581

unsigned short TIMER2_PSC __AT (0x4000B028);



// -------------------------------  Field Item: TIMER2_PSC_PSC  -----------------------------------
// SVD Line: 15590

//  <item> SFDITEM_FIELD__TIMER2_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_PSC >> 0) & 0xFFFF), ((TIMER2_PSC = (TIMER2_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_PSC  -----------------------------------
// SVD Line: 15581

//  <rtree> SFDITEM_REG__TIMER2_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B028) TIMER prescaler register </i>
//    <loc> ( (unsigned short)((TIMER2_PSC >> 0) & 0xFFFF), ((TIMER2_PSC = (TIMER2_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_ARR  -------------------------------
// SVD Line: 15599

unsigned int TIMER2_ARR __AT (0x4000B02C);



// -------------------------------  Field Item: TIMER2_ARR_ARR  -----------------------------------
// SVD Line: 15608

//  <item> SFDITEM_FIELD__TIMER2_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B02C) Counter reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_ARR >> 0) & 0xFFFF), ((TIMER2_ARR = (TIMER2_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_ARR  -----------------------------------
// SVD Line: 15599

//  <rtree> SFDITEM_REG__TIMER2_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B02C) TIMER auto-reload register </i>
//    <loc> ( (unsigned int)((TIMER2_ARR >> 0) & 0xFFFFFFFF), ((TIMER2_ARR = (TIMER2_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_ARR_ARR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCR0  -------------------------------
// SVD Line: 15617

unsigned short TIMER2_CCR0 __AT (0x4000B034);



// -------------------------------  Field Item: TIMER2_CCR0_CCR  ----------------------------------
// SVD Line: 15626

//  <item> SFDITEM_FIELD__TIMER2_CCR0_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B034) Channel 0 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_CCR0 >> 0) & 0xFFFF), ((TIMER2_CCR0 = (TIMER2_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CCR0  ----------------------------------
// SVD Line: 15617

//  <rtree> SFDITEM_REG__TIMER2_CCR0
//    <name> CCR0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B034) Channel 0 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER2_CCR0 >> 0) & 0xFFFF), ((TIMER2_CCR0 = (TIMER2_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCR0_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCR1  -------------------------------
// SVD Line: 15635

unsigned short TIMER2_CCR1 __AT (0x4000B038);



// -------------------------------  Field Item: TIMER2_CCR1_CCR  ----------------------------------
// SVD Line: 15644

//  <item> SFDITEM_FIELD__TIMER2_CCR1_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B038) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_CCR1 >> 0) & 0xFFFF), ((TIMER2_CCR1 = (TIMER2_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CCR1  ----------------------------------
// SVD Line: 15635

//  <rtree> SFDITEM_REG__TIMER2_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B038) Channel 1 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER2_CCR1 >> 0) & 0xFFFF), ((TIMER2_CCR1 = (TIMER2_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCR1_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCR2  -------------------------------
// SVD Line: 15653

unsigned short TIMER2_CCR2 __AT (0x4000B03C);



// -------------------------------  Field Item: TIMER2_CCR2_CCR  ----------------------------------
// SVD Line: 15662

//  <item> SFDITEM_FIELD__TIMER2_CCR2_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B03C) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_CCR2 >> 0) & 0xFFFF), ((TIMER2_CCR2 = (TIMER2_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CCR2  ----------------------------------
// SVD Line: 15653

//  <rtree> SFDITEM_REG__TIMER2_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B03C) Channel 2 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER2_CCR2 >> 0) & 0xFFFF), ((TIMER2_CCR2 = (TIMER2_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCR2_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CCR3  -------------------------------
// SVD Line: 15671

unsigned short TIMER2_CCR3 __AT (0x4000B040);



// -------------------------------  Field Item: TIMER2_CCR3_CCR  ----------------------------------
// SVD Line: 15680

//  <item> SFDITEM_FIELD__TIMER2_CCR3_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B040) Channel 3 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_CCR3 >> 0) & 0xFFFF), ((TIMER2_CCR3 = (TIMER2_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CCR3  ----------------------------------
// SVD Line: 15671

//  <rtree> SFDITEM_REG__TIMER2_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B040) Channel 3 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER2_CCR3 >> 0) & 0xFFFF), ((TIMER2_CCR3 = (TIMER2_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CCR3_CCR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_DCR  -------------------------------
// SVD Line: 15689

unsigned short TIMER2_DCR __AT (0x4000B048);



// -------------------------------  Field Item: TIMER2_DCR_DBA  -----------------------------------
// SVD Line: 15698

//  <item> SFDITEM_FIELD__TIMER2_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4000B048) DMA continuously reads and writes base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_DCR >> 0) & 0x1F), ((TIMER2_DCR = (TIMER2_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_DCR_DBL  -----------------------------------
// SVD Line: 15705

//  <item> SFDITEM_FIELD__TIMER2_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4000B048) DMA continuous read and write length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_DCR >> 8) & 0x1F), ((TIMER2_DCR = (TIMER2_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_DCR  -----------------------------------
// SVD Line: 15689

//  <rtree> SFDITEM_REG__TIMER2_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B048) DMA control register </i>
//    <loc> ( (unsigned short)((TIMER2_DCR >> 0) & 0xFFFF), ((TIMER2_DCR = (TIMER2_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_DCR_DBA </item>
//    <item> SFDITEM_FIELD__TIMER2_DCR_DBL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_DMAR  -------------------------------
// SVD Line: 15714

unsigned short TIMER2_DMAR __AT (0x4000B04C);



// ------------------------------  Field Item: TIMER2_DMAR_DMAR  ----------------------------------
// SVD Line: 15723

//  <item> SFDITEM_FIELD__TIMER2_DMAR_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B04C) This register holds the value of the register for the current DMA operation </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER2_DMAR >> 0) & 0xFFFF), ((TIMER2_DMAR = (TIMER2_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_DMAR  ----------------------------------
// SVD Line: 15714

//  <rtree> SFDITEM_REG__TIMER2_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B04C) TIMER DMA address for full transfer register </i>
//    <loc> ( (unsigned short)((TIMER2_DMAR >> 0) & 0xFFFF), ((TIMER2_DMAR = (TIMER2_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_DMAR_DMAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_OR  --------------------------------
// SVD Line: 15732

unsigned short TIMER2_OR __AT (0x4000B050);



// ------------------------------  Field Item: TIMER2_OR_TI0_RMP  ---------------------------------
// SVD Line: 15741

//  <item> SFDITEM_FIELD__TIMER2_OR_TI0_RMP
//    <name> TI0_RMP </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4000B050) Channel 0 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_OR >> 0) & 0x1F), ((TIMER2_OR = (TIMER2_OR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_OR_TI1_RMP  ---------------------------------
// SVD Line: 15748

//  <item> SFDITEM_FIELD__TIMER2_OR_TI1_RMP
//    <name> TI1_RMP </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4000B050) Channel 1 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_OR >> 5) & 0x3), ((TIMER2_OR = (TIMER2_OR & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER2_OR_ETR_RMP  ---------------------------------
// SVD Line: 15755

//  <item> SFDITEM_FIELD__TIMER2_OR_ETR_RMP
//    <name> ETR_RMP </name>
//    <rw> 
//    <i> [Bits 9..7] RW (@ 0x4000B050) ETR remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER2_OR >> 7) & 0x7), ((TIMER2_OR = (TIMER2_OR & ~(0x7UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIMER2_OR  -----------------------------------
// SVD Line: 15732

//  <rtree> SFDITEM_REG__TIMER2_OR
//    <name> OR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000B050) Option register </i>
//    <loc> ( (unsigned short)((TIMER2_OR >> 0) & 0xFFFF), ((TIMER2_OR = (TIMER2_OR & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_OR_TI0_RMP </item>
//    <item> SFDITEM_FIELD__TIMER2_OR_TI1_RMP </item>
//    <item> SFDITEM_FIELD__TIMER2_OR_ETR_RMP </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER2  ------------------------------------
// SVD Line: 14904

//  <view> TIMER2
//    <name> TIMER2 </name>
//    <item> SFDITEM_REG__TIMER2_CR1 </item>
//    <item> SFDITEM_REG__TIMER2_CR2 </item>
//    <item> SFDITEM_REG__TIMER2_SMCR </item>
//    <item> SFDITEM_REG__TIMER2_DIER </item>
//    <item> SFDITEM_REG__TIMER2_SR </item>
//    <item> SFDITEM_REG__TIMER2_EGR </item>
//    <item> SFDITEM_REG__TIMER2_CCMR1 </item>
//    <item> SFDITEM_REG__TIMER2_CCMR2 </item>
//    <item> SFDITEM_REG__TIMER2_CCER </item>
//    <item> SFDITEM_REG__TIMER2_CNT </item>
//    <item> SFDITEM_REG__TIMER2_PSC </item>
//    <item> SFDITEM_REG__TIMER2_ARR </item>
//    <item> SFDITEM_REG__TIMER2_CCR0 </item>
//    <item> SFDITEM_REG__TIMER2_CCR1 </item>
//    <item> SFDITEM_REG__TIMER2_CCR2 </item>
//    <item> SFDITEM_REG__TIMER2_CCR3 </item>
//    <item> SFDITEM_REG__TIMER2_DCR </item>
//    <item> SFDITEM_REG__TIMER2_DMAR </item>
//    <item> SFDITEM_REG__TIMER2_OR </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIMER3_CR1  -------------------------------
// SVD Line: 15780

unsigned short TIMER3_CR1 __AT (0x4001B000);



// -------------------------------  Field Item: TIMER3_CR1_CEN  -----------------------------------
// SVD Line: 15789

//  <item> SFDITEM_FIELD__TIMER3_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_UDIS  ----------------------------------
// SVD Line: 15796

//  <item> SFDITEM_FIELD__TIMER3_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_URS  -----------------------------------
// SVD Line: 15803

//  <item> SFDITEM_FIELD__TIMER3_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B000) Update Request Source </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_OPM  -----------------------------------
// SVD Line: 15810

//  <item> SFDITEM_FIELD__TIMER3_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B000) One Pulse Mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_DIR  -----------------------------------
// SVD Line: 15817

//  <item> SFDITEM_FIELD__TIMER3_CR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B000) Count direction </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR1 ) </loc>
//      <o.4..4> DIR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_CMS  -----------------------------------
// SVD Line: 15824

//  <item> SFDITEM_FIELD__TIMER3_CR1_CMS
//    <name> CMS </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4001B000) counting mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CR1 >> 5) & 0x3), ((TIMER3_CR1 = (TIMER3_CR1 & ~(0x3UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_ARPE  ----------------------------------
// SVD Line: 15831

//  <item> SFDITEM_FIELD__TIMER3_CR1_ARPE
//    <name> ARPE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B000) shadow reload register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR1 ) </loc>
//      <o.7..7> ARPE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR1_CKD  -----------------------------------
// SVD Line: 15838

//  <item> SFDITEM_FIELD__TIMER3_CR1_CKD
//    <name> CKD </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001B000) sampling clock divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CR1 >> 8) & 0x3), ((TIMER3_CR1 = (TIMER3_CR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CR1  -----------------------------------
// SVD Line: 15780

//  <rtree> SFDITEM_REG__TIMER3_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B000) TIMER control register 1 </i>
//    <loc> ( (unsigned short)((TIMER3_CR1 >> 0) & 0xFFFF), ((TIMER3_CR1 = (TIMER3_CR1 & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CR1_CEN </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_URS </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_OPM </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_DIR </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_CMS </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_ARPE </item>
//    <item> SFDITEM_FIELD__TIMER3_CR1_CKD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_CR2  -------------------------------
// SVD Line: 15847

unsigned short TIMER3_CR2 __AT (0x4001B004);



// -------------------------------  Field Item: TIMER3_CR2_CCDS  ----------------------------------
// SVD Line: 15856

//  <item> SFDITEM_FIELD__TIMER3_CR2_CCDS
//    <name> CCDS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B004) DMA request source selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR2 ) </loc>
//      <o.3..3> CCDS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR2_MMS  -----------------------------------
// SVD Line: 15863

//  <item> SFDITEM_FIELD__TIMER3_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001B004) mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CR2 >> 4) & 0x7), ((TIMER3_CR2 = (TIMER3_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_CR2_TI0S  ----------------------------------
// SVD Line: 15870

//  <item> SFDITEM_FIELD__TIMER3_CR2_TI0S
//    <name> TI0S </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B004) channel 0/1 source Select </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CR2 ) </loc>
//      <o.7..7> TI0S
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CR2  -----------------------------------
// SVD Line: 15847

//  <rtree> SFDITEM_REG__TIMER3_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B004) TIMER control register 2 </i>
//    <loc> ( (unsigned short)((TIMER3_CR2 >> 0) & 0xFFFF), ((TIMER3_CR2 = (TIMER3_CR2 & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CR2_CCDS </item>
//    <item> SFDITEM_FIELD__TIMER3_CR2_MMS </item>
//    <item> SFDITEM_FIELD__TIMER3_CR2_TI0S </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_SMCR  -------------------------------
// SVD Line: 15879

unsigned short TIMER3_SMCR __AT (0x4001B008);



// -------------------------------  Field Item: TIMER3_SMCR_SMS  ----------------------------------
// SVD Line: 15888

//  <item> SFDITEM_FIELD__TIMER3_SMCR_SMS
//    <name> SMS </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4001B008) slave mode select </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_SMCR >> 0) & 0x7), ((TIMER3_SMCR = (TIMER3_SMCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SMCR_TS  -----------------------------------
// SVD Line: 15895

//  <item> SFDITEM_FIELD__TIMER3_SMCR_TS
//    <name> TS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001B008) Trigger source selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_SMCR >> 4) & 0x7), ((TIMER3_SMCR = (TIMER3_SMCR & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SMCR_MSM  ----------------------------------
// SVD Line: 15902

//  <item> SFDITEM_FIELD__TIMER3_SMCR_MSM
//    <name> MSM </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B008) Master-slave synchronization mode </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SMCR ) </loc>
//      <o.7..7> MSM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SMCR_ETF  ----------------------------------
// SVD Line: 15909

//  <item> SFDITEM_FIELD__TIMER3_SMCR_ETF
//    <name> ETF </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001B008) External trigger input filter configuration </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_SMCR >> 8) & 0xF), ((TIMER3_SMCR = (TIMER3_SMCR & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_SMCR_ETPS  ----------------------------------
// SVD Line: 15916

//  <item> SFDITEM_FIELD__TIMER3_SMCR_ETPS
//    <name> ETPS </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x4001B008) External trigger input frequency division </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_SMCR >> 12) & 0x3), ((TIMER3_SMCR = (TIMER3_SMCR & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SMCR_ECE  ----------------------------------
// SVD Line: 15923

//  <item> SFDITEM_FIELD__TIMER3_SMCR_ECE
//    <name> ECE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001B008) External clock mode 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SMCR ) </loc>
//      <o.14..14> ECE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SMCR_ETP  ----------------------------------
// SVD Line: 15930

//  <item> SFDITEM_FIELD__TIMER3_SMCR_ETP
//    <name> ETP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001B008) External trigger polarity selection </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SMCR ) </loc>
//      <o.15..15> ETP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_SMCR  ----------------------------------
// SVD Line: 15879

//  <rtree> SFDITEM_REG__TIMER3_SMCR
//    <name> SMCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B008) TIMER slave Mode Control register </i>
//    <loc> ( (unsigned short)((TIMER3_SMCR >> 0) & 0xFFFF), ((TIMER3_SMCR = (TIMER3_SMCR & ~(0xFFF7UL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_SMS </item>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_TS </item>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_MSM </item>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_ETF </item>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_ETPS </item>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_ECE </item>
//    <item> SFDITEM_FIELD__TIMER3_SMCR_ETP </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_DIER  -------------------------------
// SVD Line: 15939

unsigned short TIMER3_DIER __AT (0x4001B00C);



// -------------------------------  Field Item: TIMER3_DIER_UIE  ----------------------------------
// SVD Line: 15948

//  <item> SFDITEM_FIELD__TIMER3_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B00C) Update interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC0IE  ---------------------------------
// SVD Line: 15955

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC0IE
//    <name> CC0IE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B00C) Channel 0 event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.1..1> CC0IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC1IE  ---------------------------------
// SVD Line: 15962

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC1IE
//    <name> CC1IE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B00C) Capture/Compare 1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.2..2> CC1IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC2IE  ---------------------------------
// SVD Line: 15969

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC2IE
//    <name> CC2IE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B00C) Capture/Compare 2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.3..3> CC2IE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC3IE  ---------------------------------
// SVD Line: 15976

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC3IE
//    <name> CC3IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B00C) Capture/Compare 3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.4..4> CC3IE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_DIER_TIE  ----------------------------------
// SVD Line: 15983

//  <item> SFDITEM_FIELD__TIMER3_DIER_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B00C) Trigger event interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.6..6> TIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_DIER_UDE  ----------------------------------
// SVD Line: 15990

//  <item> SFDITEM_FIELD__TIMER3_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001B00C) Update event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC0DE  ---------------------------------
// SVD Line: 15997

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC0DE
//    <name> CC0DE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001B00C) Channel 0 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.9..9> CC0DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC1DE  ---------------------------------
// SVD Line: 16004

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC1DE
//    <name> CC1DE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001B00C) Channel 1 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.10..10> CC1DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC2DE  ---------------------------------
// SVD Line: 16011

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC2DE
//    <name> CC2DE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001B00C) Channel 2 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.11..11> CC2DE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_DIER_CC3DE  ---------------------------------
// SVD Line: 16018

//  <item> SFDITEM_FIELD__TIMER3_DIER_CC3DE
//    <name> CC3DE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001B00C) Channel 3 event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.12..12> CC3DE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_DIER_TDE  ----------------------------------
// SVD Line: 16025

//  <item> SFDITEM_FIELD__TIMER3_DIER_TDE
//    <name> TDE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001B00C) Trigger event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_DIER ) </loc>
//      <o.14..14> TDE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_DIER  ----------------------------------
// SVD Line: 15939

//  <rtree> SFDITEM_REG__TIMER3_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B00C) TIMER DMA/interrupt enable register </i>
//    <loc> ( (unsigned short)((TIMER3_DIER >> 0) & 0xFFFF), ((TIMER3_DIER = (TIMER3_DIER & ~(0x5F5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_DIER_UIE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC0IE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC1IE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC2IE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC3IE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_TIE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_UDE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC0DE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC1DE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC2DE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_CC3DE </item>
//    <item> SFDITEM_FIELD__TIMER3_DIER_TDE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_SR  --------------------------------
// SVD Line: 16034

unsigned short TIMER3_SR __AT (0x4001B010);



// --------------------------------  Field Item: TIMER3_SR_UIF  -----------------------------------
// SVD Line: 16043

//  <item> SFDITEM_FIELD__TIMER3_SR_UIF
//    <name> UIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC0IF  ----------------------------------
// SVD Line: 16050

//  <item> SFDITEM_FIELD__TIMER3_SR_CC0IF
//    <name> CC0IF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B010) Capture/Compare 0 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.1..1> CC0IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC1IF  ----------------------------------
// SVD Line: 16057

//  <item> SFDITEM_FIELD__TIMER3_SR_CC1IF
//    <name> CC1IF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B010) Capture/Compare 1 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.2..2> CC1IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC2IF  ----------------------------------
// SVD Line: 16064

//  <item> SFDITEM_FIELD__TIMER3_SR_CC2IF
//    <name> CC2IF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B010) Capture/Compare 2 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.3..3> CC2IF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC3IF  ----------------------------------
// SVD Line: 16071

//  <item> SFDITEM_FIELD__TIMER3_SR_CC3IF
//    <name> CC3IF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B010) Capture/Compare 3 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.4..4> CC3IF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER3_SR_TIF  -----------------------------------
// SVD Line: 16078

//  <item> SFDITEM_FIELD__TIMER3_SR_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B010) Trigger interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.6..6> TIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC0OF  ----------------------------------
// SVD Line: 16085

//  <item> SFDITEM_FIELD__TIMER3_SR_CC0OF
//    <name> CC0OF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001B010) Capture 0 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.9..9> CC0OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC1OF  ----------------------------------
// SVD Line: 16092

//  <item> SFDITEM_FIELD__TIMER3_SR_CC1OF
//    <name> CC1OF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001B010) Capture 1 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.10..10> CC1OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC2OF  ----------------------------------
// SVD Line: 16099

//  <item> SFDITEM_FIELD__TIMER3_SR_CC2OF
//    <name> CC2OF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001B010) Capture 2 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.11..11> CC2OF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_SR_CC3OF  ----------------------------------
// SVD Line: 16106

//  <item> SFDITEM_FIELD__TIMER3_SR_CC3OF
//    <name> CC3OF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001B010) Capture 3 overcapture flag </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_SR ) </loc>
//      <o.12..12> CC3OF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: TIMER3_SR  -----------------------------------
// SVD Line: 16034

//  <rtree> SFDITEM_REG__TIMER3_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B010) status register </i>
//    <loc> ( (unsigned short)((TIMER3_SR >> 0) & 0xFFFF), ((TIMER3_SR = (TIMER3_SR & ~(0x1E5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1E5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_SR_UIF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC0IF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC1IF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC2IF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC3IF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_TIF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC0OF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC1OF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC2OF </item>
//    <item> SFDITEM_FIELD__TIMER3_SR_CC3OF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_EGR  -------------------------------
// SVD Line: 16115

unsigned short TIMER3_EGR __AT (0x4001B014);



// --------------------------------  Field Item: TIMER3_EGR_UG  -----------------------------------
// SVD Line: 16124

//  <item> SFDITEM_FIELD__TIMER3_EGR_UG
//    <name> UG </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001B014) Update event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_EGR ) </loc>
//      <o.0..0> UG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_EGR_CC0G  ----------------------------------
// SVD Line: 16131

//  <item> SFDITEM_FIELD__TIMER3_EGR_CC0G
//    <name> CC0G </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4001B014) Channel 0 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_EGR ) </loc>
//      <o.1..1> CC0G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_EGR_CC1G  ----------------------------------
// SVD Line: 16138

//  <item> SFDITEM_FIELD__TIMER3_EGR_CC1G
//    <name> CC1G </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4001B014) Channel 1 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_EGR ) </loc>
//      <o.2..2> CC1G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_EGR_CC2G  ----------------------------------
// SVD Line: 16145

//  <item> SFDITEM_FIELD__TIMER3_EGR_CC2G
//    <name> CC2G </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4001B014) Channel 2 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_EGR ) </loc>
//      <o.3..3> CC2G
//    </check>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_EGR_CC3G  ----------------------------------
// SVD Line: 16152

//  <item> SFDITEM_FIELD__TIMER3_EGR_CC3G
//    <name> CC3G </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4001B014) Channel 3 capture/compare event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_EGR ) </loc>
//      <o.4..4> CC3G
//    </check>
//  </item>
//  


// --------------------------------  Field Item: TIMER3_EGR_TG  -----------------------------------
// SVD Line: 16159

//  <item> SFDITEM_FIELD__TIMER3_EGR_TG
//    <name> TG </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4001B014) Trigger event generation enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_EGR ) </loc>
//      <o.6..6> TG
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_EGR  -----------------------------------
// SVD Line: 16115

//  <rtree> SFDITEM_REG__TIMER3_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 15..0] WO (@ 0x4001B014) TIMER event generation register </i>
//    <loc> ( (unsigned short)((TIMER3_EGR >> 0) & 0xFFFF), ((TIMER3_EGR = (TIMER3_EGR & ~(0x5FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x5F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_EGR_UG </item>
//    <item> SFDITEM_FIELD__TIMER3_EGR_CC0G </item>
//    <item> SFDITEM_FIELD__TIMER3_EGR_CC1G </item>
//    <item> SFDITEM_FIELD__TIMER3_EGR_CC2G </item>
//    <item> SFDITEM_FIELD__TIMER3_EGR_CC3G </item>
//    <item> SFDITEM_FIELD__TIMER3_EGR_TG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCMR1  ------------------------------
// SVD Line: 16168

unsigned short TIMER3_CCMR1 __AT (0x4001B018);



// ------------------------------  Field Item: TIMER3_CCMR1_CC0S  ---------------------------------
// SVD Line: 16177

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_CC0S
//    <name> CC0S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001B018) Channel 0 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR1 >> 0) & 0x3), ((TIMER3_CCMR1 = (TIMER3_CCMR1 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR1_OC0FE  ---------------------------------
// SVD Line: 16184

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0FE
//    <name> OC0FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B018) Channel 0 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR1 ) </loc>
//      <o.2..2> OC0FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR1_OC0PE  ---------------------------------
// SVD Line: 16191

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0PE
//    <name> OC0PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B018) Channel 0 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR1 ) </loc>
//      <o.3..3> OC0PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCMR1_OC0M  ---------------------------------
// SVD Line: 16198

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0M
//    <name> OC0M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001B018) Channel 0 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR1 >> 4) & 0x7), ((TIMER3_CCMR1 = (TIMER3_CCMR1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR1_OC0CE  ---------------------------------
// SVD Line: 16205

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0CE
//    <name> OC0CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B018) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR1 ) </loc>
//      <o.7..7> OC0CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCMR1_CC1S  ---------------------------------
// SVD Line: 16212

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_CC1S
//    <name> CC1S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001B018) Channel 1 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR1 >> 8) & 0x3), ((TIMER3_CCMR1 = (TIMER3_CCMR1 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR1_OC1FE  ---------------------------------
// SVD Line: 16219

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1FE
//    <name> OC1FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001B018) Channel 1 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR1 ) </loc>
//      <o.10..10> OC1FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR1_OC1PE  ---------------------------------
// SVD Line: 16226

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1PE
//    <name> OC1PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001B018) Channel 1 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR1 ) </loc>
//      <o.11..11> OC1PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCMR1_OC1M  ---------------------------------
// SVD Line: 16233

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1M
//    <name> OC1M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4001B018) Channel 1 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR1 >> 12) & 0x7), ((TIMER3_CCMR1 = (TIMER3_CCMR1 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR1_OC1CE  ---------------------------------
// SVD Line: 16240

//  <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1CE
//    <name> OC1CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001B018) Channel 1 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR1 ) </loc>
//      <o.15..15> OC1CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER3_CCMR1  ----------------------------------
// SVD Line: 16168

//  <rtree> SFDITEM_REG__TIMER3_CCMR1
//    <name> CCMR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B018) capture/compare mode register 1 </i>
//    <loc> ( (unsigned short)((TIMER3_CCMR1 >> 0) & 0xFFFF), ((TIMER3_CCMR1 = (TIMER3_CCMR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_CC0S </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0FE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0PE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0M </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC0CE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_CC1S </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1FE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1PE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1M </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR1_OC1CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCMR2  ------------------------------
// SVD Line: 16249

unsigned short TIMER3_CCMR2 __AT (0x4001B01C);



// ------------------------------  Field Item: TIMER3_CCMR2_CC2S  ---------------------------------
// SVD Line: 16258

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_CC2S
//    <name> CC2S </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001B01C) Channel 2 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR2 >> 0) & 0x3), ((TIMER3_CCMR2 = (TIMER3_CCMR2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR2_OC2FE  ---------------------------------
// SVD Line: 16265

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2FE
//    <name> OC2FE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B01C) Channel 2 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR2 ) </loc>
//      <o.2..2> OC2FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR2_OC2PE  ---------------------------------
// SVD Line: 16272

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2PE
//    <name> OC2PE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B01C) Channel 2 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR2 ) </loc>
//      <o.3..3> OC2PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCMR2_OC2M  ---------------------------------
// SVD Line: 16279

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2M
//    <name> OC2M </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001B01C) Channel 2 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR2 >> 4) & 0x7), ((TIMER3_CCMR2 = (TIMER3_CCMR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR2_OC2CE  ---------------------------------
// SVD Line: 16286

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2CE
//    <name> OC2CE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B01C) Channel 0 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR2 ) </loc>
//      <o.7..7> OC2CE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCMR2_CC3S  ---------------------------------
// SVD Line: 16293

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_CC3S
//    <name> CC3S </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x4001B01C) Channel 3 capture/compare selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR2 >> 8) & 0x3), ((TIMER3_CCMR2 = (TIMER3_CCMR2 & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR2_OC3FE  ---------------------------------
// SVD Line: 16300

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3FE
//    <name> OC3FE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001B01C) Channel 3 fast output enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR2 ) </loc>
//      <o.10..10> OC3FE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR2_OC3PE  ---------------------------------
// SVD Line: 16307

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3PE
//    <name> OC3PE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001B01C) Channel 3 output compare shadow register enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR2 ) </loc>
//      <o.11..11> OC3PE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCMR2_OC3M  ---------------------------------
// SVD Line: 16314

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3M
//    <name> OC3M </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4001B01C) Channel 3 output compare mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_CCMR2 >> 12) & 0x7), ((TIMER3_CCMR2 = (TIMER3_CCMR2 & ~(0x7UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_CCMR2_OC3CE  ---------------------------------
// SVD Line: 16321

//  <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3CE
//    <name> OC3CE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001B01C) Channel 3 output compare clear enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCMR2 ) </loc>
//      <o.15..15> OC3CE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: TIMER3_CCMR2  ----------------------------------
// SVD Line: 16249

//  <rtree> SFDITEM_REG__TIMER3_CCMR2
//    <name> CCMR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B01C) capture/compare mode register 2 </i>
//    <loc> ( (unsigned short)((TIMER3_CCMR2 >> 0) & 0xFFFF), ((TIMER3_CCMR2 = (TIMER3_CCMR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_CC2S </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2FE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2PE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2M </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC2CE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_CC3S </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3FE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3PE </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3M </item>
//    <item> SFDITEM_FIELD__TIMER3_CCMR2_OC3CE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCER  -------------------------------
// SVD Line: 16330

unsigned short TIMER3_CCER __AT (0x4001B020);



// ------------------------------  Field Item: TIMER3_CCER_CC0E  ----------------------------------
// SVD Line: 16339

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC0E
//    <name> CC0E </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B020) Channel 0 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.0..0> CC0E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC0P  ----------------------------------
// SVD Line: 16346

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC0P
//    <name> CC0P </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B020) Channel 0 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.1..1> CC0P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC0NP  ---------------------------------
// SVD Line: 16353

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC0NP
//    <name> CC0NP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B020) Channel 0 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.3..3> CC0NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC1E  ----------------------------------
// SVD Line: 16360

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC1E
//    <name> CC1E </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B020) Channel 1 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.4..4> CC1E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC1P  ----------------------------------
// SVD Line: 16367

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC1P
//    <name> CC1P </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B020) Channel 1 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.5..5> CC1P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC1NP  ---------------------------------
// SVD Line: 16374

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC1NP
//    <name> CC1NP </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B020) Channel 1 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.7..7> CC1NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC2E  ----------------------------------
// SVD Line: 16381

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC2E
//    <name> CC2E </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001B020) Channel 2 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.8..8> CC2E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC2P  ----------------------------------
// SVD Line: 16388

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC2P
//    <name> CC2P </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001B020) Channel 2 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.9..9> CC2P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC2NP  ---------------------------------
// SVD Line: 16395

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC2NP
//    <name> CC2NP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001B020) Channel 2 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.11..11> CC2NP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC3E  ----------------------------------
// SVD Line: 16402

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC3E
//    <name> CC3E </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001B020) Channel 3 enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.12..12> CC3E
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC3P  ----------------------------------
// SVD Line: 16409

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC3P
//    <name> CC3P </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001B020) Channel 3 output polarity </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.13..13> CC3P
//    </check>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_CCER_CC3NP  ---------------------------------
// SVD Line: 16416

//  <item> SFDITEM_FIELD__TIMER3_CCER_CC3NP
//    <name> CC3NP </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4001B020) Channel 3 input enable </i>
//    <check> 
//      <loc> ( (unsigned short) TIMER3_CCER ) </loc>
//      <o.15..15> CC3NP
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CCER  ----------------------------------
// SVD Line: 16330

//  <rtree> SFDITEM_REG__TIMER3_CCER
//    <name> CCER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B020) TIMER capture/compare enable register </i>
//    <loc> ( (unsigned short)((TIMER3_CCER >> 0) & 0xFFFF), ((TIMER3_CCER = (TIMER3_CCER & ~(0xBBBBUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xBBBB) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC0E </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC0P </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC0NP </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC1E </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC1P </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC1NP </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC2E </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC2P </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC2NP </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC3E </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC3P </item>
//    <item> SFDITEM_FIELD__TIMER3_CCER_CC3NP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_CNT  -------------------------------
// SVD Line: 16425

unsigned short TIMER3_CNT __AT (0x4001B024);



// -------------------------------  Field Item: TIMER3_CNT_CNT  -----------------------------------
// SVD Line: 16434

//  <item> SFDITEM_FIELD__TIMER3_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B024) Count value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_CNT >> 0) & 0xFFFF), ((TIMER3_CNT = (TIMER3_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CNT  -----------------------------------
// SVD Line: 16425

//  <rtree> SFDITEM_REG__TIMER3_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B024) TIMER counter register </i>
//    <loc> ( (unsigned short)((TIMER3_CNT >> 0) & 0xFFFF), ((TIMER3_CNT = (TIMER3_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_PSC  -------------------------------
// SVD Line: 16443

unsigned short TIMER3_PSC __AT (0x4001B028);



// -------------------------------  Field Item: TIMER3_PSC_PSC  -----------------------------------
// SVD Line: 16452

//  <item> SFDITEM_FIELD__TIMER3_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B028) Prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_PSC >> 0) & 0xFFFF), ((TIMER3_PSC = (TIMER3_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_PSC  -----------------------------------
// SVD Line: 16443

//  <rtree> SFDITEM_REG__TIMER3_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B028) TIMER prescaler register </i>
//    <loc> ( (unsigned short)((TIMER3_PSC >> 0) & 0xFFFF), ((TIMER3_PSC = (TIMER3_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_PSC_PSC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_ARR  -------------------------------
// SVD Line: 16461

unsigned int TIMER3_ARR __AT (0x4001B02C);



// -------------------------------  Field Item: TIMER3_ARR_ARR  -----------------------------------
// SVD Line: 16470

//  <item> SFDITEM_FIELD__TIMER3_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B02C) Counter reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_ARR >> 0) & 0xFFFF), ((TIMER3_ARR = (TIMER3_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_ARR  -----------------------------------
// SVD Line: 16461

//  <rtree> SFDITEM_REG__TIMER3_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B02C) TIMER auto-reload register </i>
//    <loc> ( (unsigned int)((TIMER3_ARR >> 0) & 0xFFFFFFFF), ((TIMER3_ARR = (TIMER3_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_ARR_ARR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCR0  -------------------------------
// SVD Line: 16479

unsigned short TIMER3_CCR0 __AT (0x4001B034);



// -------------------------------  Field Item: TIMER3_CCR0_CCR  ----------------------------------
// SVD Line: 16488

//  <item> SFDITEM_FIELD__TIMER3_CCR0_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B034) Channel 0 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_CCR0 >> 0) & 0xFFFF), ((TIMER3_CCR0 = (TIMER3_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CCR0  ----------------------------------
// SVD Line: 16479

//  <rtree> SFDITEM_REG__TIMER3_CCR0
//    <name> CCR0 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B034) Channel 0 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER3_CCR0 >> 0) & 0xFFFF), ((TIMER3_CCR0 = (TIMER3_CCR0 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCR0_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCR1  -------------------------------
// SVD Line: 16497

unsigned short TIMER3_CCR1 __AT (0x4001B038);



// -------------------------------  Field Item: TIMER3_CCR1_CCR  ----------------------------------
// SVD Line: 16506

//  <item> SFDITEM_FIELD__TIMER3_CCR1_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B038) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_CCR1 >> 0) & 0xFFFF), ((TIMER3_CCR1 = (TIMER3_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CCR1  ----------------------------------
// SVD Line: 16497

//  <rtree> SFDITEM_REG__TIMER3_CCR1
//    <name> CCR1 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B038) Channel 1 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER3_CCR1 >> 0) & 0xFFFF), ((TIMER3_CCR1 = (TIMER3_CCR1 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCR1_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCR2  -------------------------------
// SVD Line: 16515

unsigned short TIMER3_CCR2 __AT (0x4001B03C);



// -------------------------------  Field Item: TIMER3_CCR2_CCR  ----------------------------------
// SVD Line: 16524

//  <item> SFDITEM_FIELD__TIMER3_CCR2_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B03C) Channel 1 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_CCR2 >> 0) & 0xFFFF), ((TIMER3_CCR2 = (TIMER3_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CCR2  ----------------------------------
// SVD Line: 16515

//  <rtree> SFDITEM_REG__TIMER3_CCR2
//    <name> CCR2 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B03C) Channel 2 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER3_CCR2 >> 0) & 0xFFFF), ((TIMER3_CCR2 = (TIMER3_CCR2 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCR2_CCR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CCR3  -------------------------------
// SVD Line: 16533

unsigned short TIMER3_CCR3 __AT (0x4001B040);



// -------------------------------  Field Item: TIMER3_CCR3_CCR  ----------------------------------
// SVD Line: 16542

//  <item> SFDITEM_FIELD__TIMER3_CCR3_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B040) Channel 3 capture/compare value </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_CCR3 >> 0) & 0xFFFF), ((TIMER3_CCR3 = (TIMER3_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CCR3  ----------------------------------
// SVD Line: 16533

//  <rtree> SFDITEM_REG__TIMER3_CCR3
//    <name> CCR3 </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B040) Channel 3 capture/compare register </i>
//    <loc> ( (unsigned short)((TIMER3_CCR3 >> 0) & 0xFFFF), ((TIMER3_CCR3 = (TIMER3_CCR3 & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CCR3_CCR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_DCR  -------------------------------
// SVD Line: 16551

unsigned short TIMER3_DCR __AT (0x4001B048);



// -------------------------------  Field Item: TIMER3_DCR_DBA  -----------------------------------
// SVD Line: 16560

//  <item> SFDITEM_FIELD__TIMER3_DCR_DBA
//    <name> DBA </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4001B048) DMA continuously reads and writes base address </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_DCR >> 0) & 0x1F), ((TIMER3_DCR = (TIMER3_DCR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_DCR_DBL  -----------------------------------
// SVD Line: 16567

//  <item> SFDITEM_FIELD__TIMER3_DCR_DBL
//    <name> DBL </name>
//    <rw> 
//    <i> [Bits 12..8] RW (@ 0x4001B048) DMA continuous read and write length </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_DCR >> 8) & 0x1F), ((TIMER3_DCR = (TIMER3_DCR & ~(0x1FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_DCR  -----------------------------------
// SVD Line: 16551

//  <rtree> SFDITEM_REG__TIMER3_DCR
//    <name> DCR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B048) DMA control register </i>
//    <loc> ( (unsigned short)((TIMER3_DCR >> 0) & 0xFFFF), ((TIMER3_DCR = (TIMER3_DCR & ~(0x1F1FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x1F1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_DCR_DBA </item>
//    <item> SFDITEM_FIELD__TIMER3_DCR_DBL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_DMAR  -------------------------------
// SVD Line: 16576

unsigned short TIMER3_DMAR __AT (0x4001B04C);



// ------------------------------  Field Item: TIMER3_DMAR_DMAR  ----------------------------------
// SVD Line: 16585

//  <item> SFDITEM_FIELD__TIMER3_DMAR_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B04C) This register holds the value of the register for the current DMA operation </i>
//    <edit> 
//      <loc> ( (unsigned short)((TIMER3_DMAR >> 0) & 0xFFFF), ((TIMER3_DMAR = (TIMER3_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_DMAR  ----------------------------------
// SVD Line: 16576

//  <rtree> SFDITEM_REG__TIMER3_DMAR
//    <name> DMAR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B04C) TIMER DMA address for full transfer register </i>
//    <loc> ( (unsigned short)((TIMER3_DMAR >> 0) & 0xFFFF), ((TIMER3_DMAR = (TIMER3_DMAR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_DMAR_DMAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_OR  --------------------------------
// SVD Line: 16594

unsigned short TIMER3_OR __AT (0x4001B050);



// ------------------------------  Field Item: TIMER3_OR_TI0_RMP  ---------------------------------
// SVD Line: 16603

//  <item> SFDITEM_FIELD__TIMER3_OR_TI0_RMP
//    <name> TI0_RMP </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4001B050) Channel 0 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_OR >> 0) & 0x7), ((TIMER3_OR = (TIMER3_OR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: TIMER3_OR_ETR_RMP  ---------------------------------
// SVD Line: 16610

//  <item> SFDITEM_FIELD__TIMER3_OR_ETR_RMP
//    <name> ETR_RMP </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x4001B050) Channel 1 remapping </i>
//    <edit> 
//      <loc> ( (unsigned char)((TIMER3_OR >> 3) & 0x7), ((TIMER3_OR = (TIMER3_OR & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: TIMER3_OR  -----------------------------------
// SVD Line: 16594

//  <rtree> SFDITEM_REG__TIMER3_OR
//    <name> OR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001B050) Option register </i>
//    <loc> ( (unsigned short)((TIMER3_OR >> 0) & 0xFFFF), ((TIMER3_OR = (TIMER3_OR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_OR_TI0_RMP </item>
//    <item> SFDITEM_FIELD__TIMER3_OR_ETR_RMP </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER3  ------------------------------------
// SVD Line: 15766

//  <view> TIMER3
//    <name> TIMER3 </name>
//    <item> SFDITEM_REG__TIMER3_CR1 </item>
//    <item> SFDITEM_REG__TIMER3_CR2 </item>
//    <item> SFDITEM_REG__TIMER3_SMCR </item>
//    <item> SFDITEM_REG__TIMER3_DIER </item>
//    <item> SFDITEM_REG__TIMER3_SR </item>
//    <item> SFDITEM_REG__TIMER3_EGR </item>
//    <item> SFDITEM_REG__TIMER3_CCMR1 </item>
//    <item> SFDITEM_REG__TIMER3_CCMR2 </item>
//    <item> SFDITEM_REG__TIMER3_CCER </item>
//    <item> SFDITEM_REG__TIMER3_CNT </item>
//    <item> SFDITEM_REG__TIMER3_PSC </item>
//    <item> SFDITEM_REG__TIMER3_ARR </item>
//    <item> SFDITEM_REG__TIMER3_CCR0 </item>
//    <item> SFDITEM_REG__TIMER3_CCR1 </item>
//    <item> SFDITEM_REG__TIMER3_CCR2 </item>
//    <item> SFDITEM_REG__TIMER3_CCR3 </item>
//    <item> SFDITEM_REG__TIMER3_DCR </item>
//    <item> SFDITEM_REG__TIMER3_DMAR </item>
//    <item> SFDITEM_REG__TIMER3_OR </item>
//  </view>
//  


// ---------------------------  Register Item Address: LPTIMER0_ISR  ------------------------------
// SVD Line: 16635

unsigned int LPTIMER0_ISR __AT (0x4000D000);



// ------------------------------  Field Item: LPTIMER0_ISR_CMPM  ---------------------------------
// SVD Line: 16644

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_CMPM
//    <name> CMPM </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000D000) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_ISR_ARRM  ---------------------------------
// SVD Line: 16651

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_ARRM
//    <name> ARRM </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000D000) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIMER0_ISR_EXTTRIG  --------------------------------
// SVD Line: 16658

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_EXTTRIG
//    <name> EXTTRIG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000D000) External trigger edge event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER0_ISR_CMPOK  ---------------------------------
// SVD Line: 16665

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_CMPOK
//    <name> CMPOK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000D000) Compare register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.3..3> CMPOK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER0_ISR_ARROK  ---------------------------------
// SVD Line: 16672

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_ARROK
//    <name> ARROK </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000D000) Autoreload register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.4..4> ARROK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIMER0_ISR_UP  ----------------------------------
// SVD Line: 16679

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_UP
//    <name> UP </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000D000) Counter direction change down to up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.5..5> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_ISR_DOWN  ---------------------------------
// SVD Line: 16686

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_DOWN
//    <name> DOWN </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000D000) Counter direction change up to down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.6..6> DOWN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER0_ISR_CFGROK  --------------------------------
// SVD Line: 16693

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_CFGROK
//    <name> CFGROK </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000D000) CFGR register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.7..7> CFGROK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_ISR_CROK  ---------------------------------
// SVD Line: 16700

//  <item> SFDITEM_FIELD__LPTIMER0_ISR_CROK
//    <name> CROK </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000D000) CR register register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ISR ) </loc>
//      <o.8..8> CROK
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_ISR  ----------------------------------
// SVD Line: 16635

//  <rtree> SFDITEM_REG__LPTIMER0_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D000) LPTIMER flag and status register </i>
//    <loc> ( (unsigned int)((LPTIMER0_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_CMPM </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_CMPOK </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_ARROK </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_UP </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_DOWN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_CFGROK </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ISR_CROK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_ICR  ------------------------------
// SVD Line: 16709

unsigned int LPTIMER0_ICR __AT (0x4000D004);



// ------------------------------  Field Item: LPTIMER0_ICR_CMPM  ---------------------------------
// SVD Line: 16718

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_CMPM
//    <name> CMPM </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000D004) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_ICR_ARRM  ---------------------------------
// SVD Line: 16725

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_ARRM
//    <name> ARRM </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000D004) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIMER0_ICR_EXTTRIG  --------------------------------
// SVD Line: 16732

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_EXTTRIG
//    <name> EXTTRIG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000D004) External trigger edge event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER0_ICR_CMPOK  ---------------------------------
// SVD Line: 16739

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_CMPOK
//    <name> CMPOK </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000D004) Compare register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.3..3> CMPOK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER0_ICR_ARROK  ---------------------------------
// SVD Line: 16746

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_ARROK
//    <name> ARROK </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000D004) Autoreload register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.4..4> ARROK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIMER0_ICR_UP  ----------------------------------
// SVD Line: 16753

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_UP
//    <name> UP </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4000D004) Counter direction change down to up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.5..5> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_ICR_DOWN  ---------------------------------
// SVD Line: 16760

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_DOWN
//    <name> DOWN </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000D004) Counter direction change up to down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.6..6> DOWN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER0_ICR_CFGROK  --------------------------------
// SVD Line: 16767

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_CFGROK
//    <name> CFGROK </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4000D004) CFGR register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.7..7> CFGROK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_ICR_CROK  ---------------------------------
// SVD Line: 16774

//  <item> SFDITEM_FIELD__LPTIMER0_ICR_CROK
//    <name> CROK </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000D004) CR register register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ICR ) </loc>
//      <o.8..8> CROK
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_ICR  ----------------------------------
// SVD Line: 16709

//  <rtree> SFDITEM_REG__LPTIMER0_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000D004) LPTIMER flag clear register </i>
//    <loc> ( (unsigned int)((LPTIMER0_ICR >> 0) & 0xFFFFFFFF), ((LPTIMER0_ICR = (LPTIMER0_ICR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_CMPM </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_CMPOK </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_ARROK </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_UP </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_DOWN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_CFGROK </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ICR_CROK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_IER  ------------------------------
// SVD Line: 16783

unsigned int LPTIMER0_IER __AT (0x4000D008);



// --------------------------  Field Item: LPTIMER0_IER_ADDRFAULTEN  ------------------------------
// SVD Line: 16792

//  <item> SFDITEM_FIELD__LPTIMER0_IER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D008) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_IER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_IER  ----------------------------------
// SVD Line: 16783

//  <rtree> SFDITEM_REG__LPTIMER0_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D008) LPTIMER interrupt enable register </i>
//    <loc> ( (unsigned int)((LPTIMER0_IER >> 0) & 0xFFFFFFFF), ((LPTIMER0_IER = (LPTIMER0_IER & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_IER_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LPTIMER0_CFGR  ------------------------------
// SVD Line: 16801

unsigned int LPTIMER0_CFGR __AT (0x4000D00C);



// --------------------------  Field Item: LPTIMER0_CFGR_ADDRFAULTEN  -----------------------------
// SVD Line: 16810

//  <item> SFDITEM_FIELD__LPTIMER0_CFGR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D00C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CFGR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_CFGR  ---------------------------------
// SVD Line: 16801

//  <rtree> SFDITEM_REG__LPTIMER0_CFGR
//    <name> CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D00C) LPTIMER configuration register </i>
//    <loc> ( (unsigned int)((LPTIMER0_CFGR >> 0) & 0xFFFFFFFF), ((LPTIMER0_CFGR = (LPTIMER0_CFGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_CFGR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_CR  -------------------------------
// SVD Line: 16819

unsigned int LPTIMER0_CR __AT (0x4000D010);



// ---------------------------  Field Item: LPTIMER0_CR_ADDRFAULTEN  ------------------------------
// SVD Line: 16828

//  <item> SFDITEM_FIELD__LPTIMER0_CR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D010) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIMER0_CR  ----------------------------------
// SVD Line: 16819

//  <rtree> SFDITEM_REG__LPTIMER0_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D010) LPTIMER control register </i>
//    <loc> ( (unsigned int)((LPTIMER0_CR >> 0) & 0xFFFFFFFF), ((LPTIMER0_CR = (LPTIMER0_CR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_CR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_CMP  ------------------------------
// SVD Line: 16837

unsigned int LPTIMER0_CMP __AT (0x4000D014);



// --------------------------  Field Item: LPTIMER0_CMP_ADDRFAULTEN  ------------------------------
// SVD Line: 16846

//  <item> SFDITEM_FIELD__LPTIMER0_CMP_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D014) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CMP ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER0_CMP_CLKDISFAULTEN  -----------------------------
// SVD Line: 16853

//  <item> SFDITEM_FIELD__LPTIMER0_CMP_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D014) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CMP ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER0_CMP_PWRUPONDEMAND  -----------------------------
// SVD Line: 16860

//  <item> SFDITEM_FIELD__LPTIMER0_CMP_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D014) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CMP ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPTIMER0_CMP_IFCREADCLEAR  -----------------------------
// SVD Line: 16867

//  <item> SFDITEM_FIELD__LPTIMER0_CMP_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D014) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CMP ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_CMP  ----------------------------------
// SVD Line: 16837

//  <rtree> SFDITEM_REG__LPTIMER0_CMP
//    <name> CMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D014) LPTIMER compare register </i>
//    <loc> ( (unsigned int)((LPTIMER0_CMP >> 0) & 0xFFFFFFFF), ((LPTIMER0_CMP = (LPTIMER0_CMP & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_CMP_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CMP_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CMP_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CMP_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_ARR  ------------------------------
// SVD Line: 16876

unsigned int LPTIMER0_ARR __AT (0x4000D018);



// --------------------------  Field Item: LPTIMER0_ARR_ADDRFAULTEN  ------------------------------
// SVD Line: 16885

//  <item> SFDITEM_FIELD__LPTIMER0_ARR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D018) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ARR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER0_ARR_CLKDISFAULTEN  -----------------------------
// SVD Line: 16892

//  <item> SFDITEM_FIELD__LPTIMER0_ARR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D018) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ARR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER0_ARR_PWRUPONDEMAND  -----------------------------
// SVD Line: 16899

//  <item> SFDITEM_FIELD__LPTIMER0_ARR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D018) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ARR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPTIMER0_ARR_IFCREADCLEAR  -----------------------------
// SVD Line: 16906

//  <item> SFDITEM_FIELD__LPTIMER0_ARR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D018) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_ARR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_ARR  ----------------------------------
// SVD Line: 16876

//  <rtree> SFDITEM_REG__LPTIMER0_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D018) LPTIMER autoreload register </i>
//    <loc> ( (unsigned int)((LPTIMER0_ARR >> 0) & 0xFFFFFFFF), ((LPTIMER0_ARR = (LPTIMER0_ARR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_ARR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ARR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ARR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__LPTIMER0_ARR_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_CNT  ------------------------------
// SVD Line: 16915

unsigned int LPTIMER0_CNT __AT (0x4000D01C);



// --------------------------  Field Item: LPTIMER0_CNT_ADDRFAULTEN  ------------------------------
// SVD Line: 16924

//  <item> SFDITEM_FIELD__LPTIMER0_CNT_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D01C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CNT ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER0_CNT_CLKDISFAULTEN  -----------------------------
// SVD Line: 16931

//  <item> SFDITEM_FIELD__LPTIMER0_CNT_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D01C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CNT ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER0_CNT_PWRUPONDEMAND  -----------------------------
// SVD Line: 16938

//  <item> SFDITEM_FIELD__LPTIMER0_CNT_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D01C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CNT ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPTIMER0_CNT_IFCREADCLEAR  -----------------------------
// SVD Line: 16945

//  <item> SFDITEM_FIELD__LPTIMER0_CNT_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D01C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CNT ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_CNT  ----------------------------------
// SVD Line: 16915

//  <rtree> SFDITEM_REG__LPTIMER0_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D01C) LPTIMER counter register </i>
//    <loc> ( (unsigned int)((LPTIMER0_CNT >> 0) & 0xFFFFFFFF), ((LPTIMER0_CNT = (LPTIMER0_CNT & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_CNT_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CNT_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CNT_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CNT_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_CSR  ------------------------------
// SVD Line: 16954

unsigned int LPTIMER0_CSR __AT (0x4000D020);



// ------------------------------  Field Item: LPTIMER0_CSR_CMPM  ---------------------------------
// SVD Line: 16963

//  <item> SFDITEM_FIELD__LPTIMER0_CSR_CMPM
//    <name> CMPM </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000D020) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CSR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_CSR_ARRM  ---------------------------------
// SVD Line: 16970

//  <item> SFDITEM_FIELD__LPTIMER0_CSR_ARRM
//    <name> ARRM </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000D020) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CSR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIMER0_CSR_EXTTRIG  --------------------------------
// SVD Line: 16977

//  <item> SFDITEM_FIELD__LPTIMER0_CSR_EXTTRIG
//    <name> EXTTRIG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000D020) External trigger edge event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CSR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIMER0_CSR_UP  ----------------------------------
// SVD Line: 16984

//  <item> SFDITEM_FIELD__LPTIMER0_CSR_UP
//    <name> UP </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000D020) Counter direction change down to up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CSR ) </loc>
//      <o.3..3> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER0_CSR_DOWN  ---------------------------------
// SVD Line: 16991

//  <item> SFDITEM_FIELD__LPTIMER0_CSR_DOWN
//    <name> DOWN </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000D020) Counter direction change up to down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_CSR ) </loc>
//      <o.4..4> DOWN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_CSR  ----------------------------------
// SVD Line: 16954

//  <rtree> SFDITEM_REG__LPTIMER0_CSR
//    <name> CSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D020) LPTIMER CSR register </i>
//    <loc> ( (unsigned int)((LPTIMER0_CSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_CSR_CMPM </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CSR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CSR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CSR_UP </item>
//    <item> SFDITEM_FIELD__LPTIMER0_CSR_DOWN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER0_SR1  ------------------------------
// SVD Line: 17000

unsigned int LPTIMER0_SR1 __AT (0x4000D024);



// --------------------------  Field Item: LPTIMER0_SR1_ADDRFAULTEN  ------------------------------
// SVD Line: 17009

//  <item> SFDITEM_FIELD__LPTIMER0_SR1_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D024) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER0_SR1 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER0_SR1  ----------------------------------
// SVD Line: 17000

//  <rtree> SFDITEM_REG__LPTIMER0_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D024) LPTIMER SR1 register </i>
//    <loc> ( (unsigned int)((LPTIMER0_SR1 >> 0) & 0xFFFFFFFF), ((LPTIMER0_SR1 = (LPTIMER0_SR1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER0_SR1_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: LPTIMER0  -----------------------------------
// SVD Line: 16621

//  <view> LPTIMER0
//    <name> LPTIMER0 </name>
//    <item> SFDITEM_REG__LPTIMER0_ISR </item>
//    <item> SFDITEM_REG__LPTIMER0_ICR </item>
//    <item> SFDITEM_REG__LPTIMER0_IER </item>
//    <item> SFDITEM_REG__LPTIMER0_CFGR </item>
//    <item> SFDITEM_REG__LPTIMER0_CR </item>
//    <item> SFDITEM_REG__LPTIMER0_CMP </item>
//    <item> SFDITEM_REG__LPTIMER0_ARR </item>
//    <item> SFDITEM_REG__LPTIMER0_CNT </item>
//    <item> SFDITEM_REG__LPTIMER0_CSR </item>
//    <item> SFDITEM_REG__LPTIMER0_SR1 </item>
//  </view>
//  


// ---------------------------  Register Item Address: LPTIMER1_ISR  ------------------------------
// SVD Line: 17034

unsigned int LPTIMER1_ISR __AT (0x4000D800);



// ------------------------------  Field Item: LPTIMER1_ISR_CMPM  ---------------------------------
// SVD Line: 17043

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_CMPM
//    <name> CMPM </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000D800) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_ISR_ARRM  ---------------------------------
// SVD Line: 17050

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_ARRM
//    <name> ARRM </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000D800) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIMER1_ISR_EXTTRIG  --------------------------------
// SVD Line: 17057

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_EXTTRIG
//    <name> EXTTRIG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000D800) External trigger edge event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER1_ISR_CMPOK  ---------------------------------
// SVD Line: 17064

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_CMPOK
//    <name> CMPOK </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000D800) Compare register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.3..3> CMPOK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER1_ISR_ARROK  ---------------------------------
// SVD Line: 17071

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_ARROK
//    <name> ARROK </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000D800) Autoreload register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.4..4> ARROK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIMER1_ISR_UP  ----------------------------------
// SVD Line: 17078

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_UP
//    <name> UP </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000D800) Counter direction change down to up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.5..5> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_ISR_DOWN  ---------------------------------
// SVD Line: 17085

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_DOWN
//    <name> DOWN </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x4000D800) Counter direction change up to down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.6..6> DOWN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER1_ISR_CFGROK  --------------------------------
// SVD Line: 17092

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_CFGROK
//    <name> CFGROK </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000D800) CFGR register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.7..7> CFGROK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_ISR_CROK  ---------------------------------
// SVD Line: 17099

//  <item> SFDITEM_FIELD__LPTIMER1_ISR_CROK
//    <name> CROK </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000D800) CR register register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ISR ) </loc>
//      <o.8..8> CROK
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_ISR  ----------------------------------
// SVD Line: 17034

//  <rtree> SFDITEM_REG__LPTIMER1_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D800) LPTIMER flag and status register </i>
//    <loc> ( (unsigned int)((LPTIMER1_ISR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_CMPM </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_CMPOK </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_ARROK </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_UP </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_DOWN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_CFGROK </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ISR_CROK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_ICR  ------------------------------
// SVD Line: 17108

unsigned int LPTIMER1_ICR __AT (0x4000D804);



// ------------------------------  Field Item: LPTIMER1_ICR_CMPM  ---------------------------------
// SVD Line: 17117

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_CMPM
//    <name> CMPM </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000D804) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_ICR_ARRM  ---------------------------------
// SVD Line: 17124

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_ARRM
//    <name> ARRM </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x4000D804) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIMER1_ICR_EXTTRIG  --------------------------------
// SVD Line: 17131

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_EXTTRIG
//    <name> EXTTRIG </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x4000D804) External trigger edge event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER1_ICR_CMPOK  ---------------------------------
// SVD Line: 17138

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_CMPOK
//    <name> CMPOK </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x4000D804) Compare register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.3..3> CMPOK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER1_ICR_ARROK  ---------------------------------
// SVD Line: 17145

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_ARROK
//    <name> ARROK </name>
//    <w> 
//    <i> [Bit 4] WO (@ 0x4000D804) Autoreload register update OK </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.4..4> ARROK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIMER1_ICR_UP  ----------------------------------
// SVD Line: 17152

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_UP
//    <name> UP </name>
//    <w> 
//    <i> [Bit 5] WO (@ 0x4000D804) Counter direction change down to up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.5..5> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_ICR_DOWN  ---------------------------------
// SVD Line: 17159

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_DOWN
//    <name> DOWN </name>
//    <w> 
//    <i> [Bit 6] WO (@ 0x4000D804) Counter direction change up to down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.6..6> DOWN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: LPTIMER1_ICR_CFGROK  --------------------------------
// SVD Line: 17166

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_CFGROK
//    <name> CFGROK </name>
//    <w> 
//    <i> [Bit 7] WO (@ 0x4000D804) CFGR register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.7..7> CFGROK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_ICR_CROK  ---------------------------------
// SVD Line: 17173

//  <item> SFDITEM_FIELD__LPTIMER1_ICR_CROK
//    <name> CROK </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x4000D804) CR register register operation status </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ICR ) </loc>
//      <o.8..8> CROK
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_ICR  ----------------------------------
// SVD Line: 17108

//  <rtree> SFDITEM_REG__LPTIMER1_ICR
//    <name> ICR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000D804) LPTIMER flag clear register </i>
//    <loc> ( (unsigned int)((LPTIMER1_ICR >> 0) & 0xFFFFFFFF), ((LPTIMER1_ICR = (LPTIMER1_ICR & ~(0x1FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_CMPM </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_CMPOK </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_ARROK </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_UP </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_DOWN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_CFGROK </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ICR_CROK </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_IER  ------------------------------
// SVD Line: 17182

unsigned int LPTIMER1_IER __AT (0x4000D808);



// --------------------------  Field Item: LPTIMER1_IER_ADDRFAULTEN  ------------------------------
// SVD Line: 17191

//  <item> SFDITEM_FIELD__LPTIMER1_IER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D808) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_IER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_IER  ----------------------------------
// SVD Line: 17182

//  <rtree> SFDITEM_REG__LPTIMER1_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D808) LPTIMER interrupt enable register </i>
//    <loc> ( (unsigned int)((LPTIMER1_IER >> 0) & 0xFFFFFFFF), ((LPTIMER1_IER = (LPTIMER1_IER & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_IER_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: LPTIMER1_CFGR  ------------------------------
// SVD Line: 17200

unsigned int LPTIMER1_CFGR __AT (0x4000D80C);



// --------------------------  Field Item: LPTIMER1_CFGR_ADDRFAULTEN  -----------------------------
// SVD Line: 17209

//  <item> SFDITEM_FIELD__LPTIMER1_CFGR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D80C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CFGR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_CFGR  ---------------------------------
// SVD Line: 17200

//  <rtree> SFDITEM_REG__LPTIMER1_CFGR
//    <name> CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D80C) LPTIMER configuration register </i>
//    <loc> ( (unsigned int)((LPTIMER1_CFGR >> 0) & 0xFFFFFFFF), ((LPTIMER1_CFGR = (LPTIMER1_CFGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_CFGR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_CR  -------------------------------
// SVD Line: 17218

unsigned int LPTIMER1_CR __AT (0x4000D810);



// ---------------------------  Field Item: LPTIMER1_CR_ADDRFAULTEN  ------------------------------
// SVD Line: 17227

//  <item> SFDITEM_FIELD__LPTIMER1_CR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D810) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LPTIMER1_CR  ----------------------------------
// SVD Line: 17218

//  <rtree> SFDITEM_REG__LPTIMER1_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D810) LPTIMER control register </i>
//    <loc> ( (unsigned int)((LPTIMER1_CR >> 0) & 0xFFFFFFFF), ((LPTIMER1_CR = (LPTIMER1_CR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_CR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_CMP  ------------------------------
// SVD Line: 17236

unsigned int LPTIMER1_CMP __AT (0x4000D814);



// --------------------------  Field Item: LPTIMER1_CMP_ADDRFAULTEN  ------------------------------
// SVD Line: 17245

//  <item> SFDITEM_FIELD__LPTIMER1_CMP_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D814) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CMP ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER1_CMP_CLKDISFAULTEN  -----------------------------
// SVD Line: 17252

//  <item> SFDITEM_FIELD__LPTIMER1_CMP_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D814) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CMP ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER1_CMP_PWRUPONDEMAND  -----------------------------
// SVD Line: 17259

//  <item> SFDITEM_FIELD__LPTIMER1_CMP_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D814) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CMP ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPTIMER1_CMP_IFCREADCLEAR  -----------------------------
// SVD Line: 17266

//  <item> SFDITEM_FIELD__LPTIMER1_CMP_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D814) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CMP ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_CMP  ----------------------------------
// SVD Line: 17236

//  <rtree> SFDITEM_REG__LPTIMER1_CMP
//    <name> CMP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D814) LPTIMER compare register </i>
//    <loc> ( (unsigned int)((LPTIMER1_CMP >> 0) & 0xFFFFFFFF), ((LPTIMER1_CMP = (LPTIMER1_CMP & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_CMP_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CMP_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CMP_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CMP_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_ARR  ------------------------------
// SVD Line: 17275

unsigned int LPTIMER1_ARR __AT (0x4000D818);



// --------------------------  Field Item: LPTIMER1_ARR_ADDRFAULTEN  ------------------------------
// SVD Line: 17284

//  <item> SFDITEM_FIELD__LPTIMER1_ARR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D818) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ARR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER1_ARR_CLKDISFAULTEN  -----------------------------
// SVD Line: 17291

//  <item> SFDITEM_FIELD__LPTIMER1_ARR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D818) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ARR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER1_ARR_PWRUPONDEMAND  -----------------------------
// SVD Line: 17298

//  <item> SFDITEM_FIELD__LPTIMER1_ARR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D818) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ARR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPTIMER1_ARR_IFCREADCLEAR  -----------------------------
// SVD Line: 17305

//  <item> SFDITEM_FIELD__LPTIMER1_ARR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D818) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_ARR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_ARR  ----------------------------------
// SVD Line: 17275

//  <rtree> SFDITEM_REG__LPTIMER1_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D818) LPTIMER autoreload register </i>
//    <loc> ( (unsigned int)((LPTIMER1_ARR >> 0) & 0xFFFFFFFF), ((LPTIMER1_ARR = (LPTIMER1_ARR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_ARR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ARR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ARR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__LPTIMER1_ARR_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_CNT  ------------------------------
// SVD Line: 17314

unsigned int LPTIMER1_CNT __AT (0x4000D81C);



// --------------------------  Field Item: LPTIMER1_CNT_ADDRFAULTEN  ------------------------------
// SVD Line: 17323

//  <item> SFDITEM_FIELD__LPTIMER1_CNT_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D81C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CNT ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER1_CNT_CLKDISFAULTEN  -----------------------------
// SVD Line: 17330

//  <item> SFDITEM_FIELD__LPTIMER1_CNT_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D81C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CNT ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: LPTIMER1_CNT_PWRUPONDEMAND  -----------------------------
// SVD Line: 17337

//  <item> SFDITEM_FIELD__LPTIMER1_CNT_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D81C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CNT ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// --------------------------  Field Item: LPTIMER1_CNT_IFCREADCLEAR  -----------------------------
// SVD Line: 17344

//  <item> SFDITEM_FIELD__LPTIMER1_CNT_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D81C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CNT ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_CNT  ----------------------------------
// SVD Line: 17314

//  <rtree> SFDITEM_REG__LPTIMER1_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D81C) LPTIMER counter register </i>
//    <loc> ( (unsigned int)((LPTIMER1_CNT >> 0) & 0xFFFFFFFF), ((LPTIMER1_CNT = (LPTIMER1_CNT & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_CNT_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CNT_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CNT_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CNT_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_CSR  ------------------------------
// SVD Line: 17353

unsigned int LPTIMER1_CSR __AT (0x4000D820);



// ------------------------------  Field Item: LPTIMER1_CSR_CMPM  ---------------------------------
// SVD Line: 17362

//  <item> SFDITEM_FIELD__LPTIMER1_CSR_CMPM
//    <name> CMPM </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000D820) Compare match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CSR ) </loc>
//      <o.0..0> CMPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_CSR_ARRM  ---------------------------------
// SVD Line: 17369

//  <item> SFDITEM_FIELD__LPTIMER1_CSR_ARRM
//    <name> ARRM </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4000D820) Autoreload match </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CSR ) </loc>
//      <o.1..1> ARRM
//    </check>
//  </item>
//  


// ----------------------------  Field Item: LPTIMER1_CSR_EXTTRIG  --------------------------------
// SVD Line: 17376

//  <item> SFDITEM_FIELD__LPTIMER1_CSR_EXTTRIG
//    <name> EXTTRIG </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000D820) External trigger edge event </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CSR ) </loc>
//      <o.2..2> EXTTRIG
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LPTIMER1_CSR_UP  ----------------------------------
// SVD Line: 17383

//  <item> SFDITEM_FIELD__LPTIMER1_CSR_UP
//    <name> UP </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000D820) Counter direction change down to up </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CSR ) </loc>
//      <o.3..3> UP
//    </check>
//  </item>
//  


// ------------------------------  Field Item: LPTIMER1_CSR_DOWN  ---------------------------------
// SVD Line: 17390

//  <item> SFDITEM_FIELD__LPTIMER1_CSR_DOWN
//    <name> DOWN </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x4000D820) Counter direction change up to down </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_CSR ) </loc>
//      <o.4..4> DOWN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_CSR  ----------------------------------
// SVD Line: 17353

//  <rtree> SFDITEM_REG__LPTIMER1_CSR
//    <name> CSR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D820) LPTIMER CSR register </i>
//    <loc> ( (unsigned int)((LPTIMER1_CSR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_CSR_CMPM </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CSR_ARRM </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CSR_EXTTRIG </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CSR_UP </item>
//    <item> SFDITEM_FIELD__LPTIMER1_CSR_DOWN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: LPTIMER1_SR1  ------------------------------
// SVD Line: 17399

unsigned int LPTIMER1_SR1 __AT (0x4000D824);



// --------------------------  Field Item: LPTIMER1_SR1_ADDRFAULTEN  ------------------------------
// SVD Line: 17408

//  <item> SFDITEM_FIELD__LPTIMER1_SR1_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D824) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LPTIMER1_SR1 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: LPTIMER1_SR1  ----------------------------------
// SVD Line: 17399

//  <rtree> SFDITEM_REG__LPTIMER1_SR1
//    <name> SR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000D824) LPTIMER SR1 register </i>
//    <loc> ( (unsigned int)((LPTIMER1_SR1 >> 0) & 0xFFFFFFFF), ((LPTIMER1_SR1 = (LPTIMER1_SR1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LPTIMER1_SR1_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: LPTIMER1  -----------------------------------
// SVD Line: 17020

//  <view> LPTIMER1
//    <name> LPTIMER1 </name>
//    <item> SFDITEM_REG__LPTIMER1_ISR </item>
//    <item> SFDITEM_REG__LPTIMER1_ICR </item>
//    <item> SFDITEM_REG__LPTIMER1_IER </item>
//    <item> SFDITEM_REG__LPTIMER1_CFGR </item>
//    <item> SFDITEM_REG__LPTIMER1_CR </item>
//    <item> SFDITEM_REG__LPTIMER1_CMP </item>
//    <item> SFDITEM_REG__LPTIMER1_ARR </item>
//    <item> SFDITEM_REG__LPTIMER1_CNT </item>
//    <item> SFDITEM_REG__LPTIMER1_CSR </item>
//    <item> SFDITEM_REG__LPTIMER1_SR1 </item>
//  </view>
//  


// -----------------------------  Register Item Address: I2S_IER  ---------------------------------
// SVD Line: 17433

unsigned int I2S_IER __AT (0x40002000);



// -----------------------------  Field Item: I2S_IER_ADDRFAULTEN  --------------------------------
// SVD Line: 17442

//  <item> SFDITEM_FIELD__I2S_IER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002000) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IER_CLKDISFAULTEN  -------------------------------
// SVD Line: 17449

//  <item> SFDITEM_FIELD__I2S_IER_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002000) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IER ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IER_PWRUPONDEMAND  -------------------------------
// SVD Line: 17456

//  <item> SFDITEM_FIELD__I2S_IER_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002000) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IER ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IER_IFCREADCLEAR  --------------------------------
// SVD Line: 17463

//  <item> SFDITEM_FIELD__I2S_IER_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002000) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IER ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_IER  ------------------------------------
// SVD Line: 17433

//  <rtree> SFDITEM_REG__I2S_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002000) enable register </i>
//    <loc> ( (unsigned int)((I2S_IER >> 0) & 0xFFFFFFFF), ((I2S_IER = (I2S_IER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_IER_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_IER_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_IER_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_IER_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_IRER  --------------------------------
// SVD Line: 17472

unsigned int I2S_IRER __AT (0x40002004);



// ----------------------------  Field Item: I2S_IRER_ADDRFAULTEN  --------------------------------
// SVD Line: 17481

//  <item> SFDITEM_FIELD__I2S_IRER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002004) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IRER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_IRER_CLKDISFAULTEN  -------------------------------
// SVD Line: 17488

//  <item> SFDITEM_FIELD__I2S_IRER_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002004) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IRER ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_IRER_PWRUPONDEMAND  -------------------------------
// SVD Line: 17495

//  <item> SFDITEM_FIELD__I2S_IRER_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002004) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IRER ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IRER_IFCREADCLEAR  -------------------------------
// SVD Line: 17502

//  <item> SFDITEM_FIELD__I2S_IRER_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002004) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IRER ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_IRER  ------------------------------------
// SVD Line: 17472

//  <rtree> SFDITEM_REG__I2S_IRER
//    <name> IRER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002004) receiver block enable register </i>
//    <loc> ( (unsigned int)((I2S_IRER >> 0) & 0xFFFFFFFF), ((I2S_IRER = (I2S_IRER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_IRER_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_IRER_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_IRER_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_IRER_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_ITER  --------------------------------
// SVD Line: 17511

unsigned int I2S_ITER __AT (0x40002008);



// ----------------------------  Field Item: I2S_ITER_ADDRFAULTEN  --------------------------------
// SVD Line: 17520

//  <item> SFDITEM_FIELD__I2S_ITER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002008) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ITER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_ITER_CLKDISFAULTEN  -------------------------------
// SVD Line: 17527

//  <item> SFDITEM_FIELD__I2S_ITER_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002008) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ITER ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_ITER_PWRUPONDEMAND  -------------------------------
// SVD Line: 17534

//  <item> SFDITEM_FIELD__I2S_ITER_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002008) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ITER ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ITER_IFCREADCLEAR  -------------------------------
// SVD Line: 17541

//  <item> SFDITEM_FIELD__I2S_ITER_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002008) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ITER ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_ITER  ------------------------------------
// SVD Line: 17511

//  <rtree> SFDITEM_REG__I2S_ITER
//    <name> ITER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002008) transmitter block enable register </i>
//    <loc> ( (unsigned int)((I2S_ITER >> 0) & 0xFFFFFFFF), ((I2S_ITER = (I2S_ITER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_ITER_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_ITER_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_ITER_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_ITER_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_CER  ---------------------------------
// SVD Line: 17550

unsigned int I2S_CER __AT (0x4000200C);



// -----------------------------  Field Item: I2S_CER_ADDRFAULTEN  --------------------------------
// SVD Line: 17559

//  <item> SFDITEM_FIELD__I2S_CER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000200C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_CER_CLKDISFAULTEN  -------------------------------
// SVD Line: 17566

//  <item> SFDITEM_FIELD__I2S_CER_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000200C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CER ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_CER_PWRUPONDEMAND  -------------------------------
// SVD Line: 17573

//  <item> SFDITEM_FIELD__I2S_CER_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000200C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CER ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_CER_IFCREADCLEAR  --------------------------------
// SVD Line: 17580

//  <item> SFDITEM_FIELD__I2S_CER_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000200C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CER ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_CER  ------------------------------------
// SVD Line: 17550

//  <rtree> SFDITEM_REG__I2S_CER
//    <name> CER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000200C) clock enable register </i>
//    <loc> ( (unsigned int)((I2S_CER >> 0) & 0xFFFFFFFF), ((I2S_CER = (I2S_CER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_CER_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_CER_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_CER_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_CER_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_CCR  ---------------------------------
// SVD Line: 17589

unsigned int I2S_CCR __AT (0x40002010);



// -----------------------------  Field Item: I2S_CCR_ADDRFAULTEN  --------------------------------
// SVD Line: 17598

//  <item> SFDITEM_FIELD__I2S_CCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002010) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_CCR_CLKDISFAULTEN  -------------------------------
// SVD Line: 17605

//  <item> SFDITEM_FIELD__I2S_CCR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002010) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CCR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_CCR_PWRUPONDEMAND  -------------------------------
// SVD Line: 17612

//  <item> SFDITEM_FIELD__I2S_CCR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002010) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CCR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_CCR_IFCREADCLEAR  --------------------------------
// SVD Line: 17619

//  <item> SFDITEM_FIELD__I2S_CCR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002010) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_CCR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_CCR  ------------------------------------
// SVD Line: 17589

//  <rtree> SFDITEM_REG__I2S_CCR
//    <name> CCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002010) clock configuration register </i>
//    <loc> ( (unsigned int)((I2S_CCR >> 0) & 0xFFFFFFFF), ((I2S_CCR = (I2S_CCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_CCR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_CCR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_CCR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_CCR_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2S_RXFFR  --------------------------------
// SVD Line: 17628

unsigned int I2S_RXFFR __AT (0x40002014);



// ----------------------------  Field Item: I2S_RXFFR_ADDRFAULTEN  -------------------------------
// SVD Line: 17637

//  <item> SFDITEM_FIELD__I2S_RXFFR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002014) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXFFR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RXFFR_CLKDISFAULTEN  ------------------------------
// SVD Line: 17644

//  <item> SFDITEM_FIELD__I2S_RXFFR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002014) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXFFR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RXFFR_PWRUPONDEMAND  ------------------------------
// SVD Line: 17651

//  <item> SFDITEM_FIELD__I2S_RXFFR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002014) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXFFR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RXFFR_IFCREADCLEAR  -------------------------------
// SVD Line: 17658

//  <item> SFDITEM_FIELD__I2S_RXFFR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002014) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXFFR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_RXFFR  -----------------------------------
// SVD Line: 17628

//  <rtree> SFDITEM_REG__I2S_RXFFR
//    <name> RXFFR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002014) receiver block FIFO reset register </i>
//    <loc> ( (unsigned int)((I2S_RXFFR >> 0) & 0xFFFFFFFF), ((I2S_RXFFR = (I2S_RXFFR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RXFFR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RXFFR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RXFFR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RXFFR_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2S_TXFFR  --------------------------------
// SVD Line: 17667

unsigned int I2S_TXFFR __AT (0x40002018);



// ----------------------------  Field Item: I2S_TXFFR_ADDRFAULTEN  -------------------------------
// SVD Line: 17676

//  <item> SFDITEM_FIELD__I2S_TXFFR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002018) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXFFR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TXFFR_CLKDISFAULTEN  ------------------------------
// SVD Line: 17683

//  <item> SFDITEM_FIELD__I2S_TXFFR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002018) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXFFR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TXFFR_PWRUPONDEMAND  ------------------------------
// SVD Line: 17690

//  <item> SFDITEM_FIELD__I2S_TXFFR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002018) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXFFR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TXFFR_IFCREADCLEAR  -------------------------------
// SVD Line: 17697

//  <item> SFDITEM_FIELD__I2S_TXFFR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002018) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXFFR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_TXFFR  -----------------------------------
// SVD Line: 17667

//  <rtree> SFDITEM_REG__I2S_TXFFR
//    <name> TXFFR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002018) transmitter block FIFO reset register </i>
//    <loc> ( (unsigned int)((I2S_TXFFR >> 0) & 0xFFFFFFFF), ((I2S_TXFFR = (I2S_TXFFR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TXFFR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TXFFR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TXFFR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TXFFR_IFCREADCLEAR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2S_LRBR_LTHR  ------------------------------
// SVD Line: 17706

unsigned int I2S_LRBR_LTHR __AT (0x40002020);



// --------------------------  Field Item: I2S_LRBR_LTHR_ADDRFAULTEN  -----------------------------
// SVD Line: 17715

//  <item> SFDITEM_FIELD__I2S_LRBR_LTHR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002020) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_LRBR_LTHR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: I2S_LRBR_LTHR_CLKDISFAULTEN  ----------------------------
// SVD Line: 17722

//  <item> SFDITEM_FIELD__I2S_LRBR_LTHR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002020) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_LRBR_LTHR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: I2S_LRBR_LTHR_PWRUPONDEMAND  ----------------------------
// SVD Line: 17729

//  <item> SFDITEM_FIELD__I2S_LRBR_LTHR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002020) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_LRBR_LTHR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// -------------------------  Field Item: I2S_LRBR_LTHR_IFCREADCLEAR  -----------------------------
// SVD Line: 17736

//  <item> SFDITEM_FIELD__I2S_LRBR_LTHR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002020) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_LRBR_LTHR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2S_LRBR_LTHR  ---------------------------------
// SVD Line: 17706

//  <rtree> SFDITEM_REG__I2S_LRBR_LTHR
//    <name> LRBR_LTHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002020) right receive buffer register </i>
//    <loc> ( (unsigned int)((I2S_LRBR_LTHR >> 0) & 0xFFFFFFFF), ((I2S_LRBR_LTHR = (I2S_LRBR_LTHR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_LRBR_LTHR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_LRBR_LTHR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_LRBR_LTHR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_LRBR_LTHR_IFCREADCLEAR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2S_RRBR_RTHR  ------------------------------
// SVD Line: 17745

unsigned int I2S_RRBR_RTHR __AT (0x40002024);



// --------------------------  Field Item: I2S_RRBR_RTHR_ADDRFAULTEN  -----------------------------
// SVD Line: 17754

//  <item> SFDITEM_FIELD__I2S_RRBR_RTHR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002024) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRBR_RTHR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: I2S_RRBR_RTHR_CLKDISFAULTEN  ----------------------------
// SVD Line: 17761

//  <item> SFDITEM_FIELD__I2S_RRBR_RTHR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002024) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRBR_RTHR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: I2S_RRBR_RTHR_PWRUPONDEMAND  ----------------------------
// SVD Line: 17768

//  <item> SFDITEM_FIELD__I2S_RRBR_RTHR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002024) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRBR_RTHR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// -------------------------  Field Item: I2S_RRBR_RTHR_IFCREADCLEAR  -----------------------------
// SVD Line: 17775

//  <item> SFDITEM_FIELD__I2S_RRBR_RTHR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002024) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRBR_RTHR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2S_RRBR_RTHR  ---------------------------------
// SVD Line: 17745

//  <rtree> SFDITEM_REG__I2S_RRBR_RTHR
//    <name> RRBR_RTHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002024) right transmit holding register </i>
//    <loc> ( (unsigned int)((I2S_RRBR_RTHR >> 0) & 0xFFFFFFFF), ((I2S_RRBR_RTHR = (I2S_RRBR_RTHR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RRBR_RTHR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RRBR_RTHR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RRBR_RTHR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RRBR_RTHR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_RER  ---------------------------------
// SVD Line: 17784

unsigned int I2S_RER __AT (0x40002028);



// -----------------------------  Field Item: I2S_RER_ADDRFAULTEN  --------------------------------
// SVD Line: 17793

//  <item> SFDITEM_FIELD__I2S_RER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002028) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RER_CLKDISFAULTEN  -------------------------------
// SVD Line: 17800

//  <item> SFDITEM_FIELD__I2S_RER_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002028) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RER ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RER_PWRUPONDEMAND  -------------------------------
// SVD Line: 17807

//  <item> SFDITEM_FIELD__I2S_RER_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002028) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RER ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RER_IFCREADCLEAR  --------------------------------
// SVD Line: 17814

//  <item> SFDITEM_FIELD__I2S_RER_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002028) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RER ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_RER  ------------------------------------
// SVD Line: 17784

//  <rtree> SFDITEM_REG__I2S_RER
//    <name> RER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002028) receiver enable register </i>
//    <loc> ( (unsigned int)((I2S_RER >> 0) & 0xFFFFFFFF), ((I2S_RER = (I2S_RER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RER_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RER_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RER_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RER_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_TER  ---------------------------------
// SVD Line: 17823

unsigned int I2S_TER __AT (0x4000202C);



// -----------------------------  Field Item: I2S_TER_ADDRFAULTEN  --------------------------------
// SVD Line: 17832

//  <item> SFDITEM_FIELD__I2S_TER_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000202C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TER ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TER_CLKDISFAULTEN  -------------------------------
// SVD Line: 17839

//  <item> SFDITEM_FIELD__I2S_TER_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000202C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TER ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TER_PWRUPONDEMAND  -------------------------------
// SVD Line: 17846

//  <item> SFDITEM_FIELD__I2S_TER_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000202C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TER ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TER_IFCREADCLEAR  --------------------------------
// SVD Line: 17853

//  <item> SFDITEM_FIELD__I2S_TER_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000202C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TER ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_TER  ------------------------------------
// SVD Line: 17823

//  <rtree> SFDITEM_REG__I2S_TER
//    <name> TER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000202C) transmitter enable register </i>
//    <loc> ( (unsigned int)((I2S_TER >> 0) & 0xFFFFFFFF), ((I2S_TER = (I2S_TER & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TER_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TER_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TER_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TER_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_RCR  ---------------------------------
// SVD Line: 17862

unsigned int I2S_RCR __AT (0x40002030);



// -----------------------------  Field Item: I2S_RCR_ADDRFAULTEN  --------------------------------
// SVD Line: 17871

//  <item> SFDITEM_FIELD__I2S_RCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002030) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RCR_CLKDISFAULTEN  -------------------------------
// SVD Line: 17878

//  <item> SFDITEM_FIELD__I2S_RCR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002030) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RCR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RCR_PWRUPONDEMAND  -------------------------------
// SVD Line: 17885

//  <item> SFDITEM_FIELD__I2S_RCR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002030) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RCR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RCR_IFCREADCLEAR  --------------------------------
// SVD Line: 17892

//  <item> SFDITEM_FIELD__I2S_RCR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002030) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RCR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_RCR  ------------------------------------
// SVD Line: 17862

//  <rtree> SFDITEM_REG__I2S_RCR
//    <name> RCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002030) receiver configuration register </i>
//    <loc> ( (unsigned int)((I2S_RCR >> 0) & 0xFFFFFFFF), ((I2S_RCR = (I2S_RCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RCR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RCR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RCR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RCR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_TCR  ---------------------------------
// SVD Line: 17901

unsigned int I2S_TCR __AT (0x40002034);



// -----------------------------  Field Item: I2S_TCR_ADDRFAULTEN  --------------------------------
// SVD Line: 17910

//  <item> SFDITEM_FIELD__I2S_TCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002034) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TCR_CLKDISFAULTEN  -------------------------------
// SVD Line: 17917

//  <item> SFDITEM_FIELD__I2S_TCR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002034) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TCR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TCR_PWRUPONDEMAND  -------------------------------
// SVD Line: 17924

//  <item> SFDITEM_FIELD__I2S_TCR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002034) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TCR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TCR_IFCREADCLEAR  --------------------------------
// SVD Line: 17931

//  <item> SFDITEM_FIELD__I2S_TCR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002034) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TCR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_TCR  ------------------------------------
// SVD Line: 17901

//  <rtree> SFDITEM_REG__I2S_TCR
//    <name> TCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002034) transmitter configuration register </i>
//    <loc> ( (unsigned int)((I2S_TCR >> 0) & 0xFFFFFFFF), ((I2S_TCR = (I2S_TCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TCR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TCR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TCR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TCR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_ISR  ---------------------------------
// SVD Line: 17940

unsigned int I2S_ISR __AT (0x40002038);



// -----------------------------  Field Item: I2S_ISR_ADDRFAULTEN  --------------------------------
// SVD Line: 17949

//  <item> SFDITEM_FIELD__I2S_ISR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002038) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ISR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ISR_CLKDISFAULTEN  -------------------------------
// SVD Line: 17956

//  <item> SFDITEM_FIELD__I2S_ISR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002038) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ISR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ISR_PWRUPONDEMAND  -------------------------------
// SVD Line: 17963

//  <item> SFDITEM_FIELD__I2S_ISR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002038) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ISR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ISR_IFCREADCLEAR  --------------------------------
// SVD Line: 17970

//  <item> SFDITEM_FIELD__I2S_ISR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002038) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ISR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_ISR  ------------------------------------
// SVD Line: 17940

//  <rtree> SFDITEM_REG__I2S_ISR
//    <name> ISR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002038) interrupt status register </i>
//    <loc> ( (unsigned int)((I2S_ISR >> 0) & 0xFFFFFFFF), ((I2S_ISR = (I2S_ISR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_ISR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_ISR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_ISR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_ISR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_IMR  ---------------------------------
// SVD Line: 17979

unsigned int I2S_IMR __AT (0x4000203C);



// -----------------------------  Field Item: I2S_IMR_ADDRFAULTEN  --------------------------------
// SVD Line: 17988

//  <item> SFDITEM_FIELD__I2S_IMR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000203C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IMR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IMR_CLKDISFAULTEN  -------------------------------
// SVD Line: 17995

//  <item> SFDITEM_FIELD__I2S_IMR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000203C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IMR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IMR_PWRUPONDEMAND  -------------------------------
// SVD Line: 18002

//  <item> SFDITEM_FIELD__I2S_IMR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000203C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IMR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_IMR_IFCREADCLEAR  --------------------------------
// SVD Line: 18009

//  <item> SFDITEM_FIELD__I2S_IMR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000203C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_IMR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_IMR  ------------------------------------
// SVD Line: 17979

//  <rtree> SFDITEM_REG__I2S_IMR
//    <name> IMR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000203C) interrupt mask register </i>
//    <loc> ( (unsigned int)((I2S_IMR >> 0) & 0xFFFFFFFF), ((I2S_IMR = (I2S_IMR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_IMR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_IMR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_IMR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_IMR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_ROR  ---------------------------------
// SVD Line: 18018

unsigned int I2S_ROR __AT (0x40002040);



// -----------------------------  Field Item: I2S_ROR_ADDRFAULTEN  --------------------------------
// SVD Line: 18027

//  <item> SFDITEM_FIELD__I2S_ROR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002040) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ROR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ROR_CLKDISFAULTEN  -------------------------------
// SVD Line: 18034

//  <item> SFDITEM_FIELD__I2S_ROR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002040) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ROR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ROR_PWRUPONDEMAND  -------------------------------
// SVD Line: 18041

//  <item> SFDITEM_FIELD__I2S_ROR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002040) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ROR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_ROR_IFCREADCLEAR  --------------------------------
// SVD Line: 18048

//  <item> SFDITEM_FIELD__I2S_ROR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002040) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_ROR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_ROR  ------------------------------------
// SVD Line: 18018

//  <rtree> SFDITEM_REG__I2S_ROR
//    <name> ROR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002040) receiver overrun register </i>
//    <loc> ( (unsigned int)((I2S_ROR >> 0) & 0xFFFFFFFF), ((I2S_ROR = (I2S_ROR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_ROR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_ROR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_ROR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_ROR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_TOR  ---------------------------------
// SVD Line: 18057

unsigned int I2S_TOR __AT (0x40002044);



// -----------------------------  Field Item: I2S_TOR_ADDRFAULTEN  --------------------------------
// SVD Line: 18066

//  <item> SFDITEM_FIELD__I2S_TOR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002044) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TOR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TOR_CLKDISFAULTEN  -------------------------------
// SVD Line: 18073

//  <item> SFDITEM_FIELD__I2S_TOR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002044) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TOR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TOR_PWRUPONDEMAND  -------------------------------
// SVD Line: 18080

//  <item> SFDITEM_FIELD__I2S_TOR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002044) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TOR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TOR_IFCREADCLEAR  --------------------------------
// SVD Line: 18087

//  <item> SFDITEM_FIELD__I2S_TOR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002044) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TOR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_TOR  ------------------------------------
// SVD Line: 18057

//  <rtree> SFDITEM_REG__I2S_TOR
//    <name> TOR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40002044) transmitter overrun register </i>
//    <loc> ( (unsigned int)((I2S_TOR >> 0) & 0xFFFFFFFF), ((I2S_TOR = (I2S_TOR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TOR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TOR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TOR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TOR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_RFCR  --------------------------------
// SVD Line: 18096

unsigned int I2S_RFCR __AT (0x40002048);



// ----------------------------  Field Item: I2S_RFCR_ADDRFAULTEN  --------------------------------
// SVD Line: 18105

//  <item> SFDITEM_FIELD__I2S_RFCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002048) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RFCR_CLKDISFAULTEN  -------------------------------
// SVD Line: 18112

//  <item> SFDITEM_FIELD__I2S_RFCR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002048) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFCR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RFCR_PWRUPONDEMAND  -------------------------------
// SVD Line: 18119

//  <item> SFDITEM_FIELD__I2S_RFCR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002048) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFCR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RFCR_IFCREADCLEAR  -------------------------------
// SVD Line: 18126

//  <item> SFDITEM_FIELD__I2S_RFCR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002048) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFCR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_RFCR  ------------------------------------
// SVD Line: 18096

//  <rtree> SFDITEM_REG__I2S_RFCR
//    <name> RFCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40002048) receiver FIFO configuration register </i>
//    <loc> ( (unsigned int)((I2S_RFCR >> 0) & 0xFFFFFFFF), ((I2S_RFCR = (I2S_RFCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RFCR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RFCR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RFCR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RFCR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_TFCR  --------------------------------
// SVD Line: 18135

unsigned int I2S_TFCR __AT (0x4000204C);



// ----------------------------  Field Item: I2S_TFCR_ADDRFAULTEN  --------------------------------
// SVD Line: 18144

//  <item> SFDITEM_FIELD__I2S_TFCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000204C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TFCR_CLKDISFAULTEN  -------------------------------
// SVD Line: 18151

//  <item> SFDITEM_FIELD__I2S_TFCR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000204C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFCR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TFCR_PWRUPONDEMAND  -------------------------------
// SVD Line: 18158

//  <item> SFDITEM_FIELD__I2S_TFCR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000204C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFCR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TFCR_IFCREADCLEAR  -------------------------------
// SVD Line: 18165

//  <item> SFDITEM_FIELD__I2S_TFCR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000204C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFCR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_TFCR  ------------------------------------
// SVD Line: 18135

//  <rtree> SFDITEM_REG__I2S_TFCR
//    <name> TFCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000204C) transmitter FIFO configuration register </i>
//    <loc> ( (unsigned int)((I2S_TFCR >> 0) & 0xFFFFFFFF), ((I2S_TFCR = (I2S_TFCR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TFCR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TFCR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TFCR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TFCR_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_RFF  ---------------------------------
// SVD Line: 18174

unsigned int I2S_RFF __AT (0x40002050);



// -----------------------------  Field Item: I2S_RFF_ADDRFAULTEN  --------------------------------
// SVD Line: 18183

//  <item> SFDITEM_FIELD__I2S_RFF_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002050) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFF ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RFF_CLKDISFAULTEN  -------------------------------
// SVD Line: 18190

//  <item> SFDITEM_FIELD__I2S_RFF_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002050) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFF ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RFF_PWRUPONDEMAND  -------------------------------
// SVD Line: 18197

//  <item> SFDITEM_FIELD__I2S_RFF_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002050) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFF ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_RFF_IFCREADCLEAR  --------------------------------
// SVD Line: 18204

//  <item> SFDITEM_FIELD__I2S_RFF_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002050) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RFF ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_RFF  ------------------------------------
// SVD Line: 18174

//  <rtree> SFDITEM_REG__I2S_RFF
//    <name> RFF </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002050) receiver FIFO flush register </i>
//    <loc> ( (unsigned int)((I2S_RFF >> 0) & 0xFFFFFFFF), ((I2S_RFF = (I2S_RFF & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RFF_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RFF_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RFF_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RFF_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: I2S_TFF  ---------------------------------
// SVD Line: 18213

unsigned int I2S_TFF __AT (0x40002054);



// -----------------------------  Field Item: I2S_TFF_ADDRFAULTEN  --------------------------------
// SVD Line: 18222

//  <item> SFDITEM_FIELD__I2S_TFF_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40002054) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFF ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TFF_CLKDISFAULTEN  -------------------------------
// SVD Line: 18229

//  <item> SFDITEM_FIELD__I2S_TFF_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40002054) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFF ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TFF_PWRUPONDEMAND  -------------------------------
// SVD Line: 18236

//  <item> SFDITEM_FIELD__I2S_TFF_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40002054) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFF ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2S_TFF_IFCREADCLEAR  --------------------------------
// SVD Line: 18243

//  <item> SFDITEM_FIELD__I2S_TFF_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40002054) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TFF ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: I2S_TFF  ------------------------------------
// SVD Line: 18213

//  <rtree> SFDITEM_REG__I2S_TFF
//    <name> TFF </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40002054) transmitter FIFO flush register </i>
//    <loc> ( (unsigned int)((I2S_TFF >> 0) & 0xFFFFFFFF), ((I2S_TFF = (I2S_TFF & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TFF_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TFF_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TFF_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TFF_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2S_RXDMA  --------------------------------
// SVD Line: 18252

unsigned int I2S_RXDMA __AT (0x400021C0);



// ----------------------------  Field Item: I2S_RXDMA_ADDRFAULTEN  -------------------------------
// SVD Line: 18261

//  <item> SFDITEM_FIELD__I2S_RXDMA_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021C0) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXDMA ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RXDMA_CLKDISFAULTEN  ------------------------------
// SVD Line: 18268

//  <item> SFDITEM_FIELD__I2S_RXDMA_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021C0) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXDMA ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RXDMA_PWRUPONDEMAND  ------------------------------
// SVD Line: 18275

//  <item> SFDITEM_FIELD__I2S_RXDMA_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021C0) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXDMA ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RXDMA_IFCREADCLEAR  -------------------------------
// SVD Line: 18282

//  <item> SFDITEM_FIELD__I2S_RXDMA_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021C0) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RXDMA ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_RXDMA  -----------------------------------
// SVD Line: 18252

//  <rtree> SFDITEM_REG__I2S_RXDMA
//    <name> RXDMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400021C0) receiver block dma register </i>
//    <loc> ( (unsigned int)((I2S_RXDMA >> 0) & 0xFFFFFFFF), ((I2S_RXDMA = (I2S_RXDMA & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RXDMA_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RXDMA_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RXDMA_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RXDMA_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2S_RRXDMA  -------------------------------
// SVD Line: 18291

unsigned int I2S_RRXDMA __AT (0x400021C4);



// ---------------------------  Field Item: I2S_RRXDMA_ADDRFAULTEN  -------------------------------
// SVD Line: 18300

//  <item> SFDITEM_FIELD__I2S_RRXDMA_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021C4) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRXDMA ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2S_RRXDMA_CLKDISFAULTEN  ------------------------------
// SVD Line: 18307

//  <item> SFDITEM_FIELD__I2S_RRXDMA_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021C4) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRXDMA ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2S_RRXDMA_PWRUPONDEMAND  ------------------------------
// SVD Line: 18314

//  <item> SFDITEM_FIELD__I2S_RRXDMA_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021C4) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRXDMA ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RRXDMA_IFCREADCLEAR  ------------------------------
// SVD Line: 18321

//  <item> SFDITEM_FIELD__I2S_RRXDMA_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021C4) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RRXDMA ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: I2S_RRXDMA  -----------------------------------
// SVD Line: 18291

//  <rtree> SFDITEM_REG__I2S_RRXDMA
//    <name> RRXDMA </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400021C4) reset receiver block dma register </i>
//    <loc> ( (unsigned int)((I2S_RRXDMA >> 0) & 0xFFFFFFFF), ((I2S_RRXDMA = (I2S_RRXDMA & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RRXDMA_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RRXDMA_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RRXDMA_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RRXDMA_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2S_TXDMA  --------------------------------
// SVD Line: 18330

unsigned int I2S_TXDMA __AT (0x400021C8);



// ----------------------------  Field Item: I2S_TXDMA_ADDRFAULTEN  -------------------------------
// SVD Line: 18339

//  <item> SFDITEM_FIELD__I2S_TXDMA_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021C8) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXDMA ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TXDMA_CLKDISFAULTEN  ------------------------------
// SVD Line: 18346

//  <item> SFDITEM_FIELD__I2S_TXDMA_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021C8) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXDMA ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TXDMA_PWRUPONDEMAND  ------------------------------
// SVD Line: 18353

//  <item> SFDITEM_FIELD__I2S_TXDMA_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021C8) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXDMA ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_TXDMA_IFCREADCLEAR  -------------------------------
// SVD Line: 18360

//  <item> SFDITEM_FIELD__I2S_TXDMA_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021C8) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_TXDMA ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2S_TXDMA  -----------------------------------
// SVD Line: 18330

//  <rtree> SFDITEM_REG__I2S_TXDMA
//    <name> TXDMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400021C8) transmitter block dma register </i>
//    <loc> ( (unsigned int)((I2S_TXDMA >> 0) & 0xFFFFFFFF), ((I2S_TXDMA = (I2S_TXDMA & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_TXDMA_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TXDMA_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_TXDMA_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_TXDMA_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2S_RTXDMA  -------------------------------
// SVD Line: 18369

unsigned int I2S_RTXDMA __AT (0x400021CC);



// ---------------------------  Field Item: I2S_RTXDMA_ADDRFAULTEN  -------------------------------
// SVD Line: 18378

//  <item> SFDITEM_FIELD__I2S_RTXDMA_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021CC) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RTXDMA ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2S_RTXDMA_CLKDISFAULTEN  ------------------------------
// SVD Line: 18385

//  <item> SFDITEM_FIELD__I2S_RTXDMA_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021CC) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RTXDMA ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// --------------------------  Field Item: I2S_RTXDMA_PWRUPONDEMAND  ------------------------------
// SVD Line: 18392

//  <item> SFDITEM_FIELD__I2S_RTXDMA_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021CC) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RTXDMA ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ---------------------------  Field Item: I2S_RTXDMA_IFCREADCLEAR  ------------------------------
// SVD Line: 18399

//  <item> SFDITEM_FIELD__I2S_RTXDMA_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021CC) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_RTXDMA ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: I2S_RTXDMA  -----------------------------------
// SVD Line: 18369

//  <rtree> SFDITEM_REG__I2S_RTXDMA
//    <name> RTXDMA </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x400021CC) reset transmitter block dma register </i>
//    <loc> ( (unsigned int)((I2S_RTXDMA >> 0) & 0xFFFFFFFF), ((I2S_RTXDMA = (I2S_RTXDMA & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_RTXDMA_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RTXDMA_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_RTXDMA_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_RTXDMA_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2S_I2S_COMP_PARAM_2  --------------------------
// SVD Line: 18408

unsigned int I2S_I2S_COMP_PARAM_2 __AT (0x400021F0);



// ----------------------  Field Item: I2S_I2S_COMP_PARAM_2_ADDRFAULTEN  --------------------------
// SVD Line: 18417

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021F0) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_2 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: I2S_I2S_COMP_PARAM_2_CLKDISFAULTEN  -------------------------
// SVD Line: 18424

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021F0) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_2 ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: I2S_I2S_COMP_PARAM_2_PWRUPONDEMAND  -------------------------
// SVD Line: 18431

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021F0) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_2 ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------  Field Item: I2S_I2S_COMP_PARAM_2_IFCREADCLEAR  -------------------------
// SVD Line: 18438

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021F0) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_2 ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2S_I2S_COMP_PARAM_2  ------------------------------
// SVD Line: 18408

//  <rtree> SFDITEM_REG__I2S_I2S_COMP_PARAM_2
//    <name> I2S_COMP_PARAM_2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400021F0) component parameter register 2 </i>
//    <loc> ( (unsigned int)((I2S_I2S_COMP_PARAM_2 >> 0) & 0xFFFFFFFF), ((I2S_I2S_COMP_PARAM_2 = (I2S_I2S_COMP_PARAM_2 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_2_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2S_I2S_COMP_PARAM_1  --------------------------
// SVD Line: 18447

unsigned int I2S_I2S_COMP_PARAM_1 __AT (0x400021F4);



// ----------------------  Field Item: I2S_I2S_COMP_PARAM_1_ADDRFAULTEN  --------------------------
// SVD Line: 18456

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021F4) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_1 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: I2S_I2S_COMP_PARAM_1_CLKDISFAULTEN  -------------------------
// SVD Line: 18463

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021F4) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_1 ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: I2S_I2S_COMP_PARAM_1_PWRUPONDEMAND  -------------------------
// SVD Line: 18470

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021F4) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_1 ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------  Field Item: I2S_I2S_COMP_PARAM_1_IFCREADCLEAR  -------------------------
// SVD Line: 18477

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021F4) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_PARAM_1 ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2S_I2S_COMP_PARAM_1  ------------------------------
// SVD Line: 18447

//  <rtree> SFDITEM_REG__I2S_I2S_COMP_PARAM_1
//    <name> I2S_COMP_PARAM_1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400021F4) component parameter register 1 </i>
//    <loc> ( (unsigned int)((I2S_I2S_COMP_PARAM_1 >> 0) & 0xFFFFFFFF), ((I2S_I2S_COMP_PARAM_1 = (I2S_I2S_COMP_PARAM_1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_PARAM_1_IFCREADCLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: I2S_I2S_COMP_VERSION  --------------------------
// SVD Line: 18486

unsigned int I2S_I2S_COMP_VERSION __AT (0x400021F8);



// ----------------------  Field Item: I2S_I2S_COMP_VERSION_ADDRFAULTEN  --------------------------
// SVD Line: 18495

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021F8) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_VERSION ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: I2S_I2S_COMP_VERSION_CLKDISFAULTEN  -------------------------
// SVD Line: 18502

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021F8) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_VERSION ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// ---------------------  Field Item: I2S_I2S_COMP_VERSION_PWRUPONDEMAND  -------------------------
// SVD Line: 18509

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021F8) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_VERSION ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// ----------------------  Field Item: I2S_I2S_COMP_VERSION_IFCREADCLEAR  -------------------------
// SVD Line: 18516

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021F8) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_VERSION ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: I2S_I2S_COMP_VERSION  ------------------------------
// SVD Line: 18486

//  <rtree> SFDITEM_REG__I2S_I2S_COMP_VERSION
//    <name> I2S_COMP_VERSION </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400021F8) component version register </i>
//    <loc> ( (unsigned int)((I2S_I2S_COMP_VERSION >> 0) & 0xFFFFFFFF), ((I2S_I2S_COMP_VERSION = (I2S_I2S_COMP_VERSION & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_VERSION_IFCREADCLEAR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: I2S_I2S_COMP_TYPE  ----------------------------
// SVD Line: 18525

unsigned int I2S_I2S_COMP_TYPE __AT (0x400021FC);



// ------------------------  Field Item: I2S_I2S_COMP_TYPE_ADDRFAULTEN  ---------------------------
// SVD Line: 18534

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400021FC) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_TYPE ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: I2S_I2S_COMP_TYPE_CLKDISFAULTEN  --------------------------
// SVD Line: 18541

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400021FC) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_TYPE ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -----------------------  Field Item: I2S_I2S_COMP_TYPE_PWRUPONDEMAND  --------------------------
// SVD Line: 18548

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400021FC) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_TYPE ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// -----------------------  Field Item: I2S_I2S_COMP_TYPE_IFCREADCLEAR  ---------------------------
// SVD Line: 18555

//  <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400021FC) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) I2S_I2S_COMP_TYPE ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: I2S_I2S_COMP_TYPE  -------------------------------
// SVD Line: 18525

//  <rtree> SFDITEM_REG__I2S_I2S_COMP_TYPE
//    <name> I2S_COMP_TYPE </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x400021FC) component type register </i>
//    <loc> ( (unsigned int)((I2S_I2S_COMP_TYPE >> 0) & 0xFFFFFFFF), ((I2S_I2S_COMP_TYPE = (I2S_I2S_COMP_TYPE & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__I2S_I2S_COMP_TYPE_IFCREADCLEAR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2S  --------------------------------------
// SVD Line: 17419

//  <view> I2S
//    <name> I2S </name>
//    <item> SFDITEM_REG__I2S_IER </item>
//    <item> SFDITEM_REG__I2S_IRER </item>
//    <item> SFDITEM_REG__I2S_ITER </item>
//    <item> SFDITEM_REG__I2S_CER </item>
//    <item> SFDITEM_REG__I2S_CCR </item>
//    <item> SFDITEM_REG__I2S_RXFFR </item>
//    <item> SFDITEM_REG__I2S_TXFFR </item>
//    <item> SFDITEM_REG__I2S_LRBR_LTHR </item>
//    <item> SFDITEM_REG__I2S_RRBR_RTHR </item>
//    <item> SFDITEM_REG__I2S_RER </item>
//    <item> SFDITEM_REG__I2S_TER </item>
//    <item> SFDITEM_REG__I2S_RCR </item>
//    <item> SFDITEM_REG__I2S_TCR </item>
//    <item> SFDITEM_REG__I2S_ISR </item>
//    <item> SFDITEM_REG__I2S_IMR </item>
//    <item> SFDITEM_REG__I2S_ROR </item>
//    <item> SFDITEM_REG__I2S_TOR </item>
//    <item> SFDITEM_REG__I2S_RFCR </item>
//    <item> SFDITEM_REG__I2S_TFCR </item>
//    <item> SFDITEM_REG__I2S_RFF </item>
//    <item> SFDITEM_REG__I2S_TFF </item>
//    <item> SFDITEM_REG__I2S_RXDMA </item>
//    <item> SFDITEM_REG__I2S_RRXDMA </item>
//    <item> SFDITEM_REG__I2S_TXDMA </item>
//    <item> SFDITEM_REG__I2S_RTXDMA </item>
//    <item> SFDITEM_REG__I2S_I2S_COMP_PARAM_2 </item>
//    <item> SFDITEM_REG__I2S_I2S_COMP_PARAM_1 </item>
//    <item> SFDITEM_REG__I2S_I2S_COMP_VERSION </item>
//    <item> SFDITEM_REG__I2S_I2S_COMP_TYPE </item>
//  </view>
//  


// -----------------------------  Register Item Address: SEC_INT  ---------------------------------
// SVD Line: 18580

unsigned int SEC_INT __AT (0x4000F000);



// -----------------------------  Field Item: SEC_INT_ADDRFAULTEN  --------------------------------
// SVD Line: 18589

//  <item> SFDITEM_FIELD__SEC_INT_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F000) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_INT ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SEC_INT  ------------------------------------
// SVD Line: 18580

//  <rtree> SFDITEM_REG__SEC_INT
//    <name> INT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F000) interrupt enable register </i>
//    <loc> ( (unsigned int)((SEC_INT >> 0) & 0xFFFFFFFF), ((SEC_INT = (SEC_INT & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_INT_ADDRFAULTEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SEC_RST  ---------------------------------
// SVD Line: 18598

unsigned int SEC_RST __AT (0x4000F004);



// -----------------------------  Field Item: SEC_RST_ADDRFAULTEN  --------------------------------
// SVD Line: 18607

//  <item> SFDITEM_FIELD__SEC_RST_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F004) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_RST ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SEC_RST  ------------------------------------
// SVD Line: 18598

//  <rtree> SFDITEM_REG__SEC_RST
//    <name> RST </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F004) reset enable register </i>
//    <loc> ( (unsigned int)((SEC_RST >> 0) & 0xFFFFFFFF), ((SEC_RST = (SEC_RST & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_RST_ADDRFAULTEN </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: SEC_SR  ---------------------------------
// SVD Line: 18616

unsigned int SEC_SR __AT (0x4000F00C);



// -----------------------------  Field Item: SEC_SR_ADDRFAULTEN  ---------------------------------
// SVD Line: 18625

//  <item> SFDITEM_FIELD__SEC_SR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F00C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_SR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: SEC_SR  -------------------------------------
// SVD Line: 18616

//  <rtree> SFDITEM_REG__SEC_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F00C) status </i>
//    <loc> ( (unsigned int)((SEC_SR >> 0) & 0xFFFFFFFF), ((SEC_SR = (SEC_SR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_SR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SEC_FILTER0  -------------------------------
// SVD Line: 18634

unsigned int SEC_FILTER0 __AT (0x4000F010);



// ---------------------------  Field Item: SEC_FILTER0_ADDRFAULTEN  ------------------------------
// SVD Line: 18643

//  <item> SFDITEM_FIELD__SEC_FILTER0_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F010) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_FILTER0 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SEC_FILTER0  ----------------------------------
// SVD Line: 18634

//  <rtree> SFDITEM_REG__SEC_FILTER0
//    <name> FILTER0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F010) filter0 </i>
//    <loc> ( (unsigned int)((SEC_FILTER0 >> 0) & 0xFFFFFFFF), ((SEC_FILTER0 = (SEC_FILTER0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_FILTER0_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SEC_FILTER1  -------------------------------
// SVD Line: 18652

unsigned int SEC_FILTER1 __AT (0x4000F014);



// ---------------------------  Field Item: SEC_FILTER1_ADDRFAULTEN  ------------------------------
// SVD Line: 18661

//  <item> SFDITEM_FIELD__SEC_FILTER1_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F014) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_FILTER1 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SEC_FILTER1  ----------------------------------
// SVD Line: 18652

//  <rtree> SFDITEM_REG__SEC_FILTER1
//    <name> FILTER1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F014) filter1 </i>
//    <loc> ( (unsigned int)((SEC_FILTER1 >> 0) & 0xFFFFFFFF), ((SEC_FILTER1 = (SEC_FILTER1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_FILTER1_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SEC_FILTER2  -------------------------------
// SVD Line: 18670

unsigned int SEC_FILTER2 __AT (0x4000F024);



// ---------------------------  Field Item: SEC_FILTER2_ADDRFAULTEN  ------------------------------
// SVD Line: 18679

//  <item> SFDITEM_FIELD__SEC_FILTER2_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F024) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_FILTER2 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SEC_FILTER2  ----------------------------------
// SVD Line: 18670

//  <rtree> SFDITEM_REG__SEC_FILTER2
//    <name> FILTER2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F024) filter2 </i>
//    <loc> ( (unsigned int)((SEC_FILTER2 >> 0) & 0xFFFFFFFF), ((SEC_FILTER2 = (SEC_FILTER2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_FILTER2_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SEC_FILTER3  -------------------------------
// SVD Line: 18688

unsigned int SEC_FILTER3 __AT (0x4000F028);



// ---------------------------  Field Item: SEC_FILTER3_ADDRFAULTEN  ------------------------------
// SVD Line: 18697

//  <item> SFDITEM_FIELD__SEC_FILTER3_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F028) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SEC_FILTER3 ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SEC_FILTER3  ----------------------------------
// SVD Line: 18688

//  <rtree> SFDITEM_REG__SEC_FILTER3
//    <name> FILTER3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F028) filter3 </i>
//    <loc> ( (unsigned int)((SEC_FILTER3 >> 0) & 0xFFFFFFFF), ((SEC_FILTER3 = (SEC_FILTER3 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SEC_FILTER3_ADDRFAULTEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SEC  --------------------------------------
// SVD Line: 18566

//  <view> SEC
//    <name> SEC </name>
//    <item> SFDITEM_REG__SEC_INT </item>
//    <item> SFDITEM_REG__SEC_RST </item>
//    <item> SFDITEM_REG__SEC_SR </item>
//    <item> SFDITEM_REG__SEC_FILTER0 </item>
//    <item> SFDITEM_REG__SEC_FILTER1 </item>
//    <item> SFDITEM_REG__SEC_FILTER2 </item>
//    <item> SFDITEM_REG__SEC_FILTER3 </item>
//  </view>
//  


// ---------------------------  Register Item Address: QSPI_QSPI_CR  ------------------------------
// SVD Line: 18722

unsigned int QSPI_QSPI_CR __AT (0x40021000);



// --------------------------  Field Item: QSPI_QSPI_CR_ADDRFAULTEN  ------------------------------
// SVD Line: 18731

//  <item> SFDITEM_FIELD__QSPI_QSPI_CR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021000) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_CR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_CR  ----------------------------------
// SVD Line: 18722

//  <rtree> SFDITEM_REG__QSPI_QSPI_CR
//    <name> QSPI_CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021000) control register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_CR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_CR = (QSPI_QSPI_CR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_CR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_DCR  ------------------------------
// SVD Line: 18740

unsigned int QSPI_QSPI_DCR __AT (0x40021004);



// --------------------------  Field Item: QSPI_QSPI_DCR_ADDRFAULTEN  -----------------------------
// SVD Line: 18749

//  <item> SFDITEM_FIELD__QSPI_QSPI_DCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021004) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_DCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_DCR  ---------------------------------
// SVD Line: 18740

//  <rtree> SFDITEM_REG__QSPI_QSPI_DCR
//    <name> QSPI_DCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021004) device configuration register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_DCR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_DCR = (QSPI_QSPI_DCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_DCR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_QSPI_SR  ------------------------------
// SVD Line: 18758

unsigned int QSPI_QSPI_SR __AT (0x40021008);



// --------------------------  Field Item: QSPI_QSPI_SR_ADDRFAULTEN  ------------------------------
// SVD Line: 18767

//  <item> SFDITEM_FIELD__QSPI_QSPI_SR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021008) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_SR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_SR  ----------------------------------
// SVD Line: 18758

//  <rtree> SFDITEM_REG__QSPI_QSPI_SR
//    <name> QSPI_SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021008) status register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_SR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_SR = (QSPI_QSPI_SR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_SR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_FCR  ------------------------------
// SVD Line: 18776

unsigned int QSPI_QSPI_FCR __AT (0x4002100C);



// --------------------------  Field Item: QSPI_QSPI_FCR_ADDRFAULTEN  -----------------------------
// SVD Line: 18785

//  <item> SFDITEM_FIELD__QSPI_QSPI_FCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002100C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_FCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_FCR  ---------------------------------
// SVD Line: 18776

//  <rtree> SFDITEM_REG__QSPI_QSPI_FCR
//    <name> QSPI_FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002100C) flag clear register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_FCR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_FCR = (QSPI_QSPI_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_FCR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_DLR  ------------------------------
// SVD Line: 18794

unsigned int QSPI_QSPI_DLR __AT (0x40021010);



// --------------------------  Field Item: QSPI_QSPI_DLR_ADDRFAULTEN  -----------------------------
// SVD Line: 18803

//  <item> SFDITEM_FIELD__QSPI_QSPI_DLR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021010) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_DLR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_DLR  ---------------------------------
// SVD Line: 18794

//  <rtree> SFDITEM_REG__QSPI_QSPI_DLR
//    <name> QSPI_DLR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021010) data length register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_DLR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_DLR = (QSPI_QSPI_DLR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_DLR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_CCR  ------------------------------
// SVD Line: 18812

unsigned int QSPI_QSPI_CCR __AT (0x40021014);



// --------------------------  Field Item: QSPI_QSPI_CCR_ADDRFAULTEN  -----------------------------
// SVD Line: 18821

//  <item> SFDITEM_FIELD__QSPI_QSPI_CCR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021014) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_CCR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_CCR  ---------------------------------
// SVD Line: 18812

//  <rtree> SFDITEM_REG__QSPI_QSPI_CCR
//    <name> QSPI_CCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021014) communication configuration register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_CCR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_CCR = (QSPI_QSPI_CCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_CCR_ADDRFAULTEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_QSPI_AR  ------------------------------
// SVD Line: 18830

unsigned int QSPI_QSPI_AR __AT (0x40021018);



// --------------------------  Field Item: QSPI_QSPI_AR_ADDRFAULTEN  ------------------------------
// SVD Line: 18839

//  <item> SFDITEM_FIELD__QSPI_QSPI_AR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021018) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_AR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_AR  ----------------------------------
// SVD Line: 18830

//  <rtree> SFDITEM_REG__QSPI_QSPI_AR
//    <name> QSPI_AR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021018) address register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_AR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_AR = (QSPI_QSPI_AR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_AR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_ABR  ------------------------------
// SVD Line: 18848

unsigned int QSPI_QSPI_ABR __AT (0x4002101C);



// --------------------------  Field Item: QSPI_QSPI_ABR_ADDRFAULTEN  -----------------------------
// SVD Line: 18857

//  <item> SFDITEM_FIELD__QSPI_QSPI_ABR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002101C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_ABR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: QSPI_QSPI_ABR_CLKDISFAULTEN  ----------------------------
// SVD Line: 18864

//  <item> SFDITEM_FIELD__QSPI_QSPI_ABR_CLKDISFAULTEN
//    <name> CLKDISFAULTEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4002101C) Clock-disabled Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_ABR ) </loc>
//      <o.1..1> CLKDISFAULTEN
//    </check>
//  </item>
//  


// -------------------------  Field Item: QSPI_QSPI_ABR_PWRUPONDEMAND  ----------------------------
// SVD Line: 18871

//  <item> SFDITEM_FIELD__QSPI_QSPI_ABR_PWRUPONDEMAND
//    <name> PWRUPONDEMAND </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4002101C) Power Up on Demand During Wake Up </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_ABR ) </loc>
//      <o.2..2> PWRUPONDEMAND
//    </check>
//  </item>
//  


// -------------------------  Field Item: QSPI_QSPI_ABR_IFCREADCLEAR  -----------------------------
// SVD Line: 18878

//  <item> SFDITEM_FIELD__QSPI_QSPI_ABR_IFCREADCLEAR
//    <name> IFCREADCLEAR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4002101C) IFC Read Clears IF </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_ABR ) </loc>
//      <o.3..3> IFCREADCLEAR
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_ABR  ---------------------------------
// SVD Line: 18848

//  <rtree> SFDITEM_REG__QSPI_QSPI_ABR
//    <name> QSPI_ABR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002101C) alternate byte register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_ABR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_ABR = (QSPI_QSPI_ABR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_ABR_ADDRFAULTEN </item>
//    <item> SFDITEM_FIELD__QSPI_QSPI_ABR_CLKDISFAULTEN </item>
//    <item> SFDITEM_FIELD__QSPI_QSPI_ABR_PWRUPONDEMAND </item>
//    <item> SFDITEM_FIELD__QSPI_QSPI_ABR_IFCREADCLEAR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: QSPI_QSPI_DR  ------------------------------
// SVD Line: 18887

unsigned int QSPI_QSPI_DR __AT (0x40021020);



// --------------------------  Field Item: QSPI_QSPI_DR_ADDRFAULTEN  ------------------------------
// SVD Line: 18896

//  <item> SFDITEM_FIELD__QSPI_QSPI_DR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021020) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_DR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_DR  ----------------------------------
// SVD Line: 18887

//  <rtree> SFDITEM_REG__QSPI_QSPI_DR
//    <name> QSPI_DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021020) data register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_DR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_DR = (QSPI_QSPI_DR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_DR_ADDRFAULTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: QSPI_QSPI_PSMKR  -----------------------------
// SVD Line: 18905

unsigned int QSPI_QSPI_PSMKR __AT (0x40021024);



// -------------------------  Field Item: QSPI_QSPI_PSMKR_ADDRFAULTEN  ----------------------------
// SVD Line: 18914

//  <item> SFDITEM_FIELD__QSPI_QSPI_PSMKR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021024) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_PSMKR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: QSPI_QSPI_PSMKR  --------------------------------
// SVD Line: 18905

//  <rtree> SFDITEM_REG__QSPI_QSPI_PSMKR
//    <name> QSPI_PSMKR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021024) polling status mask register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_PSMKR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_PSMKR = (QSPI_QSPI_PSMKR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_PSMKR_ADDRFAULTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: QSPI_QSPI_PSMAR  -----------------------------
// SVD Line: 18923

unsigned int QSPI_QSPI_PSMAR __AT (0x40021028);



// -------------------------  Field Item: QSPI_QSPI_PSMAR_ADDRFAULTEN  ----------------------------
// SVD Line: 18932

//  <item> SFDITEM_FIELD__QSPI_QSPI_PSMAR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021028) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_PSMAR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: QSPI_QSPI_PSMAR  --------------------------------
// SVD Line: 18923

//  <rtree> SFDITEM_REG__QSPI_QSPI_PSMAR
//    <name> QSPI_PSMAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021028) polling status match register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_PSMAR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_PSMAR = (QSPI_QSPI_PSMAR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_PSMAR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_PIR  ------------------------------
// SVD Line: 18941

unsigned int QSPI_QSPI_PIR __AT (0x4002102C);



// --------------------------  Field Item: QSPI_QSPI_PIR_ADDRFAULTEN  -----------------------------
// SVD Line: 18950

//  <item> SFDITEM_FIELD__QSPI_QSPI_PIR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002102C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_PIR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_PIR  ---------------------------------
// SVD Line: 18941

//  <rtree> SFDITEM_REG__QSPI_QSPI_PIR
//    <name> QSPI_PIR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002102C) polling interval register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_PIR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_PIR = (QSPI_QSPI_PIR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_PIR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_TOR  ------------------------------
// SVD Line: 18959

unsigned int QSPI_QSPI_TOR __AT (0x40021030);



// --------------------------  Field Item: QSPI_QSPI_TOR_ADDRFAULTEN  -----------------------------
// SVD Line: 18968

//  <item> SFDITEM_FIELD__QSPI_QSPI_TOR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021030) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_TOR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_TOR  ---------------------------------
// SVD Line: 18959

//  <rtree> SFDITEM_REG__QSPI_QSPI_TOR
//    <name> QSPI_TOR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021030) timeout register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_TOR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_TOR = (QSPI_QSPI_TOR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_TOR_ADDRFAULTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: QSPI_QSPI_HIT0R  -----------------------------
// SVD Line: 18977

unsigned int QSPI_QSPI_HIT0R __AT (0x40021080);



// -------------------------  Field Item: QSPI_QSPI_HIT0R_ADDRFAULTEN  ----------------------------
// SVD Line: 18986

//  <item> SFDITEM_FIELD__QSPI_QSPI_HIT0R_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021080) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_HIT0R ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: QSPI_QSPI_HIT0R  --------------------------------
// SVD Line: 18977

//  <rtree> SFDITEM_REG__QSPI_QSPI_HIT0R
//    <name> QSPI_HIT0R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021080) hit0 times accumulator register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_HIT0R >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_HIT0R = (QSPI_QSPI_HIT0R & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_HIT0R_ADDRFAULTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: QSPI_QSPI_HIT1R  -----------------------------
// SVD Line: 18995

unsigned int QSPI_QSPI_HIT1R __AT (0x40021084);



// -------------------------  Field Item: QSPI_QSPI_HIT1R_ADDRFAULTEN  ----------------------------
// SVD Line: 19004

//  <item> SFDITEM_FIELD__QSPI_QSPI_HIT1R_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021084) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_HIT1R ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: QSPI_QSPI_HIT1R  --------------------------------
// SVD Line: 18995

//  <rtree> SFDITEM_REG__QSPI_QSPI_HIT1R
//    <name> QSPI_HIT1R </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021084) hit1 times accumulator register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_HIT1R >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_HIT1R = (QSPI_QSPI_HIT1R & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_HIT1R_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_MIR  ------------------------------
// SVD Line: 19013

unsigned int QSPI_QSPI_MIR __AT (0x40021088);



// --------------------------  Field Item: QSPI_QSPI_MIR_ADDRFAULTEN  -----------------------------
// SVD Line: 19022

//  <item> SFDITEM_FIELD__QSPI_QSPI_MIR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021088) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_MIR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: QSPI_QSPI_MIR  ---------------------------------
// SVD Line: 19013

//  <rtree> SFDITEM_REG__QSPI_QSPI_MIR
//    <name> QSPI_MIR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021088) miss times accumulator register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_MIR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_MIR = (QSPI_QSPI_MIR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_MIR_ADDRFAULTEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: QSPI_QSPI_CFGR  -----------------------------
// SVD Line: 19031

unsigned int QSPI_QSPI_CFGR __AT (0x4002108C);



// -------------------------  Field Item: QSPI_QSPI_CFGR_ADDRFAULTEN  -----------------------------
// SVD Line: 19040

//  <item> SFDITEM_FIELD__QSPI_QSPI_CFGR_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4002108C) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_QSPI_CFGR ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: QSPI_QSPI_CFGR  ---------------------------------
// SVD Line: 19031

//  <rtree> SFDITEM_REG__QSPI_QSPI_CFGR
//    <name> QSPI_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4002108C) configuration register </i>
//    <loc> ( (unsigned int)((QSPI_QSPI_CFGR >> 0) & 0xFFFFFFFF), ((QSPI_QSPI_CFGR = (QSPI_QSPI_CFGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_QSPI_CFGR_ADDRFAULTEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: QSPI_SBUS_START  -----------------------------
// SVD Line: 19049

unsigned int QSPI_SBUS_START __AT (0x40021090);



// -------------------------  Field Item: QSPI_SBUS_START_ADDRFAULTEN  ----------------------------
// SVD Line: 19058

//  <item> SFDITEM_FIELD__QSPI_SBUS_START_ADDRFAULTEN
//    <name> ADDRFAULTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40021090) Invalid Address Bus Fault Response Enable </i>
//    <check> 
//      <loc> ( (unsigned int) QSPI_SBUS_START ) </loc>
//      <o.0..0> ADDRFAULTEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: QSPI_SBUS_START  --------------------------------
// SVD Line: 19049

//  <rtree> SFDITEM_REG__QSPI_SBUS_START
//    <name> SBUS_START </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40021090) start register </i>
//    <loc> ( (unsigned int)((QSPI_SBUS_START >> 0) & 0xFFFFFFFF), ((QSPI_SBUS_START = (QSPI_SBUS_START & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__QSPI_SBUS_START_ADDRFAULTEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: QSPI  -------------------------------------
// SVD Line: 18708

//  <view> QSPI
//    <name> QSPI </name>
//    <item> SFDITEM_REG__QSPI_QSPI_CR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_DCR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_SR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_FCR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_DLR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_CCR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_AR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_ABR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_DR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_PSMKR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_PSMAR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_PIR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_TOR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_HIT0R </item>
//    <item> SFDITEM_REG__QSPI_QSPI_HIT1R </item>
//    <item> SFDITEM_REG__QSPI_QSPI_MIR </item>
//    <item> SFDITEM_REG__QSPI_QSPI_CFGR </item>
//    <item> SFDITEM_REG__QSPI_SBUS_START </item>
//  </view>
//  


// ------------------------------  Register Item Address: DAC_CR  ---------------------------------
// SVD Line: 19083

unsigned int DAC_CR __AT (0x40019000);



// --------------------------------  Field Item: DAC_CR_DAC_EN  -----------------------------------
// SVD Line: 19092

//  <item> SFDITEM_FIELD__DAC_CR_DAC_EN
//    <name> DAC_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019000) DAC_EN </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_CR ) </loc>
//      <o.0..0> DAC_EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_CR_TRIG_EN  -----------------------------------
// SVD Line: 19099

//  <item> SFDITEM_FIELD__DAC_CR_TRIG_EN
//    <name> TRIG_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40019000) TRIG_EN </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_CR ) </loc>
//      <o.2..2> TRIG_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DAC_CR_TRIG_SRC_SEL  --------------------------------
// SVD Line: 19106

//  <item> SFDITEM_FIELD__DAC_CR_TRIG_SRC_SEL
//    <name> TRIG_SRC_SEL </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40019000) TRIG_SRC_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_CR >> 3) & 0x7), ((DAC_CR = (DAC_CR & ~(0x7UL << 3 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 3 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DAC_CR_TRIG_TYPE_SEL  --------------------------------
// SVD Line: 19113

//  <item> SFDITEM_FIELD__DAC_CR_TRIG_TYPE_SEL
//    <name> TRIG_TYPE_SEL </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40019000) TRIG_TYPE_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_CR >> 6) & 0x3), ((DAC_CR = (DAC_CR & ~(0x3UL << 6 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 6 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DAC_CR_WAVE_SEL  ----------------------------------
// SVD Line: 19120

//  <item> SFDITEM_FIELD__DAC_CR_WAVE_SEL
//    <name> WAVE_SEL </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40019000) WAVE_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_CR >> 8) & 0x3), ((DAC_CR = (DAC_CR & ~(0x3UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DAC_CR_MASK_AMP_SEL  --------------------------------
// SVD Line: 19127

//  <item> SFDITEM_FIELD__DAC_CR_MASK_AMP_SEL
//    <name> MASK_AMP_SEL </name>
//    <rw> 
//    <i> [Bits 13..10] RW (@ 0x40019000) MASK_AMP_SEL </i>
//    <edit> 
//      <loc> ( (unsigned char)((DAC_CR >> 10) & 0xF), ((DAC_CR = (DAC_CR & ~(0xFUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: DAC_CR_DMA_EN  -----------------------------------
// SVD Line: 19134

//  <item> SFDITEM_FIELD__DAC_CR_DMA_EN
//    <name> DMA_EN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40019000) DMA_EN </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_CR ) </loc>
//      <o.14..14> DMA_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DAC_CR_UNDERFLOW_EN  --------------------------------
// SVD Line: 19141

//  <item> SFDITEM_FIELD__DAC_CR_UNDERFLOW_EN
//    <name> UNDERFLOW_EN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40019000) UNDERFLOW_EN </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_CR ) </loc>
//      <o.15..15> UNDERFLOW_EN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: DAC_CR_EMPTY_EN  ----------------------------------
// SVD Line: 19148

//  <item> SFDITEM_FIELD__DAC_CR_EMPTY_EN
//    <name> EMPTY_EN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40019000) EMPTY_EN </i>
//    <check> 
//      <loc> ( (unsigned int) DAC_CR ) </loc>
//      <o.16..16> EMPTY_EN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: DAC_CR  -------------------------------------
// SVD Line: 19083

//  <rtree> SFDITEM_REG__DAC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019000) control register </i>
//    <loc> ( (unsigned int)((DAC_CR >> 0) & 0xFFFFFFFF), ((DAC_CR = (DAC_CR & ~(0x1FFFDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFD) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_CR_DAC_EN </item>
//    <item> SFDITEM_FIELD__DAC_CR_TRIG_EN </item>
//    <item> SFDITEM_FIELD__DAC_CR_TRIG_SRC_SEL </item>
//    <item> SFDITEM_FIELD__DAC_CR_TRIG_TYPE_SEL </item>
//    <item> SFDITEM_FIELD__DAC_CR_WAVE_SEL </item>
//    <item> SFDITEM_FIELD__DAC_CR_MASK_AMP_SEL </item>
//    <item> SFDITEM_FIELD__DAC_CR_DMA_EN </item>
//    <item> SFDITEM_FIELD__DAC_CR_UNDERFLOW_EN </item>
//    <item> SFDITEM_FIELD__DAC_CR_EMPTY_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DAC_SWTRIGR  -------------------------------
// SVD Line: 19157

unsigned int DAC_SWTRIGR __AT (0x40019004);



// -----------------------------  Field Item: DAC_SWTRIGR_SWTRIGR  --------------------------------
// SVD Line: 19166

//  <item> SFDITEM_FIELD__DAC_SWTRIGR_SWTRIGR
//    <name> SWTRIGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40019004) SWTRIGR </i>
//    <edit> 
//      <loc> ( (unsigned int)((DAC_SWTRIGR >> 0) & 0x0), ((DAC_SWTRIGR = (DAC_SWTRIGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DAC_SWTRIGR  ----------------------------------
// SVD Line: 19157

//  <rtree> SFDITEM_REG__DAC_SWTRIGR
//    <name> SWTRIGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x40019004) software trigger register </i>
//    <loc> ( (unsigned int)((DAC_SWTRIGR >> 0) & 0xFFFFFFFF), ((DAC_SWTRIGR = (DAC_SWTRIGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_SWTRIGR_SWTRIGR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DAC_DHR  ---------------------------------
// SVD Line: 19175

unsigned int DAC_DHR __AT (0x40019008);



// ---------------------------------  Field Item: DAC_DHR_DHR  ------------------------------------
// SVD Line: 19184

//  <item> SFDITEM_FIELD__DAC_DHR_DHR
//    <name> DHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019008) DHR </i>
//    <edit> 
//      <loc> ( (unsigned int)((DAC_DHR >> 0) & 0xFFFFFFFF), ((DAC_DHR = (DAC_DHR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: DAC_DHR  ------------------------------------
// SVD Line: 19175

//  <rtree> SFDITEM_REG__DAC_DHR
//    <name> DHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019008) data holding register </i>
//    <loc> ( (unsigned int)((DAC_DHR >> 0) & 0xFFFFFFFF), ((DAC_DHR = (DAC_DHR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_DHR_DHR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: DAC_DOR  ---------------------------------
// SVD Line: 19193

unsigned int DAC_DOR __AT (0x4001900C);



// ---------------------------------  Field Item: DAC_DOR_DOR  ------------------------------------
// SVD Line: 19202

//  <item> SFDITEM_FIELD__DAC_DOR_DOR
//    <name> DOR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001900C) DOR </i>
//    <edit> 
//      <loc> ( (unsigned int)((DAC_DOR >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: DAC_DOR  ------------------------------------
// SVD Line: 19193

//  <rtree> SFDITEM_REG__DAC_DOR
//    <name> DOR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001900C) data output register </i>
//    <loc> ( (unsigned int)((DAC_DOR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__DAC_DOR_DOR </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: DAC_SR  ---------------------------------
// SVD Line: 19211

unsigned int DAC_SR __AT (0x40019010);



// ----------------------------------  Field Item: DAC_SR_SR  -------------------------------------
// SVD Line: 19220

//  <item> SFDITEM_FIELD__DAC_SR_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019010) SR </i>
//    <edit> 
//      <loc> ( (unsigned int)((DAC_SR >> 0) & 0xFFFFFFFF), ((DAC_SR = (DAC_SR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: DAC_SR  -------------------------------------
// SVD Line: 19211

//  <rtree> SFDITEM_REG__DAC_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019010) data length register </i>
//    <loc> ( (unsigned int)((DAC_SR >> 0) & 0xFFFFFFFF), ((DAC_SR = (DAC_SR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__DAC_SR_SR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: DAC  --------------------------------------
// SVD Line: 19069

//  <view> DAC
//    <name> DAC </name>
//    <item> SFDITEM_REG__DAC_CR </item>
//    <item> SFDITEM_REG__DAC_SWTRIGR </item>
//    <item> SFDITEM_REG__DAC_DHR </item>
//    <item> SFDITEM_REG__DAC_DOR </item>
//    <item> SFDITEM_REG__DAC_SR </item>
//  </view>
//  


// ------------------------------  Register Item Address: ADC_CR  ---------------------------------
// SVD Line: 19245

unsigned int ADC_CR __AT (0x40017000);



// ----------------------------------  Field Item: ADC_CR_EN  -------------------------------------
// SVD Line: 19254

//  <item> SFDITEM_FIELD__ADC_CR_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40017000) ADC enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CR ) </loc>
//      <o.0..0> EN
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ADC_CR_DIS  -------------------------------------
// SVD Line: 19261

//  <item> SFDITEM_FIELD__ADC_CR_DIS
//    <name> DIS </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40017000) ADC disable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CR ) </loc>
//      <o.1..1> DIS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: ADC_CR_START  ------------------------------------
// SVD Line: 19268

//  <item> SFDITEM_FIELD__ADC_CR_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40017000) ADC start conversion command </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CR ) </loc>
//      <o.2..2> START
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ADC_CR_STOP  ------------------------------------
// SVD Line: 19275

//  <item> SFDITEM_FIELD__ADC_CR_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40017000) ADC stop conversion command </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CR ) </loc>
//      <o.3..3> STOP
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: ADC_CR  -------------------------------------
// SVD Line: 19245

//  <rtree> SFDITEM_REG__ADC_CR
//    <name> CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017000) control register </i>
//    <loc> ( (unsigned int)((ADC_CR >> 0) & 0xFFFFFFFF), ((ADC_CR = (ADC_CR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_CR_EN </item>
//    <item> SFDITEM_FIELD__ADC_CR_DIS </item>
//    <item> SFDITEM_FIELD__ADC_CR_START </item>
//    <item> SFDITEM_FIELD__ADC_CR_STOP </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_CFGR  --------------------------------
// SVD Line: 19284

unsigned int ADC_CFGR __AT (0x40017004);



// ------------------------------  Field Item: ADC_CFGR_CLK_DIV  ----------------------------------
// SVD Line: 19293

//  <item> SFDITEM_FIELD__ADC_CFGR_CLK_DIV
//    <name> CLK_DIV </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40017004) ADCCLK prescale </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_CFGR >> 0) & 0xFFF), ((ADC_CFGR = (ADC_CFGR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_CFGR_DMA_EN  ----------------------------------
// SVD Line: 19300

//  <item> SFDITEM_FIELD__ADC_CFGR_DMA_EN
//    <name> DMA_EN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40017004) DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CFGR ) </loc>
//      <o.12..12> DMA_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: ADC_CFGR_EXT_TRIG_SEL  -------------------------------
// SVD Line: 19307

//  <item> SFDITEM_FIELD__ADC_CFGR_EXT_TRIG_SEL
//    <name> EXT_TRIG_SEL </name>
//    <rw> 
//    <i> [Bits 16..13] RW (@ 0x40017004) External trigger selection for the start of ADC conversion </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_CFGR >> 13) & 0xF), ((ADC_CFGR = (ADC_CFGR & ~(0xFUL << 13 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 13 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: ADC_CFGR_TRIG_SEL  ---------------------------------
// SVD Line: 19314

//  <item> SFDITEM_FIELD__ADC_CFGR_TRIG_SEL
//    <name> TRIG_SEL </name>
//    <rw> 
//    <i> [Bits 18..17] RW (@ 0x40017004) Trigger mode and polarity selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_CFGR >> 17) & 0x3), ((ADC_CFGR = (ADC_CFGR & ~(0x3UL << 17 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 17 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: ADC_CFGR_OVERRUN_MODE  -------------------------------
// SVD Line: 19321

//  <item> SFDITEM_FIELD__ADC_CFGR_OVERRUN_MODE
//    <name> OVERRUN_MODE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40017004) Overrun management mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CFGR ) </loc>
//      <o.19..19> OVERRUN_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC_CFGR_CONV_MODE  ---------------------------------
// SVD Line: 19328

//  <item> SFDITEM_FIELD__ADC_CFGR_CONV_MODE
//    <name> CONV_MODE </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40017004) ADC conversion mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_CFGR >> 20) & 0x3), ((ADC_CFGR = (ADC_CFGR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: ADC_CFGR_WAIT_MODE  ---------------------------------
// SVD Line: 19335

//  <item> SFDITEM_FIELD__ADC_CFGR_WAIT_MODE
//    <name> WAIT_MODE </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40017004) Wait conversion mode </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CFGR ) </loc>
//      <o.22..22> WAIT_MODE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC_CFGR  ------------------------------------
// SVD Line: 19284

//  <rtree> SFDITEM_REG__ADC_CFGR
//    <name> CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017004) configuration register </i>
//    <loc> ( (unsigned int)((ADC_CFGR >> 0) & 0xFFFFFFFF), ((ADC_CFGR = (ADC_CFGR & ~(0x7FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_CFGR_CLK_DIV </item>
//    <item> SFDITEM_FIELD__ADC_CFGR_DMA_EN </item>
//    <item> SFDITEM_FIELD__ADC_CFGR_EXT_TRIG_SEL </item>
//    <item> SFDITEM_FIELD__ADC_CFGR_TRIG_SEL </item>
//    <item> SFDITEM_FIELD__ADC_CFGR_OVERRUN_MODE </item>
//    <item> SFDITEM_FIELD__ADC_CFGR_CONV_MODE </item>
//    <item> SFDITEM_FIELD__ADC_CFGR_WAIT_MODE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_SEQR0  --------------------------------
// SVD Line: 19344

unsigned int ADC_SEQR0 __AT (0x40017008);



// -------------------------------  Field Item: ADC_SEQR0_SEL0  -----------------------------------
// SVD Line: 19353

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL0
//    <name> SEL0 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 0th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 0) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL1  -----------------------------------
// SVD Line: 19360

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL1
//    <name> SEL1 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 1st in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 4) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL2  -----------------------------------
// SVD Line: 19367

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL2
//    <name> SEL2 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 2nd in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 8) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL3  -----------------------------------
// SVD Line: 19374

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL3
//    <name> SEL3 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 3th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 12) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL4  -----------------------------------
// SVD Line: 19381

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL4
//    <name> SEL4 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 4th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 16) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL5  -----------------------------------
// SVD Line: 19388

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL5
//    <name> SEL5 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 5th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 20) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL6  -----------------------------------
// SVD Line: 19395

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL6
//    <name> SEL6 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 6th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 24) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR0_SEL7  -----------------------------------
// SVD Line: 19402

//  <item> SFDITEM_FIELD__ADC_SEQR0_SEL7
//    <name> SEL7 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40017008) Select the channel number from 1 to 15 as the 7th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR0 >> 28) & 0xF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_SEQR0  -----------------------------------
// SVD Line: 19344

//  <rtree> SFDITEM_REG__ADC_SEQR0
//    <name> SEQR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017008) sequence0 register </i>
//    <loc> ( (unsigned int)((ADC_SEQR0 >> 0) & 0xFFFFFFFF), ((ADC_SEQR0 = (ADC_SEQR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL0 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL1 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL2 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL3 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL4 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL5 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL6 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR0_SEL7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_SEQR1  --------------------------------
// SVD Line: 19411

unsigned int ADC_SEQR1 __AT (0x4001700C);



// -------------------------------  Field Item: ADC_SEQR1_SEL8  -----------------------------------
// SVD Line: 19420

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL8
//    <name> SEL8 </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 8th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 0) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL9  -----------------------------------
// SVD Line: 19427

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL9
//    <name> SEL9 </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 9st in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 4) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL10  ----------------------------------
// SVD Line: 19434

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL10
//    <name> SEL10 </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 10th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 8) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL11  ----------------------------------
// SVD Line: 19441

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL11
//    <name> SEL11 </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 11th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 12) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL12  ----------------------------------
// SVD Line: 19448

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL12
//    <name> SEL12 </name>
//    <rw> 
//    <i> [Bits 19..16] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 12th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 16) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL13  ----------------------------------
// SVD Line: 19455

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL13
//    <name> SEL13 </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 13th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 20) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL14  ----------------------------------
// SVD Line: 19462

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL14
//    <name> SEL14 </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 14th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 24) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_SEQR1_SEL15  ----------------------------------
// SVD Line: 19469

//  <item> SFDITEM_FIELD__ADC_SEQR1_SEL15
//    <name> SEL15 </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x4001700C) Select the channel number from 1 to 15 as the 15th in the conversion sequence </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_SEQR1 >> 28) & 0xF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_SEQR1  -----------------------------------
// SVD Line: 19411

//  <rtree> SFDITEM_REG__ADC_SEQR1
//    <name> SEQR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001700C) sequence1 register </i>
//    <loc> ( (unsigned int)((ADC_SEQR1 >> 0) & 0xFFFFFFFF), ((ADC_SEQR1 = (ADC_SEQR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL8 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL9 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL10 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL11 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL12 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL13 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL14 </item>
//    <item> SFDITEM_FIELD__ADC_SEQR1_SEL15 </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ADC_DIFFSEL  -------------------------------
// SVD Line: 19478

unsigned int ADC_DIFFSEL __AT (0x40017010);



// ------------------------------  Field Item: ADC_DIFFSEL_SEL0  ----------------------------------
// SVD Line: 19487

//  <item> SFDITEM_FIELD__ADC_DIFFSEL_SEL0
//    <name> SEL0 </name>
//    <rw> 
//    <i> [Bits 8..1] RW (@ 0x40017010) Differential or single-ended mode selection for Channels 1 to 8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_DIFFSEL >> 1) & 0xFF), ((ADC_DIFFSEL = (ADC_DIFFSEL & ~(0xFFUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: ADC_DIFFSEL_SEL1  ----------------------------------
// SVD Line: 19494

//  <item> SFDITEM_FIELD__ADC_DIFFSEL_SEL1
//    <name> SEL1 </name>
//    <r> 
//    <i> [Bits 16..9] RO (@ 0x40017010) Channels 9 to 15 are internal channels </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_DIFFSEL >> 9) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: ADC_DIFFSEL  ----------------------------------
// SVD Line: 19478

//  <rtree> SFDITEM_REG__ADC_DIFFSEL
//    <name> DIFFSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017010) difference register </i>
//    <loc> ( (unsigned int)((ADC_DIFFSEL >> 0) & 0xFFFFFFFF), ((ADC_DIFFSEL = (ADC_DIFFSEL & ~(0x1FEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_DIFFSEL_SEL0 </item>
//    <item> SFDITEM_FIELD__ADC_DIFFSEL_SEL1 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ISR  ---------------------------------
// SVD Line: 19503

unsigned int ADC_ISR __AT (0x40017014);



// ---------------------------------  Field Item: ADC_ISR_EOC  ------------------------------------
// SVD Line: 19512

//  <item> SFDITEM_FIELD__ADC_ISR_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40017014) End of conversion flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_ISR ) </loc>
//      <o.0..0> EOC
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ADC_ISR_EOS  ------------------------------------
// SVD Line: 19519

//  <item> SFDITEM_FIELD__ADC_ISR_EOS
//    <name> EOS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40017014) End of sequence of conversions flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_ISR ) </loc>
//      <o.1..1> EOS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_ISR_OVERRUN  ----------------------------------
// SVD Line: 19526

//  <item> SFDITEM_FIELD__ADC_ISR_OVERRUN
//    <name> OVERRUN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40017014) ADC conversion overrun flag </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_ISR ) </loc>
//      <o.2..2> OVERRUN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: ADC_ISR  ------------------------------------
// SVD Line: 19503

//  <rtree> SFDITEM_REG__ADC_ISR
//    <name> ISR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017014) interrupt status register </i>
//    <loc> ( (unsigned int)((ADC_ISR >> 0) & 0xFFFFFFFF), ((ADC_ISR = (ADC_ISR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ISR_EOC </item>
//    <item> SFDITEM_FIELD__ADC_ISR_EOS </item>
//    <item> SFDITEM_FIELD__ADC_ISR_OVERRUN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_IER  ---------------------------------
// SVD Line: 19535

unsigned int ADC_IER __AT (0x40017018);



// -----------------------------  Field Item: ADC_IER_EOC_INT_EN  ---------------------------------
// SVD Line: 19544

//  <item> SFDITEM_FIELD__ADC_IER_EOC_INT_EN
//    <name> EOC_INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40017018) End of conversion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_IER ) </loc>
//      <o.0..0> EOC_INT_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: ADC_IER_EOS_INT_EN  ---------------------------------
// SVD Line: 19551

//  <item> SFDITEM_FIELD__ADC_IER_EOS_INT_EN
//    <name> EOS_INT_EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40017018) End of conversion sequence interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_IER ) </loc>
//      <o.1..1> EOS_INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: ADC_IER_OVERRUN_INT_EN  -------------------------------
// SVD Line: 19558

//  <item> SFDITEM_FIELD__ADC_IER_OVERRUN_INT_EN
//    <name> OVERRUN_INT_EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40017018) ADC conversion overrun interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_IER ) </loc>
//      <o.2..2> OVERRUN_INT_EN
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: ADC_IER  ------------------------------------
// SVD Line: 19535

//  <rtree> SFDITEM_REG__ADC_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017018) interrupt enable register </i>
//    <loc> ( (unsigned int)((ADC_IER >> 0) & 0xFFFFFFFF), ((ADC_IER = (ADC_IER & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_IER_EOC_INT_EN </item>
//    <item> SFDITEM_FIELD__ADC_IER_EOS_INT_EN </item>
//    <item> SFDITEM_FIELD__ADC_IER_OVERRUN_INT_EN </item>
//  </rtree>
//  


// ------------------------------  Register Item Address: ADC_DR  ---------------------------------
// SVD Line: 19567

unsigned int ADC_DR __AT (0x4001701C);



// ---------------------------------  Field Item: ADC_DR_DATA  ------------------------------------
// SVD Line: 19576

//  <item> SFDITEM_FIELD__ADC_DR_DATA
//    <name> DATA </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x4001701C) ADC converted data </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_DR >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: ADC_DR  -------------------------------------
// SVD Line: 19567

//  <rtree> SFDITEM_REG__ADC_DR
//    <name> DR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001701C) data register </i>
//    <loc> ( (unsigned int)((ADC_DR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_DR_DATA </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_AWD0_CFGR  ------------------------------
// SVD Line: 19585

unsigned int ADC_AWD0_CFGR __AT (0x40017020);



// ---------------------------  Field Item: ADC_AWD0_CFGR_AWD0_CFGR  ------------------------------
// SVD Line: 19594

//  <item> SFDITEM_FIELD__ADC_AWD0_CFGR_AWD0_CFGR
//    <name> AWD0_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017020) AWD0_CFGR </i>
//    <edit> 
//      <loc> ( (unsigned int)((ADC_AWD0_CFGR >> 0) & 0xFFFFFFFF), ((ADC_AWD0_CFGR = (ADC_AWD0_CFGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: ADC_AWD0_CFGR  ---------------------------------
// SVD Line: 19585

//  <rtree> SFDITEM_REG__ADC_AWD0_CFGR
//    <name> AWD0_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017020) AWD0 register </i>
//    <loc> ( (unsigned int)((ADC_AWD0_CFGR >> 0) & 0xFFFFFFFF), ((ADC_AWD0_CFGR = (ADC_AWD0_CFGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_AWD0_CFGR_AWD0_CFGR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_AWD1_CFGR  ------------------------------
// SVD Line: 19603

unsigned int ADC_AWD1_CFGR __AT (0x40017024);



// ---------------------------  Field Item: ADC_AWD1_CFGR_AWD1_CFGR  ------------------------------
// SVD Line: 19612

//  <item> SFDITEM_FIELD__ADC_AWD1_CFGR_AWD1_CFGR
//    <name> AWD1_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017024) AWD1_CFGR </i>
//    <edit> 
//      <loc> ( (unsigned int)((ADC_AWD1_CFGR >> 0) & 0xFFFFFFFF), ((ADC_AWD1_CFGR = (ADC_AWD1_CFGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: ADC_AWD1_CFGR  ---------------------------------
// SVD Line: 19603

//  <rtree> SFDITEM_REG__ADC_AWD1_CFGR
//    <name> AWD1_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017024) AWD1 register </i>
//    <loc> ( (unsigned int)((ADC_AWD1_CFGR >> 0) & 0xFFFFFFFF), ((ADC_AWD1_CFGR = (ADC_AWD1_CFGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_AWD1_CFGR_AWD1_CFGR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: ADC_AWD2_CFGR  ------------------------------
// SVD Line: 19621

unsigned int ADC_AWD2_CFGR __AT (0x40017028);



// ---------------------------  Field Item: ADC_AWD2_CFGR_AWD2_CFGR  ------------------------------
// SVD Line: 19630

//  <item> SFDITEM_FIELD__ADC_AWD2_CFGR_AWD2_CFGR
//    <name> AWD2_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017028) AWD2_CFGR </i>
//    <edit> 
//      <loc> ( (unsigned int)((ADC_AWD2_CFGR >> 0) & 0xFFFFFFFF), ((ADC_AWD2_CFGR = (ADC_AWD2_CFGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: ADC_AWD2_CFGR  ---------------------------------
// SVD Line: 19621

//  <rtree> SFDITEM_REG__ADC_AWD2_CFGR
//    <name> AWD2_CFGR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017028) AWD2 register </i>
//    <loc> ( (unsigned int)((ADC_AWD2_CFGR >> 0) & 0xFFFFFFFF), ((ADC_AWD2_CFGR = (ADC_AWD2_CFGR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_AWD2_CFGR_AWD2_CFGR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: ADC  --------------------------------------
// SVD Line: 19231

//  <view> ADC
//    <name> ADC </name>
//    <item> SFDITEM_REG__ADC_CR </item>
//    <item> SFDITEM_REG__ADC_CFGR </item>
//    <item> SFDITEM_REG__ADC_SEQR0 </item>
//    <item> SFDITEM_REG__ADC_SEQR1 </item>
//    <item> SFDITEM_REG__ADC_DIFFSEL </item>
//    <item> SFDITEM_REG__ADC_ISR </item>
//    <item> SFDITEM_REG__ADC_IER </item>
//    <item> SFDITEM_REG__ADC_DR </item>
//    <item> SFDITEM_REG__ADC_AWD0_CFGR </item>
//    <item> SFDITEM_REG__ADC_AWD1_CFGR </item>
//    <item> SFDITEM_REG__ADC_AWD2_CFGR </item>
//  </view>
//  


// ----------------------------  Register Item Address: DMAC0_SAR0  -------------------------------
// SVD Line: 19655

unsigned int DMAC0_SAR0 __AT (0x40023000);



// -------------------------------  Field Item: DMAC0_SAR0_SAR  -----------------------------------
// SVD Line: 19664

//  <item> SFDITEM_FIELD__DMAC0_SAR0_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023000) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_SAR0 >> 0) & 0xFFFFFFFF), ((DMAC0_SAR0 = (DMAC0_SAR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_SAR0  -----------------------------------
// SVD Line: 19655

//  <rtree> SFDITEM_REG__DMAC0_SAR0
//    <name> SAR0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023000) source address register </i>
//    <loc> ( (unsigned int)((DMAC0_SAR0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_SAR0_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_DAR0  -------------------------------
// SVD Line: 19673

unsigned int DMAC0_DAR0 __AT (0x40023008);



// -------------------------------  Field Item: DMAC0_DAR0_DAR  -----------------------------------
// SVD Line: 19682

//  <item> SFDITEM_FIELD__DMAC0_DAR0_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023008) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_DAR0 >> 0) & 0xFFFFFFFF), ((DMAC0_DAR0 = (DMAC0_DAR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_DAR0  -----------------------------------
// SVD Line: 19673

//  <rtree> SFDITEM_REG__DMAC0_DAR0
//    <name> DAR0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023008) destination address register </i>
//    <loc> ( (unsigned int)((DMAC0_DAR0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_DAR0_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_LLP0  -------------------------------
// SVD Line: 19691

unsigned int DMAC0_LLP0 __AT (0x40023010);



// -------------------------------  Field Item: DMAC0_LLP0_LOC  -----------------------------------
// SVD Line: 19700

//  <item> SFDITEM_FIELD__DMAC0_LLP0_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023010) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_LLP0 >> 0) & 0xFFFFFFFF), ((DMAC0_LLP0 = (DMAC0_LLP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_LLP0  -----------------------------------
// SVD Line: 19691

//  <rtree> SFDITEM_REG__DMAC0_LLP0
//    <name> LLP0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023010) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC0_LLP0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_LLP0_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CTL0  -------------------------------
// SVD Line: 19709

unsigned int DMAC0_CTL0 __AT (0x40023018);



// ------------------------------  Field Item: DMAC0_CTL0_INT_EN  ---------------------------------
// SVD Line: 19718

//  <item> SFDITEM_FIELD__DMAC0_CTL0_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023018) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL0 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL0_DST_TR_WIDTH  ------------------------------
// SVD Line: 19725

//  <item> SFDITEM_FIELD__DMAC0_CTL0_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40023018) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 1) & 0x7), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL0_SRC_TR_WIDTH  ------------------------------
// SVD Line: 19732

//  <item> SFDITEM_FIELD__DMAC0_CTL0_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40023018) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 4) & 0x7), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL0_DINC  ----------------------------------
// SVD Line: 19739

//  <item> SFDITEM_FIELD__DMAC0_CTL0_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40023018) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 7) & 0x3), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL0_SINC  ----------------------------------
// SVD Line: 19746

//  <item> SFDITEM_FIELD__DMAC0_CTL0_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40023018) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 9) & 0x3), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL0_DEST_MSIZE  -------------------------------
// SVD Line: 19753

//  <item> SFDITEM_FIELD__DMAC0_CTL0_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40023018) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 11) & 0x7), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL0_SRC_MSIZE  --------------------------------
// SVD Line: 19760

//  <item> SFDITEM_FIELD__DMAC0_CTL0_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40023018) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 14) & 0x7), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL0_SRC_GATHER_EN  ------------------------------
// SVD Line: 19767

//  <item> SFDITEM_FIELD__DMAC0_CTL0_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40023018) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL0 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL0_DST_SCATTER_EN  -----------------------------
// SVD Line: 19774

//  <item> SFDITEM_FIELD__DMAC0_CTL0_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40023018) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL0 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CTL0_TT_FC  ----------------------------------
// SVD Line: 19781

//  <item> SFDITEM_FIELD__DMAC0_CTL0_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40023018) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 20) & 0x7), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL0_SMS0  ----------------------------------
// SVD Line: 19788

//  <item> SFDITEM_FIELD__DMAC0_CTL0_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40023018) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 23) & 0x3), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL0_SMS1  ----------------------------------
// SVD Line: 19795

//  <item> SFDITEM_FIELD__DMAC0_CTL0_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40023018) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL0 >> 25) & 0x3), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL0_LLP_DST_EN  -------------------------------
// SVD Line: 19802

//  <item> SFDITEM_FIELD__DMAC0_CTL0_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40023018) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL0 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL0_LLP_SRC_EN  -------------------------------
// SVD Line: 19809

//  <item> SFDITEM_FIELD__DMAC0_CTL0_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40023018) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL0 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CTL0_BLOCK_TS  --------------------------------
// SVD Line: 19816

//  <item> SFDITEM_FIELD__DMAC0_CTL0_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x40023018) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC0_CTL0 >> 32) & 0xFFF), ((DMAC0_CTL0 = (DMAC0_CTL0 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL0_DONE  ----------------------------------
// SVD Line: 19823

//  <item> SFDITEM_FIELD__DMAC0_CTL0_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x40023018) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL0 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CTL0  -----------------------------------
// SVD Line: 19709

//  <rtree> SFDITEM_REG__DMAC0_CTL0
//    <name> CTL0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023018) channel control register </i>
//    <loc> ( (unsigned int)((DMAC0_CTL0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_DINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_SINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL0_DONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CFG0  -------------------------------
// SVD Line: 19832

unsigned int DMAC0_CFG0 __AT (0x40023040);



// -----------------------------  Field Item: DMAC0_CFG0_CH_PRIOR  --------------------------------
// SVD Line: 19841

//  <item> SFDITEM_FIELD__DMAC0_CFG0_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40023040) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG0 >> 5) & 0x7), ((DMAC0_CFG0 = (DMAC0_CFG0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG0_CH_SUSP  ---------------------------------
// SVD Line: 19848

//  <item> SFDITEM_FIELD__DMAC0_CFG0_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40023040) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_FIFO_EMPTY  -------------------------------
// SVD Line: 19855

//  <item> SFDITEM_FIELD__DMAC0_CFG0_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40023040) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_HS_SEL_DST  -------------------------------
// SVD Line: 19862

//  <item> SFDITEM_FIELD__DMAC0_CFG0_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40023040) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_HS_SEL_SRC  -------------------------------
// SVD Line: 19869

//  <item> SFDITEM_FIELD__DMAC0_CFG0_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40023040) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_LOCK_CH_L  --------------------------------
// SVD Line: 19876

//  <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40023040) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG0 >> 12) & 0x3), ((DMAC0_CFG0 = (DMAC0_CFG0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG0_LOCK_B_L  --------------------------------
// SVD Line: 19883

//  <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40023040) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG0 >> 14) & 0x3), ((DMAC0_CFG0 = (DMAC0_CFG0 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG0_LOCK_CH  ---------------------------------
// SVD Line: 19890

//  <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40023040) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CFG0_LOCK_B  ---------------------------------
// SVD Line: 19897

//  <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40023040) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_DST_HS_POL  -------------------------------
// SVD Line: 19904

//  <item> SFDITEM_FIELD__DMAC0_CFG0_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40023040) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_SRC_HS_POL  -------------------------------
// SVD Line: 19911

//  <item> SFDITEM_FIELD__DMAC0_CFG0_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40023040) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_RELOAD_SRC  -------------------------------
// SVD Line: 19918

//  <item> SFDITEM_FIELD__DMAC0_CFG0_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40023040) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_RELOAD_DST  -------------------------------
// SVD Line: 19925

//  <item> SFDITEM_FIELD__DMAC0_CFG0_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40023040) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CFG0_FCMODE  ---------------------------------
// SVD Line: 19932

//  <item> SFDITEM_FIELD__DMAC0_CFG0_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x40023040) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_FIFO_MODE  --------------------------------
// SVD Line: 19939

//  <item> SFDITEM_FIELD__DMAC0_CFG0_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x40023040) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG0_PROTCTL  ---------------------------------
// SVD Line: 19946

//  <item> SFDITEM_FIELD__DMAC0_CFG0_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x40023040) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG0 >> 34) & 0x7), ((DMAC0_CFG0 = (DMAC0_CFG0 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_DS_UPD_EN  --------------------------------
// SVD Line: 19953

//  <item> SFDITEM_FIELD__DMAC0_CFG0_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x40023040) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG0_SS_UPD_EN  --------------------------------
// SVD Line: 19960

//  <item> SFDITEM_FIELD__DMAC0_CFG0_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x40023040) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG0 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG0_SRC_PER  ---------------------------------
// SVD Line: 19967

//  <item> SFDITEM_FIELD__DMAC0_CFG0_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x40023040) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG0 >> 39) & 0xF), ((DMAC0_CFG0 = (DMAC0_CFG0 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG0_DEST_PER  --------------------------------
// SVD Line: 19974

//  <item> SFDITEM_FIELD__DMAC0_CFG0_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x40023040) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG0 >> 43) & 0xF), ((DMAC0_CFG0 = (DMAC0_CFG0 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CFG0  -----------------------------------
// SVD Line: 19832

//  <rtree> SFDITEM_REG__DMAC0_CFG0
//    <name> CFG0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023040) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC0_CFG0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG0_DEST_PER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_SAR1  -------------------------------
// SVD Line: 19983

unsigned int DMAC0_SAR1 __AT (0x40023058);



// -------------------------------  Field Item: DMAC0_SAR1_SAR  -----------------------------------
// SVD Line: 19992

//  <item> SFDITEM_FIELD__DMAC0_SAR1_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023058) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_SAR1 >> 0) & 0xFFFFFFFF), ((DMAC0_SAR1 = (DMAC0_SAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_SAR1  -----------------------------------
// SVD Line: 19983

//  <rtree> SFDITEM_REG__DMAC0_SAR1
//    <name> SAR1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023058) source address register </i>
//    <loc> ( (unsigned int)((DMAC0_SAR1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_SAR1_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_DAR1  -------------------------------
// SVD Line: 20001

unsigned int DMAC0_DAR1 __AT (0x40023060);



// -------------------------------  Field Item: DMAC0_DAR1_DAR  -----------------------------------
// SVD Line: 20010

//  <item> SFDITEM_FIELD__DMAC0_DAR1_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023060) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_DAR1 >> 0) & 0xFFFFFFFF), ((DMAC0_DAR1 = (DMAC0_DAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_DAR1  -----------------------------------
// SVD Line: 20001

//  <rtree> SFDITEM_REG__DMAC0_DAR1
//    <name> DAR1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023060) destination address register </i>
//    <loc> ( (unsigned int)((DMAC0_DAR1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_DAR1_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_LLP1  -------------------------------
// SVD Line: 20019

unsigned int DMAC0_LLP1 __AT (0x40023068);



// -------------------------------  Field Item: DMAC0_LLP1_LOC  -----------------------------------
// SVD Line: 20028

//  <item> SFDITEM_FIELD__DMAC0_LLP1_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023068) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_LLP1 >> 0) & 0xFFFFFFFF), ((DMAC0_LLP1 = (DMAC0_LLP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_LLP1  -----------------------------------
// SVD Line: 20019

//  <rtree> SFDITEM_REG__DMAC0_LLP1
//    <name> LLP1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023068) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC0_LLP1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_LLP1_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CTL1  -------------------------------
// SVD Line: 20037

unsigned int DMAC0_CTL1 __AT (0x40023070);



// ------------------------------  Field Item: DMAC0_CTL1_INT_EN  ---------------------------------
// SVD Line: 20046

//  <item> SFDITEM_FIELD__DMAC0_CTL1_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023070) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL1 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL1_DST_TR_WIDTH  ------------------------------
// SVD Line: 20053

//  <item> SFDITEM_FIELD__DMAC0_CTL1_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40023070) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 1) & 0x7), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL1_SRC_TR_WIDTH  ------------------------------
// SVD Line: 20060

//  <item> SFDITEM_FIELD__DMAC0_CTL1_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40023070) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 4) & 0x7), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL1_DINC  ----------------------------------
// SVD Line: 20067

//  <item> SFDITEM_FIELD__DMAC0_CTL1_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40023070) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 7) & 0x3), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL1_SINC  ----------------------------------
// SVD Line: 20074

//  <item> SFDITEM_FIELD__DMAC0_CTL1_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40023070) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 9) & 0x3), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL1_DEST_MSIZE  -------------------------------
// SVD Line: 20081

//  <item> SFDITEM_FIELD__DMAC0_CTL1_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40023070) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 11) & 0x7), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL1_SRC_MSIZE  --------------------------------
// SVD Line: 20088

//  <item> SFDITEM_FIELD__DMAC0_CTL1_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40023070) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 14) & 0x7), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL1_SRC_GATHER_EN  ------------------------------
// SVD Line: 20095

//  <item> SFDITEM_FIELD__DMAC0_CTL1_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40023070) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL1 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL1_DST_SCATTER_EN  -----------------------------
// SVD Line: 20102

//  <item> SFDITEM_FIELD__DMAC0_CTL1_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40023070) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL1 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CTL1_TT_FC  ----------------------------------
// SVD Line: 20109

//  <item> SFDITEM_FIELD__DMAC0_CTL1_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40023070) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 20) & 0x7), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL1_SMS0  ----------------------------------
// SVD Line: 20116

//  <item> SFDITEM_FIELD__DMAC0_CTL1_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40023070) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 23) & 0x3), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL1_SMS1  ----------------------------------
// SVD Line: 20123

//  <item> SFDITEM_FIELD__DMAC0_CTL1_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40023070) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL1 >> 25) & 0x3), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL1_LLP_DST_EN  -------------------------------
// SVD Line: 20130

//  <item> SFDITEM_FIELD__DMAC0_CTL1_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40023070) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL1 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL1_LLP_SRC_EN  -------------------------------
// SVD Line: 20137

//  <item> SFDITEM_FIELD__DMAC0_CTL1_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40023070) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL1 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CTL1_BLOCK_TS  --------------------------------
// SVD Line: 20144

//  <item> SFDITEM_FIELD__DMAC0_CTL1_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x40023070) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC0_CTL1 >> 32) & 0xFFF), ((DMAC0_CTL1 = (DMAC0_CTL1 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL1_DONE  ----------------------------------
// SVD Line: 20151

//  <item> SFDITEM_FIELD__DMAC0_CTL1_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x40023070) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL1 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CTL1  -----------------------------------
// SVD Line: 20037

//  <rtree> SFDITEM_REG__DMAC0_CTL1
//    <name> CTL1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023070) channel control register </i>
//    <loc> ( (unsigned int)((DMAC0_CTL1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_DINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_SINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL1_DONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CFG1  -------------------------------
// SVD Line: 20160

unsigned int DMAC0_CFG1 __AT (0x40023098);



// -----------------------------  Field Item: DMAC0_CFG1_CH_PRIOR  --------------------------------
// SVD Line: 20169

//  <item> SFDITEM_FIELD__DMAC0_CFG1_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40023098) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG1 >> 5) & 0x7), ((DMAC0_CFG1 = (DMAC0_CFG1 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG1_CH_SUSP  ---------------------------------
// SVD Line: 20176

//  <item> SFDITEM_FIELD__DMAC0_CFG1_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40023098) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_FIFO_EMPTY  -------------------------------
// SVD Line: 20183

//  <item> SFDITEM_FIELD__DMAC0_CFG1_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40023098) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_HS_SEL_DST  -------------------------------
// SVD Line: 20190

//  <item> SFDITEM_FIELD__DMAC0_CFG1_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40023098) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_HS_SEL_SRC  -------------------------------
// SVD Line: 20197

//  <item> SFDITEM_FIELD__DMAC0_CFG1_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40023098) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_LOCK_CH_L  --------------------------------
// SVD Line: 20204

//  <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40023098) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG1 >> 12) & 0x3), ((DMAC0_CFG1 = (DMAC0_CFG1 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG1_LOCK_B_L  --------------------------------
// SVD Line: 20211

//  <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40023098) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG1 >> 14) & 0x3), ((DMAC0_CFG1 = (DMAC0_CFG1 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG1_LOCK_CH  ---------------------------------
// SVD Line: 20218

//  <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40023098) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CFG1_LOCK_B  ---------------------------------
// SVD Line: 20225

//  <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40023098) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_DST_HS_POL  -------------------------------
// SVD Line: 20232

//  <item> SFDITEM_FIELD__DMAC0_CFG1_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40023098) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_SRC_HS_POL  -------------------------------
// SVD Line: 20239

//  <item> SFDITEM_FIELD__DMAC0_CFG1_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40023098) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_RELOAD_SRC  -------------------------------
// SVD Line: 20246

//  <item> SFDITEM_FIELD__DMAC0_CFG1_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40023098) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_RELOAD_DST  -------------------------------
// SVD Line: 20253

//  <item> SFDITEM_FIELD__DMAC0_CFG1_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40023098) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CFG1_FCMODE  ---------------------------------
// SVD Line: 20260

//  <item> SFDITEM_FIELD__DMAC0_CFG1_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x40023098) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_FIFO_MODE  --------------------------------
// SVD Line: 20267

//  <item> SFDITEM_FIELD__DMAC0_CFG1_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x40023098) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG1_PROTCTL  ---------------------------------
// SVD Line: 20274

//  <item> SFDITEM_FIELD__DMAC0_CFG1_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x40023098) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG1 >> 34) & 0x7), ((DMAC0_CFG1 = (DMAC0_CFG1 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_DS_UPD_EN  --------------------------------
// SVD Line: 20281

//  <item> SFDITEM_FIELD__DMAC0_CFG1_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x40023098) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG1_SS_UPD_EN  --------------------------------
// SVD Line: 20288

//  <item> SFDITEM_FIELD__DMAC0_CFG1_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x40023098) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG1 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG1_SRC_PER  ---------------------------------
// SVD Line: 20295

//  <item> SFDITEM_FIELD__DMAC0_CFG1_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x40023098) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG1 >> 39) & 0xF), ((DMAC0_CFG1 = (DMAC0_CFG1 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG1_DEST_PER  --------------------------------
// SVD Line: 20302

//  <item> SFDITEM_FIELD__DMAC0_CFG1_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x40023098) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG1 >> 43) & 0xF), ((DMAC0_CFG1 = (DMAC0_CFG1 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CFG1  -----------------------------------
// SVD Line: 20160

//  <rtree> SFDITEM_REG__DMAC0_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023098) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC0_CFG1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG1_DEST_PER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_SAR2  -------------------------------
// SVD Line: 20311

unsigned int DMAC0_SAR2 __AT (0x400230B0);



// -------------------------------  Field Item: DMAC0_SAR2_SAR  -----------------------------------
// SVD Line: 20320

//  <item> SFDITEM_FIELD__DMAC0_SAR2_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400230B0) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_SAR2 >> 0) & 0xFFFFFFFF), ((DMAC0_SAR2 = (DMAC0_SAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_SAR2  -----------------------------------
// SVD Line: 20311

//  <rtree> SFDITEM_REG__DMAC0_SAR2
//    <name> SAR2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400230B0) source address register </i>
//    <loc> ( (unsigned int)((DMAC0_SAR2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_SAR2_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_DAR2  -------------------------------
// SVD Line: 20329

unsigned int DMAC0_DAR2 __AT (0x400230B8);



// -------------------------------  Field Item: DMAC0_DAR2_DAR  -----------------------------------
// SVD Line: 20338

//  <item> SFDITEM_FIELD__DMAC0_DAR2_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400230B8) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_DAR2 >> 0) & 0xFFFFFFFF), ((DMAC0_DAR2 = (DMAC0_DAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_DAR2  -----------------------------------
// SVD Line: 20329

//  <rtree> SFDITEM_REG__DMAC0_DAR2
//    <name> DAR2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400230B8) destination address register </i>
//    <loc> ( (unsigned int)((DMAC0_DAR2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_DAR2_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_LLP2  -------------------------------
// SVD Line: 20347

unsigned int DMAC0_LLP2 __AT (0x400230C0);



// -------------------------------  Field Item: DMAC0_LLP2_LOC  -----------------------------------
// SVD Line: 20356

//  <item> SFDITEM_FIELD__DMAC0_LLP2_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400230C0) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_LLP2 >> 0) & 0xFFFFFFFF), ((DMAC0_LLP2 = (DMAC0_LLP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_LLP2  -----------------------------------
// SVD Line: 20347

//  <rtree> SFDITEM_REG__DMAC0_LLP2
//    <name> LLP2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400230C0) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC0_LLP2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_LLP2_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CTL2  -------------------------------
// SVD Line: 20365

unsigned int DMAC0_CTL2 __AT (0x400230C8);



// ------------------------------  Field Item: DMAC0_CTL2_INT_EN  ---------------------------------
// SVD Line: 20374

//  <item> SFDITEM_FIELD__DMAC0_CTL2_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400230C8) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL2 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL2_DST_TR_WIDTH  ------------------------------
// SVD Line: 20381

//  <item> SFDITEM_FIELD__DMAC0_CTL2_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x400230C8) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 1) & 0x7), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL2_SRC_TR_WIDTH  ------------------------------
// SVD Line: 20388

//  <item> SFDITEM_FIELD__DMAC0_CTL2_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400230C8) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 4) & 0x7), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL2_DINC  ----------------------------------
// SVD Line: 20395

//  <item> SFDITEM_FIELD__DMAC0_CTL2_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x400230C8) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 7) & 0x3), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL2_SINC  ----------------------------------
// SVD Line: 20402

//  <item> SFDITEM_FIELD__DMAC0_CTL2_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x400230C8) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 9) & 0x3), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL2_DEST_MSIZE  -------------------------------
// SVD Line: 20409

//  <item> SFDITEM_FIELD__DMAC0_CTL2_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x400230C8) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 11) & 0x7), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL2_SRC_MSIZE  --------------------------------
// SVD Line: 20416

//  <item> SFDITEM_FIELD__DMAC0_CTL2_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x400230C8) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 14) & 0x7), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL2_SRC_GATHER_EN  ------------------------------
// SVD Line: 20423

//  <item> SFDITEM_FIELD__DMAC0_CTL2_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400230C8) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL2 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL2_DST_SCATTER_EN  -----------------------------
// SVD Line: 20430

//  <item> SFDITEM_FIELD__DMAC0_CTL2_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400230C8) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL2 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CTL2_TT_FC  ----------------------------------
// SVD Line: 20437

//  <item> SFDITEM_FIELD__DMAC0_CTL2_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x400230C8) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 20) & 0x7), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL2_SMS0  ----------------------------------
// SVD Line: 20444

//  <item> SFDITEM_FIELD__DMAC0_CTL2_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x400230C8) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 23) & 0x3), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL2_SMS1  ----------------------------------
// SVD Line: 20451

//  <item> SFDITEM_FIELD__DMAC0_CTL2_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400230C8) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL2 >> 25) & 0x3), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL2_LLP_DST_EN  -------------------------------
// SVD Line: 20458

//  <item> SFDITEM_FIELD__DMAC0_CTL2_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400230C8) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL2 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL2_LLP_SRC_EN  -------------------------------
// SVD Line: 20465

//  <item> SFDITEM_FIELD__DMAC0_CTL2_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400230C8) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL2 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CTL2_BLOCK_TS  --------------------------------
// SVD Line: 20472

//  <item> SFDITEM_FIELD__DMAC0_CTL2_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x400230C8) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC0_CTL2 >> 32) & 0xFFF), ((DMAC0_CTL2 = (DMAC0_CTL2 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL2_DONE  ----------------------------------
// SVD Line: 20479

//  <item> SFDITEM_FIELD__DMAC0_CTL2_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x400230C8) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL2 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CTL2  -----------------------------------
// SVD Line: 20365

//  <rtree> SFDITEM_REG__DMAC0_CTL2
//    <name> CTL2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400230C8) channel control register </i>
//    <loc> ( (unsigned int)((DMAC0_CTL2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_DINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_SINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL2_DONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CFG2  -------------------------------
// SVD Line: 20488

unsigned int DMAC0_CFG2 __AT (0x400230F0);



// -----------------------------  Field Item: DMAC0_CFG2_CH_PRIOR  --------------------------------
// SVD Line: 20497

//  <item> SFDITEM_FIELD__DMAC0_CFG2_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x400230F0) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG2 >> 5) & 0x7), ((DMAC0_CFG2 = (DMAC0_CFG2 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG2_CH_SUSP  ---------------------------------
// SVD Line: 20504

//  <item> SFDITEM_FIELD__DMAC0_CFG2_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400230F0) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_FIFO_EMPTY  -------------------------------
// SVD Line: 20511

//  <item> SFDITEM_FIELD__DMAC0_CFG2_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400230F0) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_HS_SEL_DST  -------------------------------
// SVD Line: 20518

//  <item> SFDITEM_FIELD__DMAC0_CFG2_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400230F0) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_HS_SEL_SRC  -------------------------------
// SVD Line: 20525

//  <item> SFDITEM_FIELD__DMAC0_CFG2_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400230F0) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_LOCK_CH_L  --------------------------------
// SVD Line: 20532

//  <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400230F0) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG2 >> 12) & 0x3), ((DMAC0_CFG2 = (DMAC0_CFG2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG2_LOCK_B_L  --------------------------------
// SVD Line: 20539

//  <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x400230F0) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG2 >> 14) & 0x3), ((DMAC0_CFG2 = (DMAC0_CFG2 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG2_LOCK_CH  ---------------------------------
// SVD Line: 20546

//  <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400230F0) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CFG2_LOCK_B  ---------------------------------
// SVD Line: 20553

//  <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400230F0) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_DST_HS_POL  -------------------------------
// SVD Line: 20560

//  <item> SFDITEM_FIELD__DMAC0_CFG2_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400230F0) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_SRC_HS_POL  -------------------------------
// SVD Line: 20567

//  <item> SFDITEM_FIELD__DMAC0_CFG2_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400230F0) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_RELOAD_SRC  -------------------------------
// SVD Line: 20574

//  <item> SFDITEM_FIELD__DMAC0_CFG2_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400230F0) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_RELOAD_DST  -------------------------------
// SVD Line: 20581

//  <item> SFDITEM_FIELD__DMAC0_CFG2_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400230F0) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CFG2_FCMODE  ---------------------------------
// SVD Line: 20588

//  <item> SFDITEM_FIELD__DMAC0_CFG2_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x400230F0) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_FIFO_MODE  --------------------------------
// SVD Line: 20595

//  <item> SFDITEM_FIELD__DMAC0_CFG2_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x400230F0) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG2_PROTCTL  ---------------------------------
// SVD Line: 20602

//  <item> SFDITEM_FIELD__DMAC0_CFG2_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x400230F0) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG2 >> 34) & 0x7), ((DMAC0_CFG2 = (DMAC0_CFG2 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_DS_UPD_EN  --------------------------------
// SVD Line: 20609

//  <item> SFDITEM_FIELD__DMAC0_CFG2_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x400230F0) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CFG2_SS_UPD_EN  --------------------------------
// SVD Line: 20616

//  <item> SFDITEM_FIELD__DMAC0_CFG2_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x400230F0) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG2 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG2_SRC_PER  ---------------------------------
// SVD Line: 20623

//  <item> SFDITEM_FIELD__DMAC0_CFG2_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x400230F0) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG2 >> 39) & 0xF), ((DMAC0_CFG2 = (DMAC0_CFG2 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CFG2_DEST_PER  --------------------------------
// SVD Line: 20630

//  <item> SFDITEM_FIELD__DMAC0_CFG2_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x400230F0) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CFG2 >> 43) & 0xF), ((DMAC0_CFG2 = (DMAC0_CFG2 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CFG2  -----------------------------------
// SVD Line: 20488

//  <rtree> SFDITEM_REG__DMAC0_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400230F0) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC0_CFG2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC0_CFG2_DEST_PER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_SAR3  -------------------------------
// SVD Line: 20639

unsigned int DMAC0_SAR3 __AT (0x40023108);



// -------------------------------  Field Item: DMAC0_SAR3_SAR  -----------------------------------
// SVD Line: 20648

//  <item> SFDITEM_FIELD__DMAC0_SAR3_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023108) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_SAR3 >> 0) & 0xFFFFFFFF), ((DMAC0_SAR3 = (DMAC0_SAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_SAR3  -----------------------------------
// SVD Line: 20639

//  <rtree> SFDITEM_REG__DMAC0_SAR3
//    <name> SAR3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023108) source address register </i>
//    <loc> ( (unsigned int)((DMAC0_SAR3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_SAR3_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_DAR3  -------------------------------
// SVD Line: 20657

unsigned int DMAC0_DAR3 __AT (0x40023110);



// -------------------------------  Field Item: DMAC0_DAR3_DAR  -----------------------------------
// SVD Line: 20666

//  <item> SFDITEM_FIELD__DMAC0_DAR3_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023110) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_DAR3 >> 0) & 0xFFFFFFFF), ((DMAC0_DAR3 = (DMAC0_DAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_DAR3  -----------------------------------
// SVD Line: 20657

//  <rtree> SFDITEM_REG__DMAC0_DAR3
//    <name> DAR3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023110) destination address register </i>
//    <loc> ( (unsigned int)((DMAC0_DAR3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_DAR3_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_LLP3  -------------------------------
// SVD Line: 20675

unsigned int DMAC0_LLP3 __AT (0x40023118);



// -------------------------------  Field Item: DMAC0_LLP3_LOC  -----------------------------------
// SVD Line: 20684

//  <item> SFDITEM_FIELD__DMAC0_LLP3_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40023118) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC0_LLP3 >> 0) & 0xFFFFFFFF), ((DMAC0_LLP3 = (DMAC0_LLP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_LLP3  -----------------------------------
// SVD Line: 20675

//  <rtree> SFDITEM_REG__DMAC0_LLP3
//    <name> LLP3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023118) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC0_LLP3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_LLP3_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CTL3  -------------------------------
// SVD Line: 20693

unsigned int DMAC0_CTL3 __AT (0x40023120);



// ------------------------------  Field Item: DMAC0_CTL3_INT_EN  ---------------------------------
// SVD Line: 20702

//  <item> SFDITEM_FIELD__DMAC0_CTL3_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023120) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL3 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL3_DST_TR_WIDTH  ------------------------------
// SVD Line: 20709

//  <item> SFDITEM_FIELD__DMAC0_CTL3_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40023120) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 1) & 0x7), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CTL3_SRC_TR_WIDTH  ------------------------------
// SVD Line: 20716

//  <item> SFDITEM_FIELD__DMAC0_CTL3_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40023120) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 4) & 0x7), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL3_DINC  ----------------------------------
// SVD Line: 20723

//  <item> SFDITEM_FIELD__DMAC0_CTL3_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40023120) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 7) & 0x3), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL3_SINC  ----------------------------------
// SVD Line: 20730

//  <item> SFDITEM_FIELD__DMAC0_CTL3_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40023120) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 9) & 0x3), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL3_DEST_MSIZE  -------------------------------
// SVD Line: 20737

//  <item> SFDITEM_FIELD__DMAC0_CTL3_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40023120) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 11) & 0x7), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL3_SRC_MSIZE  --------------------------------
// SVD Line: 20744

//  <item> SFDITEM_FIELD__DMAC0_CTL3_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40023120) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 14) & 0x7), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL3_SRC_GATHER_EN  ------------------------------
// SVD Line: 20751

//  <item> SFDITEM_FIELD__DMAC0_CTL3_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40023120) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL3 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_CTL3_DST_SCATTER_EN  -----------------------------
// SVD Line: 20758

//  <item> SFDITEM_FIELD__DMAC0_CTL3_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40023120) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL3 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC0_CTL3_TT_FC  ----------------------------------
// SVD Line: 20765

//  <item> SFDITEM_FIELD__DMAC0_CTL3_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40023120) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 20) & 0x7), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL3_SMS0  ----------------------------------
// SVD Line: 20772

//  <item> SFDITEM_FIELD__DMAC0_CTL3_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40023120) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 23) & 0x3), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL3_SMS1  ----------------------------------
// SVD Line: 20779

//  <item> SFDITEM_FIELD__DMAC0_CTL3_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40023120) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_CTL3 >> 25) & 0x3), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL3_LLP_DST_EN  -------------------------------
// SVD Line: 20786

//  <item> SFDITEM_FIELD__DMAC0_CTL3_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40023120) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL3 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_CTL3_LLP_SRC_EN  -------------------------------
// SVD Line: 20793

//  <item> SFDITEM_FIELD__DMAC0_CTL3_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40023120) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL3 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CTL3_BLOCK_TS  --------------------------------
// SVD Line: 20800

//  <item> SFDITEM_FIELD__DMAC0_CTL3_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x40023120) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC0_CTL3 >> 32) & 0xFFF), ((DMAC0_CTL3 = (DMAC0_CTL3 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC0_CTL3_DONE  ----------------------------------
// SVD Line: 20807

//  <item> SFDITEM_FIELD__DMAC0_CTL3_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x40023120) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CTL3 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CTL3  -----------------------------------
// SVD Line: 20693

//  <rtree> SFDITEM_REG__DMAC0_CTL3
//    <name> CTL3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023120) channel control register </i>
//    <loc> ( (unsigned int)((DMAC0_CTL3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_DINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_SINC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC0_CTL3_DONE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DMAC0_DMA_CFG0  -----------------------------
// SVD Line: 20816

unsigned int DMAC0_DMA_CFG0 __AT (0x40023148);



// ---------------------------  Field Item: DMAC0_DMA_CFG0_CH_PRIOR  ------------------------------
// SVD Line: 20825

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40023148) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_DMA_CFG0 >> 5) & 0x7), ((DMAC0_DMA_CFG0 = (DMAC0_DMA_CFG0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_DMA_CFG0_CH_SUSP  -------------------------------
// SVD Line: 20832

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40023148) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_FIFO_EMPTY  -----------------------------
// SVD Line: 20839

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40023148) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_HS_SEL_DST  -----------------------------
// SVD Line: 20846

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40023148) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_HS_SEL_SRC  -----------------------------
// SVD Line: 20853

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40023148) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_LOCK_CH_L  ------------------------------
// SVD Line: 20860

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40023148) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_DMA_CFG0 >> 12) & 0x3), ((DMAC0_DMA_CFG0 = (DMAC0_DMA_CFG0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_DMA_CFG0_LOCK_B_L  ------------------------------
// SVD Line: 20867

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40023148) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_DMA_CFG0 >> 14) & 0x3), ((DMAC0_DMA_CFG0 = (DMAC0_DMA_CFG0 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_DMA_CFG0_LOCK_CH  -------------------------------
// SVD Line: 20874

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40023148) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_DMA_CFG0_LOCK_B  -------------------------------
// SVD Line: 20881

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40023148) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_DST_HS_POL  -----------------------------
// SVD Line: 20888

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40023148) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_SRC_HS_POL  -----------------------------
// SVD Line: 20895

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40023148) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_RELOAD_SRC  -----------------------------
// SVD Line: 20902

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40023148) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_RELOAD_DST  -----------------------------
// SVD Line: 20909

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40023148) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC0_DMA_CFG0_FCMODE  -------------------------------
// SVD Line: 20916

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x40023148) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_FIFO_MODE  ------------------------------
// SVD Line: 20923

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x40023148) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_DMA_CFG0_PROTCTL  -------------------------------
// SVD Line: 20930

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x40023148) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_DMA_CFG0 >> 34) & 0x7), ((DMAC0_DMA_CFG0 = (DMAC0_DMA_CFG0 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_DS_UPD_EN  ------------------------------
// SVD Line: 20937

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x40023148) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_DMA_CFG0_SS_UPD_EN  ------------------------------
// SVD Line: 20944

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x40023148) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_DMA_CFG0 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_DMA_CFG0_SRC_PER  -------------------------------
// SVD Line: 20951

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x40023148) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_DMA_CFG0 >> 39) & 0xF), ((DMAC0_DMA_CFG0 = (DMAC0_DMA_CFG0 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_DMA_CFG0_DEST_PER  ------------------------------
// SVD Line: 20958

//  <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x40023148) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC0_DMA_CFG0 >> 43) & 0xF), ((DMAC0_DMA_CFG0 = (DMAC0_DMA_CFG0 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DMAC0_DMA_CFG0  ---------------------------------
// SVD Line: 20816

//  <rtree> SFDITEM_REG__DMAC0_DMA_CFG0
//    <name> DMA_CFG0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023148) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC0_DMA_CFG0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC0_DMA_CFG0_DEST_PER </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC0_STATUS_TFR  ----------------------------
// SVD Line: 20967

unsigned int DMAC0_STATUS_TFR __AT (0x400232E8);



// ------------------------  Field Item: DMAC0_STATUS_TFR_CHAN0_STATUS  ---------------------------
// SVD Line: 20976

//  <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400232E8) DMA channel 0 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_TFR ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_STATUS_TFR_CHAN1_STATUS  ---------------------------
// SVD Line: 20983

//  <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400232E8) DMA channel 1 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_TFR ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_STATUS_TFR_CHAN2_STATUS  ---------------------------
// SVD Line: 20990

//  <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400232E8) DMA channel 2 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_TFR ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_STATUS_TFR_CHAN3_STATUS  ---------------------------
// SVD Line: 20997

//  <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400232E8) DMA channel 3 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_TFR ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC0_STATUS_TFR  --------------------------------
// SVD Line: 20967

//  <rtree> SFDITEM_REG__DMAC0_STATUS_TFR
//    <name> STATUS_TFR </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x400232E8) DMA transfer complete interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC0_STATUS_TFR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_TFR_CHAN3_STATUS </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAC0_STATUS_BLOCK  ---------------------------
// SVD Line: 21006

unsigned int DMAC0_STATUS_BLOCK __AT (0x400232F0);



// -----------------------  Field Item: DMAC0_STATUS_BLOCK_CHAN0_STATUS  --------------------------
// SVD Line: 21015

//  <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400232F0) DMA channel 0 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_BLOCK ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_STATUS_BLOCK_CHAN1_STATUS  --------------------------
// SVD Line: 21022

//  <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400232F0) DMA channel 1 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_BLOCK ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_STATUS_BLOCK_CHAN2_STATUS  --------------------------
// SVD Line: 21029

//  <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400232F0) DMA channel 2 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_BLOCK ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_STATUS_BLOCK_CHAN3_STATUS  --------------------------
// SVD Line: 21036

//  <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400232F0) DMA channel 3 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_BLOCK ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DMAC0_STATUS_BLOCK  -------------------------------
// SVD Line: 21006

//  <rtree> SFDITEM_REG__DMAC0_STATUS_BLOCK
//    <name> STATUS_BLOCK </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x400232F0) DMA block transfer complete interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC0_STATUS_BLOCK >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_BLOCK_CHAN3_STATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DMAC0_STATUS_SRC_TRAN  --------------------------
// SVD Line: 21045

unsigned int DMAC0_STATUS_SRC_TRAN __AT (0x400232F8);



// ---------------------  Field Item: DMAC0_STATUS_SRC_TRAN_CHAN0_STATUS  -------------------------
// SVD Line: 21054

//  <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400232F8) Source transfer completion status of DMA channel 0 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_SRC_TRAN ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC0_STATUS_SRC_TRAN_CHAN1_STATUS  -------------------------
// SVD Line: 21061

//  <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400232F8) Source transfer completion status of DMA channel 1 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_SRC_TRAN ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC0_STATUS_SRC_TRAN_CHAN2_STATUS  -------------------------
// SVD Line: 21068

//  <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400232F8) Source transfer completion status of DMA channel 2 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_SRC_TRAN ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC0_STATUS_SRC_TRAN_CHAN3_STATUS  -------------------------
// SVD Line: 21075

//  <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400232F8) Source transfer completion status of DMA channel 3 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_SRC_TRAN ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC0_STATUS_SRC_TRAN  -----------------------------
// SVD Line: 21045

//  <rtree> SFDITEM_REG__DMAC0_STATUS_SRC_TRAN
//    <name> STATUS_SRC_TRAN </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x400232F8) DMA source processing completed interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC0_STATUS_SRC_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_SRC_TRAN_CHAN3_STATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DMAC0_STATUS_DST_TRAN  --------------------------
// SVD Line: 21084

unsigned int DMAC0_STATUS_DST_TRAN __AT (0x40023300);



// ---------------------  Field Item: DMAC0_STATUS_DST_TRAN_CHAN0_STATUS  -------------------------
// SVD Line: 21093

//  <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40023300) Destination transfer completion status of DMA channel 0 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_DST_TRAN ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC0_STATUS_DST_TRAN_CHAN1_STATUS  -------------------------
// SVD Line: 21100

//  <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40023300) Destination transfer completion status of DMA channel 1 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_DST_TRAN ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC0_STATUS_DST_TRAN_CHAN2_STATUS  -------------------------
// SVD Line: 21107

//  <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40023300) Destination transfer completion status of DMA channel 2 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_DST_TRAN ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC0_STATUS_DST_TRAN_CHAN3_STATUS  -------------------------
// SVD Line: 21114

//  <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40023300) Destination transfer completion status of DMA channel 3 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_DST_TRAN ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC0_STATUS_DST_TRAN  -----------------------------
// SVD Line: 21084

//  <rtree> SFDITEM_REG__DMAC0_STATUS_DST_TRAN
//    <name> STATUS_DST_TRAN </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x40023300) DMA source processing completed interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC0_STATUS_DST_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_DST_TRAN_CHAN3_STATUS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC0_STATUS_ERR  ----------------------------
// SVD Line: 21123

unsigned int DMAC0_STATUS_ERR __AT (0x40023308);



// ------------------------  Field Item: DMAC0_STATUS_ERR_CHAN0_STATUS  ---------------------------
// SVD Line: 21132

//  <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40023308) channel 0 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_ERR ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_STATUS_ERR_CHAN1_STATUS  ---------------------------
// SVD Line: 21139

//  <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40023308) channel 1 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_ERR ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_STATUS_ERR_CHAN2_STATUS  ---------------------------
// SVD Line: 21146

//  <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40023308) channel 2 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_ERR ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_STATUS_ERR_CHAN3_STATUS  ---------------------------
// SVD Line: 21153

//  <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40023308) channel 3 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_STATUS_ERR ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC0_STATUS_ERR  --------------------------------
// SVD Line: 21123

//  <rtree> SFDITEM_REG__DMAC0_STATUS_ERR
//    <name> STATUS_ERR </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x40023308) DMA transmission error status register </i>
//    <loc> ( (unsigned int)((DMAC0_STATUS_ERR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC0_STATUS_ERR_CHAN3_STATUS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DMAC0_MASK_TFR  -----------------------------
// SVD Line: 21162

unsigned int DMAC0_MASK_TFR __AT (0x40023310);



// --------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_0  -----------------------------
// SVD Line: 21171

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023310) DMA channel0 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_1  -----------------------------
// SVD Line: 21178

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40023310) DMA channel1 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_2  -----------------------------
// SVD Line: 21185

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40023310) DMA channel2 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_3  -----------------------------
// SVD Line: 21192

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40023310) DMA channel3 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_WE_0  ----------------------------
// SVD Line: 21199

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40023310) DMA channel0 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_WE_1  ----------------------------
// SVD Line: 21206

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40023310) DMA channel1 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_WE_2  ----------------------------
// SVD Line: 21213

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40023310) DMA channel2 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_TFR_INT_MASK_WE_3  ----------------------------
// SVD Line: 21220

//  <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40023310) DMA channel3 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_TFR ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC0_MASK_TFR  ---------------------------------
// SVD Line: 21162

//  <rtree> SFDITEM_REG__DMAC0_MASK_TFR
//    <name> MASK_TFR </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023310) DMA transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC0_MASK_TFR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_TFR_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC0_MASK_BLOCK  ----------------------------
// SVD Line: 21229

unsigned int DMAC0_MASK_BLOCK __AT (0x40023318);



// -------------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_0  ----------------------------
// SVD Line: 21238

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023318) DMA channel0 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_1  ----------------------------
// SVD Line: 21245

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40023318) DMA channel1 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_2  ----------------------------
// SVD Line: 21252

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40023318) DMA channel2 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_3  ----------------------------
// SVD Line: 21259

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40023318) DMA channel3 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_WE_0  ---------------------------
// SVD Line: 21266

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40023318) DMA channel0 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_WE_1  ---------------------------
// SVD Line: 21273

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40023318) DMA channel1 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_WE_2  ---------------------------
// SVD Line: 21280

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40023318) DMA channel2 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_BLOCK_INT_MASK_WE_3  ---------------------------
// SVD Line: 21287

//  <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40023318) DMA channel3 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_BLOCK ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC0_MASK_BLOCK  --------------------------------
// SVD Line: 21229

//  <rtree> SFDITEM_REG__DMAC0_MASK_BLOCK
//    <name> MASK_BLOCK </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023318) DMA block transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC0_MASK_BLOCK >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_BLOCK_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC0_MASK_SRC_TRAN  ---------------------------
// SVD Line: 21296

unsigned int DMAC0_MASK_SRC_TRAN __AT (0x40023320);



// -----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_0  ---------------------------
// SVD Line: 21305

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023320) source transfer completion channel0 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_1  ---------------------------
// SVD Line: 21312

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40023320) source transfer completion channel1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_2  ---------------------------
// SVD Line: 21319

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40023320) source transfer completion channel2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_3  ---------------------------
// SVD Line: 21326

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40023320) source transfer completion channel3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_WE_0  -------------------------
// SVD Line: 21333

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40023320) DMA channel0 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_WE_1  -------------------------
// SVD Line: 21340

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40023320) DMA channel1 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_WE_2  -------------------------
// SVD Line: 21347

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40023320) DMA channel2 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_SRC_TRAN_INT_MASK_WE_3  -------------------------
// SVD Line: 21354

//  <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40023320) DMA channel3 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_SRC_TRAN ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DMAC0_MASK_SRC_TRAN  ------------------------------
// SVD Line: 21296

//  <rtree> SFDITEM_REG__DMAC0_MASK_SRC_TRAN
//    <name> MASK_SRC_TRAN </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023320) DMA source block transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC0_MASK_SRC_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_SRC_TRAN_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC0_MASK_DST_TRAN  ---------------------------
// SVD Line: 21363

unsigned int DMAC0_MASK_DST_TRAN __AT (0x40023328);



// -----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_0  ---------------------------
// SVD Line: 21372

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023328) destination transfer completion channel0 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_1  ---------------------------
// SVD Line: 21379

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40023328) destination transfer completion channel1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_2  ---------------------------
// SVD Line: 21386

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40023328) destination transfer completion channel2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_3  ---------------------------
// SVD Line: 21393

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40023328) destination transfer completion channel3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_WE_0  -------------------------
// SVD Line: 21400

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40023328) DMA channel0 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_WE_1  -------------------------
// SVD Line: 21407

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40023328) DMA channel1 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_WE_2  -------------------------
// SVD Line: 21414

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40023328) DMA channel2 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_MASK_DST_TRAN_INT_MASK_WE_3  -------------------------
// SVD Line: 21421

//  <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40023328) DMA channel3 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_DST_TRAN ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DMAC0_MASK_DST_TRAN  ------------------------------
// SVD Line: 21363

//  <rtree> SFDITEM_REG__DMAC0_MASK_DST_TRAN
//    <name> MASK_DST_TRAN </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023328) DMA destination block transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC0_MASK_DST_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_DST_TRAN_INT_MASK_WE_3 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DMAC0_MASK_ERR  -----------------------------
// SVD Line: 21430

unsigned int DMAC0_MASK_ERR __AT (0x40023330);



// --------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_0  -----------------------------
// SVD Line: 21439

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023330) destination transmission error channel0 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_1  -----------------------------
// SVD Line: 21446

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40023330) destination transmission error channel1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_2  -----------------------------
// SVD Line: 21453

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40023330) destination transmission error channel2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_3  -----------------------------
// SVD Line: 21460

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40023330) destination transmission error channel3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_WE_0  ----------------------------
// SVD Line: 21467

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40023330) DMA channel0 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_WE_1  ----------------------------
// SVD Line: 21474

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40023330) DMA channel1 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_WE_2  ----------------------------
// SVD Line: 21481

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40023330) DMA channel2 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_MASK_ERR_INT_MASK_WE_3  ----------------------------
// SVD Line: 21488

//  <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40023330) DMA channel3 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_MASK_ERR ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC0_MASK_ERR  ---------------------------------
// SVD Line: 21430

//  <rtree> SFDITEM_REG__DMAC0_MASK_ERR
//    <name> MASK_ERR </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023330) DMA transmission error interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC0_MASK_ERR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_MASK_ERR_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC0_CLEAR_TFR  -----------------------------
// SVD Line: 21497

unsigned int DMAC0_CLEAR_TFR __AT (0x40023338);



// -------------------------  Field Item: DMAC0_CLEAR_TFR_CHAN0_CLEAR  ----------------------------
// SVD Line: 21506

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40023338) clear DMA channel0 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_TFR ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_CLEAR_TFR_CHAN1_CLEAR  ----------------------------
// SVD Line: 21513

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40023338) clear DMA channel1 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_TFR ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_CLEAR_TFR_CHAN2_CLEAR  ----------------------------
// SVD Line: 21520

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40023338) clear DMA channel2 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_TFR ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_CLEAR_TFR_CHAN3_CLEAR  ----------------------------
// SVD Line: 21527

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40023338) clear DMA channel3 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_TFR ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC0_CLEAR_TFR  --------------------------------
// SVD Line: 21497

//  <rtree> SFDITEM_REG__DMAC0_CLEAR_TFR
//    <name> CLEAR_TFR </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40023338) DMA transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC0_CLEAR_TFR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_TFR_CHAN3_CLEAR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAC0_CLEAR_BLOCK  ----------------------------
// SVD Line: 21536

unsigned int DMAC0_CLEAR_BLOCK __AT (0x40023340);



// ------------------------  Field Item: DMAC0_CLEAR_BLOCK_CHAN0_CLEAR  ---------------------------
// SVD Line: 21545

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40023340) clear DMA channel0 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_BLOCK ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_CLEAR_BLOCK_CHAN1_CLEAR  ---------------------------
// SVD Line: 21552

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40023340) clear DMA channel1 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_BLOCK ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_CLEAR_BLOCK_CHAN2_CLEAR  ---------------------------
// SVD Line: 21559

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40023340) clear DMA channel2 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_BLOCK ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC0_CLEAR_BLOCK_CHAN3_CLEAR  ---------------------------
// SVD Line: 21566

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40023340) clear DMA channel3 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_BLOCK ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC0_CLEAR_BLOCK  -------------------------------
// SVD Line: 21536

//  <rtree> SFDITEM_REG__DMAC0_CLEAR_BLOCK
//    <name> CLEAR_BLOCK </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40023340) DMA block transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC0_CLEAR_BLOCK >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_BLOCK_CHAN3_CLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC0_CLEAR_SRC_TRAN  --------------------------
// SVD Line: 21575

unsigned int DMAC0_CLEAR_SRC_TRAN __AT (0x40023348);



// ----------------------  Field Item: DMAC0_CLEAR_SRC_TRAN_CHAN0_CLEAR  --------------------------
// SVD Line: 21584

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40023348) clear DMA channel0 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_SRC_TRAN ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_CLEAR_SRC_TRAN_CHAN1_CLEAR  --------------------------
// SVD Line: 21591

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40023348) clear DMA channel1 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_SRC_TRAN ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_CLEAR_SRC_TRAN_CHAN2_CLEAR  --------------------------
// SVD Line: 21598

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40023348) clear DMA channel2 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_SRC_TRAN ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_CLEAR_SRC_TRAN_CHAN3_CLEAR  --------------------------
// SVD Line: 21605

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40023348) clear DMA channel3 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_SRC_TRAN ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC0_CLEAR_SRC_TRAN  ------------------------------
// SVD Line: 21575

//  <rtree> SFDITEM_REG__DMAC0_CLEAR_SRC_TRAN
//    <name> CLEAR_SRC_TRAN </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40023348) DMA source transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC0_CLEAR_SRC_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_SRC_TRAN_CHAN3_CLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC0_CLEAR_DST_TRAN  --------------------------
// SVD Line: 21614

unsigned int DMAC0_CLEAR_DST_TRAN __AT (0x40023350);



// ----------------------  Field Item: DMAC0_CLEAR_DST_TRAN_CHAN0_CLEAR  --------------------------
// SVD Line: 21623

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40023350) clear DMA channel0 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_DST_TRAN ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_CLEAR_DST_TRAN_CHAN1_CLEAR  --------------------------
// SVD Line: 21630

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40023350) clear DMA channel1 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_DST_TRAN ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_CLEAR_DST_TRAN_CHAN2_CLEAR  --------------------------
// SVD Line: 21637

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40023350) clear DMA channel2 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_DST_TRAN ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC0_CLEAR_DST_TRAN_CHAN3_CLEAR  --------------------------
// SVD Line: 21644

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40023350) clear DMA channel3 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_DST_TRAN ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC0_CLEAR_DST_TRAN  ------------------------------
// SVD Line: 21614

//  <rtree> SFDITEM_REG__DMAC0_CLEAR_DST_TRAN
//    <name> CLEAR_DST_TRAN </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40023350) DMA destination transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC0_CLEAR_DST_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_DST_TRAN_CHAN3_CLEAR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC0_CLEAR_ERR  -----------------------------
// SVD Line: 21653

unsigned int DMAC0_CLEAR_ERR __AT (0x40023358);



// -------------------------  Field Item: DMAC0_CLEAR_ERR_CHAN0_CLEAR  ----------------------------
// SVD Line: 21662

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40023358) clear DMA channel0 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_ERR ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_CLEAR_ERR_CHAN1_CLEAR  ----------------------------
// SVD Line: 21669

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40023358) clear DMA channel1 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_ERR ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_CLEAR_ERR_CHAN2_CLEAR  ----------------------------
// SVD Line: 21676

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40023358) clear DMA channel2 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_ERR ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC0_CLEAR_ERR_CHAN3_CLEAR  ----------------------------
// SVD Line: 21683

//  <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40023358) clear DMA channel3 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CLEAR_ERR ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC0_CLEAR_ERR  --------------------------------
// SVD Line: 21653

//  <rtree> SFDITEM_REG__DMAC0_CLEAR_ERR
//    <name> CLEAR_ERR </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40023358) DMA transfer error status clear register </i>
//    <loc> ( (unsigned int)((DMAC0_CLEAR_ERR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC0_CLEAR_ERR_CHAN3_CLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC0_CFG  --------------------------------
// SVD Line: 21692

unsigned int DMAC0_CFG __AT (0x40023398);



// ------------------------------  Field Item: DMAC0_CFG_DMA_EN  ----------------------------------
// SVD Line: 21701

//  <item> SFDITEM_FIELD__DMAC0_CFG_DMA_EN
//    <name> DMA_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40023398) DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CFG ) </loc>
//      <o.0..0> DMA_EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMAC0_CFG  -----------------------------------
// SVD Line: 21692

//  <rtree> SFDITEM_REG__DMAC0_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40023398) DMA enable control register </i>
//    <loc> ( (unsigned int)((DMAC0_CFG >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CFG_DMA_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DMAC0_CH_EN  -------------------------------
// SVD Line: 21710

unsigned int DMAC0_CH_EN __AT (0x400233A0);



// -----------------------------  Field Item: DMAC0_CH_EN_CH_EN_0  --------------------------------
// SVD Line: 21719

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_0
//    <name> CH_EN_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400233A0) DMA channel0 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.0..0> CH_EN_0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CH_EN_CH_EN_1  --------------------------------
// SVD Line: 21726

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_1
//    <name> CH_EN_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400233A0) DMA channel1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.1..1> CH_EN_1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CH_EN_CH_EN_2  --------------------------------
// SVD Line: 21733

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_2
//    <name> CH_EN_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400233A0) DMA channel2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.2..2> CH_EN_2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC0_CH_EN_CH_EN_3  --------------------------------
// SVD Line: 21740

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_3
//    <name> CH_EN_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400233A0) DMA channel3 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.3..3> CH_EN_3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CH_EN_CH_EN_WE_0  -------------------------------
// SVD Line: 21747

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_0
//    <name> CH_EN_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400233A0) DMA channel0 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.8..8> CH_EN_WE_0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CH_EN_CH_EN_WE_1  -------------------------------
// SVD Line: 21754

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_1
//    <name> CH_EN_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400233A0) DMA channel1 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.9..9> CH_EN_WE_1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CH_EN_CH_EN_WE_2  -------------------------------
// SVD Line: 21761

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_2
//    <name> CH_EN_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x400233A0) DMA channel2 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.10..10> CH_EN_WE_2
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC0_CH_EN_CH_EN_WE_3  -------------------------------
// SVD Line: 21768

//  <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_3
//    <name> CH_EN_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x400233A0) DMA channel3 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC0_CH_EN ) </loc>
//      <o.11..11> CH_EN_WE_3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC0_CH_EN  ----------------------------------
// SVD Line: 21710

//  <rtree> SFDITEM_REG__DMAC0_CH_EN
//    <name> CH_EN </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400233A0) DMA transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC0_CH_EN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_3 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC0_CH_EN_CH_EN_WE_3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: DMAC0  -------------------------------------
// SVD Line: 19641

//  <view> DMAC0
//    <name> DMAC0 </name>
//    <item> SFDITEM_REG__DMAC0_SAR0 </item>
//    <item> SFDITEM_REG__DMAC0_DAR0 </item>
//    <item> SFDITEM_REG__DMAC0_LLP0 </item>
//    <item> SFDITEM_REG__DMAC0_CTL0 </item>
//    <item> SFDITEM_REG__DMAC0_CFG0 </item>
//    <item> SFDITEM_REG__DMAC0_SAR1 </item>
//    <item> SFDITEM_REG__DMAC0_DAR1 </item>
//    <item> SFDITEM_REG__DMAC0_LLP1 </item>
//    <item> SFDITEM_REG__DMAC0_CTL1 </item>
//    <item> SFDITEM_REG__DMAC0_CFG1 </item>
//    <item> SFDITEM_REG__DMAC0_SAR2 </item>
//    <item> SFDITEM_REG__DMAC0_DAR2 </item>
//    <item> SFDITEM_REG__DMAC0_LLP2 </item>
//    <item> SFDITEM_REG__DMAC0_CTL2 </item>
//    <item> SFDITEM_REG__DMAC0_CFG2 </item>
//    <item> SFDITEM_REG__DMAC0_SAR3 </item>
//    <item> SFDITEM_REG__DMAC0_DAR3 </item>
//    <item> SFDITEM_REG__DMAC0_LLP3 </item>
//    <item> SFDITEM_REG__DMAC0_CTL3 </item>
//    <item> SFDITEM_REG__DMAC0_DMA_CFG0 </item>
//    <item> SFDITEM_REG__DMAC0_STATUS_TFR </item>
//    <item> SFDITEM_REG__DMAC0_STATUS_BLOCK </item>
//    <item> SFDITEM_REG__DMAC0_STATUS_SRC_TRAN </item>
//    <item> SFDITEM_REG__DMAC0_STATUS_DST_TRAN </item>
//    <item> SFDITEM_REG__DMAC0_STATUS_ERR </item>
//    <item> SFDITEM_REG__DMAC0_MASK_TFR </item>
//    <item> SFDITEM_REG__DMAC0_MASK_BLOCK </item>
//    <item> SFDITEM_REG__DMAC0_MASK_SRC_TRAN </item>
//    <item> SFDITEM_REG__DMAC0_MASK_DST_TRAN </item>
//    <item> SFDITEM_REG__DMAC0_MASK_ERR </item>
//    <item> SFDITEM_REG__DMAC0_CLEAR_TFR </item>
//    <item> SFDITEM_REG__DMAC0_CLEAR_BLOCK </item>
//    <item> SFDITEM_REG__DMAC0_CLEAR_SRC_TRAN </item>
//    <item> SFDITEM_REG__DMAC0_CLEAR_DST_TRAN </item>
//    <item> SFDITEM_REG__DMAC0_CLEAR_ERR </item>
//    <item> SFDITEM_REG__DMAC0_CFG </item>
//    <item> SFDITEM_REG__DMAC0_CH_EN </item>
//  </view>
//  


// ----------------------------  Register Item Address: DMAC1_SAR0  -------------------------------
// SVD Line: 21793

unsigned int DMAC1_SAR0 __AT (0x40024000);



// -------------------------------  Field Item: DMAC1_SAR0_SAR  -----------------------------------
// SVD Line: 21802

//  <item> SFDITEM_FIELD__DMAC1_SAR0_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024000) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_SAR0 >> 0) & 0xFFFFFFFF), ((DMAC1_SAR0 = (DMAC1_SAR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_SAR0  -----------------------------------
// SVD Line: 21793

//  <rtree> SFDITEM_REG__DMAC1_SAR0
//    <name> SAR0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024000) source address register </i>
//    <loc> ( (unsigned int)((DMAC1_SAR0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_SAR0_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_DAR0  -------------------------------
// SVD Line: 21811

unsigned int DMAC1_DAR0 __AT (0x40024008);



// -------------------------------  Field Item: DMAC1_DAR0_DAR  -----------------------------------
// SVD Line: 21820

//  <item> SFDITEM_FIELD__DMAC1_DAR0_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024008) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_DAR0 >> 0) & 0xFFFFFFFF), ((DMAC1_DAR0 = (DMAC1_DAR0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_DAR0  -----------------------------------
// SVD Line: 21811

//  <rtree> SFDITEM_REG__DMAC1_DAR0
//    <name> DAR0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024008) destination address register </i>
//    <loc> ( (unsigned int)((DMAC1_DAR0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_DAR0_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_LLP0  -------------------------------
// SVD Line: 21829

unsigned int DMAC1_LLP0 __AT (0x40024010);



// -------------------------------  Field Item: DMAC1_LLP0_LOC  -----------------------------------
// SVD Line: 21838

//  <item> SFDITEM_FIELD__DMAC1_LLP0_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024010) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_LLP0 >> 0) & 0xFFFFFFFF), ((DMAC1_LLP0 = (DMAC1_LLP0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_LLP0  -----------------------------------
// SVD Line: 21829

//  <rtree> SFDITEM_REG__DMAC1_LLP0
//    <name> LLP0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024010) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC1_LLP0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_LLP0_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CTL0  -------------------------------
// SVD Line: 21847

unsigned int DMAC1_CTL0 __AT (0x40024018);



// ------------------------------  Field Item: DMAC1_CTL0_INT_EN  ---------------------------------
// SVD Line: 21856

//  <item> SFDITEM_FIELD__DMAC1_CTL0_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024018) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL0 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL0_DST_TR_WIDTH  ------------------------------
// SVD Line: 21863

//  <item> SFDITEM_FIELD__DMAC1_CTL0_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40024018) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 1) & 0x7), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL0_SRC_TR_WIDTH  ------------------------------
// SVD Line: 21870

//  <item> SFDITEM_FIELD__DMAC1_CTL0_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40024018) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 4) & 0x7), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL0_DINC  ----------------------------------
// SVD Line: 21877

//  <item> SFDITEM_FIELD__DMAC1_CTL0_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40024018) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 7) & 0x3), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL0_SINC  ----------------------------------
// SVD Line: 21884

//  <item> SFDITEM_FIELD__DMAC1_CTL0_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40024018) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 9) & 0x3), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL0_DEST_MSIZE  -------------------------------
// SVD Line: 21891

//  <item> SFDITEM_FIELD__DMAC1_CTL0_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40024018) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 11) & 0x7), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL0_SRC_MSIZE  --------------------------------
// SVD Line: 21898

//  <item> SFDITEM_FIELD__DMAC1_CTL0_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40024018) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 14) & 0x7), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL0_SRC_GATHER_EN  ------------------------------
// SVD Line: 21905

//  <item> SFDITEM_FIELD__DMAC1_CTL0_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40024018) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL0 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL0_DST_SCATTER_EN  -----------------------------
// SVD Line: 21912

//  <item> SFDITEM_FIELD__DMAC1_CTL0_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40024018) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL0 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CTL0_TT_FC  ----------------------------------
// SVD Line: 21919

//  <item> SFDITEM_FIELD__DMAC1_CTL0_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40024018) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 20) & 0x7), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL0_SMS0  ----------------------------------
// SVD Line: 21926

//  <item> SFDITEM_FIELD__DMAC1_CTL0_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40024018) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 23) & 0x3), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL0_SMS1  ----------------------------------
// SVD Line: 21933

//  <item> SFDITEM_FIELD__DMAC1_CTL0_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40024018) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL0 >> 25) & 0x3), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL0_LLP_DST_EN  -------------------------------
// SVD Line: 21940

//  <item> SFDITEM_FIELD__DMAC1_CTL0_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40024018) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL0 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL0_LLP_SRC_EN  -------------------------------
// SVD Line: 21947

//  <item> SFDITEM_FIELD__DMAC1_CTL0_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40024018) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL0 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CTL0_BLOCK_TS  --------------------------------
// SVD Line: 21954

//  <item> SFDITEM_FIELD__DMAC1_CTL0_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x40024018) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC1_CTL0 >> 32) & 0xFFF), ((DMAC1_CTL0 = (DMAC1_CTL0 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL0_DONE  ----------------------------------
// SVD Line: 21961

//  <item> SFDITEM_FIELD__DMAC1_CTL0_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x40024018) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL0 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CTL0  -----------------------------------
// SVD Line: 21847

//  <rtree> SFDITEM_REG__DMAC1_CTL0
//    <name> CTL0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024018) channel control register </i>
//    <loc> ( (unsigned int)((DMAC1_CTL0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_DINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_SINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL0_DONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CFG0  -------------------------------
// SVD Line: 21970

unsigned int DMAC1_CFG0 __AT (0x40024040);



// -----------------------------  Field Item: DMAC1_CFG0_CH_PRIOR  --------------------------------
// SVD Line: 21979

//  <item> SFDITEM_FIELD__DMAC1_CFG0_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40024040) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG0 >> 5) & 0x7), ((DMAC1_CFG0 = (DMAC1_CFG0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG0_CH_SUSP  ---------------------------------
// SVD Line: 21986

//  <item> SFDITEM_FIELD__DMAC1_CFG0_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40024040) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_FIFO_EMPTY  -------------------------------
// SVD Line: 21993

//  <item> SFDITEM_FIELD__DMAC1_CFG0_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40024040) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_HS_SEL_DST  -------------------------------
// SVD Line: 22000

//  <item> SFDITEM_FIELD__DMAC1_CFG0_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40024040) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_HS_SEL_SRC  -------------------------------
// SVD Line: 22007

//  <item> SFDITEM_FIELD__DMAC1_CFG0_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40024040) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_LOCK_CH_L  --------------------------------
// SVD Line: 22014

//  <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40024040) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG0 >> 12) & 0x3), ((DMAC1_CFG0 = (DMAC1_CFG0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG0_LOCK_B_L  --------------------------------
// SVD Line: 22021

//  <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40024040) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG0 >> 14) & 0x3), ((DMAC1_CFG0 = (DMAC1_CFG0 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG0_LOCK_CH  ---------------------------------
// SVD Line: 22028

//  <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40024040) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CFG0_LOCK_B  ---------------------------------
// SVD Line: 22035

//  <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40024040) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_DST_HS_POL  -------------------------------
// SVD Line: 22042

//  <item> SFDITEM_FIELD__DMAC1_CFG0_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40024040) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_SRC_HS_POL  -------------------------------
// SVD Line: 22049

//  <item> SFDITEM_FIELD__DMAC1_CFG0_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40024040) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_RELOAD_SRC  -------------------------------
// SVD Line: 22056

//  <item> SFDITEM_FIELD__DMAC1_CFG0_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40024040) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_RELOAD_DST  -------------------------------
// SVD Line: 22063

//  <item> SFDITEM_FIELD__DMAC1_CFG0_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40024040) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CFG0_FCMODE  ---------------------------------
// SVD Line: 22070

//  <item> SFDITEM_FIELD__DMAC1_CFG0_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x40024040) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_FIFO_MODE  --------------------------------
// SVD Line: 22077

//  <item> SFDITEM_FIELD__DMAC1_CFG0_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x40024040) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG0_PROTCTL  ---------------------------------
// SVD Line: 22084

//  <item> SFDITEM_FIELD__DMAC1_CFG0_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x40024040) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG0 >> 34) & 0x7), ((DMAC1_CFG0 = (DMAC1_CFG0 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_DS_UPD_EN  --------------------------------
// SVD Line: 22091

//  <item> SFDITEM_FIELD__DMAC1_CFG0_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x40024040) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG0_SS_UPD_EN  --------------------------------
// SVD Line: 22098

//  <item> SFDITEM_FIELD__DMAC1_CFG0_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x40024040) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG0 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG0_SRC_PER  ---------------------------------
// SVD Line: 22105

//  <item> SFDITEM_FIELD__DMAC1_CFG0_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x40024040) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG0 >> 39) & 0xF), ((DMAC1_CFG0 = (DMAC1_CFG0 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG0_DEST_PER  --------------------------------
// SVD Line: 22112

//  <item> SFDITEM_FIELD__DMAC1_CFG0_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x40024040) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG0 >> 43) & 0xF), ((DMAC1_CFG0 = (DMAC1_CFG0 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CFG0  -----------------------------------
// SVD Line: 21970

//  <rtree> SFDITEM_REG__DMAC1_CFG0
//    <name> CFG0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024040) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC1_CFG0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG0_DEST_PER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_SAR1  -------------------------------
// SVD Line: 22121

unsigned int DMAC1_SAR1 __AT (0x40024058);



// -------------------------------  Field Item: DMAC1_SAR1_SAR  -----------------------------------
// SVD Line: 22130

//  <item> SFDITEM_FIELD__DMAC1_SAR1_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024058) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_SAR1 >> 0) & 0xFFFFFFFF), ((DMAC1_SAR1 = (DMAC1_SAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_SAR1  -----------------------------------
// SVD Line: 22121

//  <rtree> SFDITEM_REG__DMAC1_SAR1
//    <name> SAR1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024058) source address register </i>
//    <loc> ( (unsigned int)((DMAC1_SAR1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_SAR1_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_DAR1  -------------------------------
// SVD Line: 22139

unsigned int DMAC1_DAR1 __AT (0x40024060);



// -------------------------------  Field Item: DMAC1_DAR1_DAR  -----------------------------------
// SVD Line: 22148

//  <item> SFDITEM_FIELD__DMAC1_DAR1_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024060) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_DAR1 >> 0) & 0xFFFFFFFF), ((DMAC1_DAR1 = (DMAC1_DAR1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_DAR1  -----------------------------------
// SVD Line: 22139

//  <rtree> SFDITEM_REG__DMAC1_DAR1
//    <name> DAR1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024060) destination address register </i>
//    <loc> ( (unsigned int)((DMAC1_DAR1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_DAR1_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_LLP1  -------------------------------
// SVD Line: 22157

unsigned int DMAC1_LLP1 __AT (0x40024068);



// -------------------------------  Field Item: DMAC1_LLP1_LOC  -----------------------------------
// SVD Line: 22166

//  <item> SFDITEM_FIELD__DMAC1_LLP1_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024068) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_LLP1 >> 0) & 0xFFFFFFFF), ((DMAC1_LLP1 = (DMAC1_LLP1 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_LLP1  -----------------------------------
// SVD Line: 22157

//  <rtree> SFDITEM_REG__DMAC1_LLP1
//    <name> LLP1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024068) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC1_LLP1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_LLP1_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CTL1  -------------------------------
// SVD Line: 22175

unsigned int DMAC1_CTL1 __AT (0x40024070);



// ------------------------------  Field Item: DMAC1_CTL1_INT_EN  ---------------------------------
// SVD Line: 22184

//  <item> SFDITEM_FIELD__DMAC1_CTL1_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024070) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL1 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL1_DST_TR_WIDTH  ------------------------------
// SVD Line: 22191

//  <item> SFDITEM_FIELD__DMAC1_CTL1_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40024070) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 1) & 0x7), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL1_SRC_TR_WIDTH  ------------------------------
// SVD Line: 22198

//  <item> SFDITEM_FIELD__DMAC1_CTL1_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40024070) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 4) & 0x7), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL1_DINC  ----------------------------------
// SVD Line: 22205

//  <item> SFDITEM_FIELD__DMAC1_CTL1_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40024070) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 7) & 0x3), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL1_SINC  ----------------------------------
// SVD Line: 22212

//  <item> SFDITEM_FIELD__DMAC1_CTL1_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40024070) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 9) & 0x3), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL1_DEST_MSIZE  -------------------------------
// SVD Line: 22219

//  <item> SFDITEM_FIELD__DMAC1_CTL1_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40024070) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 11) & 0x7), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL1_SRC_MSIZE  --------------------------------
// SVD Line: 22226

//  <item> SFDITEM_FIELD__DMAC1_CTL1_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40024070) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 14) & 0x7), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL1_SRC_GATHER_EN  ------------------------------
// SVD Line: 22233

//  <item> SFDITEM_FIELD__DMAC1_CTL1_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40024070) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL1 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL1_DST_SCATTER_EN  -----------------------------
// SVD Line: 22240

//  <item> SFDITEM_FIELD__DMAC1_CTL1_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40024070) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL1 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CTL1_TT_FC  ----------------------------------
// SVD Line: 22247

//  <item> SFDITEM_FIELD__DMAC1_CTL1_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40024070) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 20) & 0x7), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL1_SMS0  ----------------------------------
// SVD Line: 22254

//  <item> SFDITEM_FIELD__DMAC1_CTL1_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40024070) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 23) & 0x3), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL1_SMS1  ----------------------------------
// SVD Line: 22261

//  <item> SFDITEM_FIELD__DMAC1_CTL1_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40024070) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL1 >> 25) & 0x3), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL1_LLP_DST_EN  -------------------------------
// SVD Line: 22268

//  <item> SFDITEM_FIELD__DMAC1_CTL1_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40024070) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL1 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL1_LLP_SRC_EN  -------------------------------
// SVD Line: 22275

//  <item> SFDITEM_FIELD__DMAC1_CTL1_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40024070) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL1 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CTL1_BLOCK_TS  --------------------------------
// SVD Line: 22282

//  <item> SFDITEM_FIELD__DMAC1_CTL1_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x40024070) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC1_CTL1 >> 32) & 0xFFF), ((DMAC1_CTL1 = (DMAC1_CTL1 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL1_DONE  ----------------------------------
// SVD Line: 22289

//  <item> SFDITEM_FIELD__DMAC1_CTL1_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x40024070) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL1 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CTL1  -----------------------------------
// SVD Line: 22175

//  <rtree> SFDITEM_REG__DMAC1_CTL1
//    <name> CTL1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024070) channel control register </i>
//    <loc> ( (unsigned int)((DMAC1_CTL1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_DINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_SINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL1_DONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CFG1  -------------------------------
// SVD Line: 22298

unsigned int DMAC1_CFG1 __AT (0x40024098);



// -----------------------------  Field Item: DMAC1_CFG1_CH_PRIOR  --------------------------------
// SVD Line: 22307

//  <item> SFDITEM_FIELD__DMAC1_CFG1_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40024098) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG1 >> 5) & 0x7), ((DMAC1_CFG1 = (DMAC1_CFG1 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG1_CH_SUSP  ---------------------------------
// SVD Line: 22314

//  <item> SFDITEM_FIELD__DMAC1_CFG1_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40024098) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_FIFO_EMPTY  -------------------------------
// SVD Line: 22321

//  <item> SFDITEM_FIELD__DMAC1_CFG1_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40024098) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_HS_SEL_DST  -------------------------------
// SVD Line: 22328

//  <item> SFDITEM_FIELD__DMAC1_CFG1_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40024098) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_HS_SEL_SRC  -------------------------------
// SVD Line: 22335

//  <item> SFDITEM_FIELD__DMAC1_CFG1_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40024098) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_LOCK_CH_L  --------------------------------
// SVD Line: 22342

//  <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40024098) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG1 >> 12) & 0x3), ((DMAC1_CFG1 = (DMAC1_CFG1 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG1_LOCK_B_L  --------------------------------
// SVD Line: 22349

//  <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40024098) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG1 >> 14) & 0x3), ((DMAC1_CFG1 = (DMAC1_CFG1 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG1_LOCK_CH  ---------------------------------
// SVD Line: 22356

//  <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40024098) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CFG1_LOCK_B  ---------------------------------
// SVD Line: 22363

//  <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40024098) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_DST_HS_POL  -------------------------------
// SVD Line: 22370

//  <item> SFDITEM_FIELD__DMAC1_CFG1_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40024098) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_SRC_HS_POL  -------------------------------
// SVD Line: 22377

//  <item> SFDITEM_FIELD__DMAC1_CFG1_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40024098) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_RELOAD_SRC  -------------------------------
// SVD Line: 22384

//  <item> SFDITEM_FIELD__DMAC1_CFG1_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40024098) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_RELOAD_DST  -------------------------------
// SVD Line: 22391

//  <item> SFDITEM_FIELD__DMAC1_CFG1_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40024098) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CFG1_FCMODE  ---------------------------------
// SVD Line: 22398

//  <item> SFDITEM_FIELD__DMAC1_CFG1_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x40024098) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_FIFO_MODE  --------------------------------
// SVD Line: 22405

//  <item> SFDITEM_FIELD__DMAC1_CFG1_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x40024098) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG1_PROTCTL  ---------------------------------
// SVD Line: 22412

//  <item> SFDITEM_FIELD__DMAC1_CFG1_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x40024098) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG1 >> 34) & 0x7), ((DMAC1_CFG1 = (DMAC1_CFG1 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_DS_UPD_EN  --------------------------------
// SVD Line: 22419

//  <item> SFDITEM_FIELD__DMAC1_CFG1_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x40024098) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG1_SS_UPD_EN  --------------------------------
// SVD Line: 22426

//  <item> SFDITEM_FIELD__DMAC1_CFG1_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x40024098) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG1 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG1_SRC_PER  ---------------------------------
// SVD Line: 22433

//  <item> SFDITEM_FIELD__DMAC1_CFG1_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x40024098) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG1 >> 39) & 0xF), ((DMAC1_CFG1 = (DMAC1_CFG1 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG1_DEST_PER  --------------------------------
// SVD Line: 22440

//  <item> SFDITEM_FIELD__DMAC1_CFG1_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x40024098) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG1 >> 43) & 0xF), ((DMAC1_CFG1 = (DMAC1_CFG1 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CFG1  -----------------------------------
// SVD Line: 22298

//  <rtree> SFDITEM_REG__DMAC1_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024098) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC1_CFG1 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG1_DEST_PER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_SAR2  -------------------------------
// SVD Line: 22449

unsigned int DMAC1_SAR2 __AT (0x400240B0);



// -------------------------------  Field Item: DMAC1_SAR2_SAR  -----------------------------------
// SVD Line: 22458

//  <item> SFDITEM_FIELD__DMAC1_SAR2_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400240B0) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_SAR2 >> 0) & 0xFFFFFFFF), ((DMAC1_SAR2 = (DMAC1_SAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_SAR2  -----------------------------------
// SVD Line: 22449

//  <rtree> SFDITEM_REG__DMAC1_SAR2
//    <name> SAR2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400240B0) source address register </i>
//    <loc> ( (unsigned int)((DMAC1_SAR2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_SAR2_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_DAR2  -------------------------------
// SVD Line: 22467

unsigned int DMAC1_DAR2 __AT (0x400240B8);



// -------------------------------  Field Item: DMAC1_DAR2_DAR  -----------------------------------
// SVD Line: 22476

//  <item> SFDITEM_FIELD__DMAC1_DAR2_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400240B8) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_DAR2 >> 0) & 0xFFFFFFFF), ((DMAC1_DAR2 = (DMAC1_DAR2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_DAR2  -----------------------------------
// SVD Line: 22467

//  <rtree> SFDITEM_REG__DMAC1_DAR2
//    <name> DAR2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400240B8) destination address register </i>
//    <loc> ( (unsigned int)((DMAC1_DAR2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_DAR2_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_LLP2  -------------------------------
// SVD Line: 22485

unsigned int DMAC1_LLP2 __AT (0x400240C0);



// -------------------------------  Field Item: DMAC1_LLP2_LOC  -----------------------------------
// SVD Line: 22494

//  <item> SFDITEM_FIELD__DMAC1_LLP2_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400240C0) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_LLP2 >> 0) & 0xFFFFFFFF), ((DMAC1_LLP2 = (DMAC1_LLP2 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_LLP2  -----------------------------------
// SVD Line: 22485

//  <rtree> SFDITEM_REG__DMAC1_LLP2
//    <name> LLP2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400240C0) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC1_LLP2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_LLP2_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CTL2  -------------------------------
// SVD Line: 22503

unsigned int DMAC1_CTL2 __AT (0x400240C8);



// ------------------------------  Field Item: DMAC1_CTL2_INT_EN  ---------------------------------
// SVD Line: 22512

//  <item> SFDITEM_FIELD__DMAC1_CTL2_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400240C8) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL2 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL2_DST_TR_WIDTH  ------------------------------
// SVD Line: 22519

//  <item> SFDITEM_FIELD__DMAC1_CTL2_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x400240C8) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 1) & 0x7), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL2_SRC_TR_WIDTH  ------------------------------
// SVD Line: 22526

//  <item> SFDITEM_FIELD__DMAC1_CTL2_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x400240C8) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 4) & 0x7), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL2_DINC  ----------------------------------
// SVD Line: 22533

//  <item> SFDITEM_FIELD__DMAC1_CTL2_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x400240C8) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 7) & 0x3), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL2_SINC  ----------------------------------
// SVD Line: 22540

//  <item> SFDITEM_FIELD__DMAC1_CTL2_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x400240C8) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 9) & 0x3), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL2_DEST_MSIZE  -------------------------------
// SVD Line: 22547

//  <item> SFDITEM_FIELD__DMAC1_CTL2_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x400240C8) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 11) & 0x7), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL2_SRC_MSIZE  --------------------------------
// SVD Line: 22554

//  <item> SFDITEM_FIELD__DMAC1_CTL2_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x400240C8) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 14) & 0x7), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL2_SRC_GATHER_EN  ------------------------------
// SVD Line: 22561

//  <item> SFDITEM_FIELD__DMAC1_CTL2_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400240C8) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL2 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL2_DST_SCATTER_EN  -----------------------------
// SVD Line: 22568

//  <item> SFDITEM_FIELD__DMAC1_CTL2_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400240C8) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL2 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CTL2_TT_FC  ----------------------------------
// SVD Line: 22575

//  <item> SFDITEM_FIELD__DMAC1_CTL2_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x400240C8) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 20) & 0x7), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL2_SMS0  ----------------------------------
// SVD Line: 22582

//  <item> SFDITEM_FIELD__DMAC1_CTL2_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x400240C8) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 23) & 0x3), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL2_SMS1  ----------------------------------
// SVD Line: 22589

//  <item> SFDITEM_FIELD__DMAC1_CTL2_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400240C8) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL2 >> 25) & 0x3), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL2_LLP_DST_EN  -------------------------------
// SVD Line: 22596

//  <item> SFDITEM_FIELD__DMAC1_CTL2_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400240C8) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL2 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL2_LLP_SRC_EN  -------------------------------
// SVD Line: 22603

//  <item> SFDITEM_FIELD__DMAC1_CTL2_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400240C8) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL2 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CTL2_BLOCK_TS  --------------------------------
// SVD Line: 22610

//  <item> SFDITEM_FIELD__DMAC1_CTL2_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x400240C8) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC1_CTL2 >> 32) & 0xFFF), ((DMAC1_CTL2 = (DMAC1_CTL2 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL2_DONE  ----------------------------------
// SVD Line: 22617

//  <item> SFDITEM_FIELD__DMAC1_CTL2_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x400240C8) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL2 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CTL2  -----------------------------------
// SVD Line: 22503

//  <rtree> SFDITEM_REG__DMAC1_CTL2
//    <name> CTL2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400240C8) channel control register </i>
//    <loc> ( (unsigned int)((DMAC1_CTL2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_DINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_SINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL2_DONE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CFG2  -------------------------------
// SVD Line: 22626

unsigned int DMAC1_CFG2 __AT (0x400240F0);



// -----------------------------  Field Item: DMAC1_CFG2_CH_PRIOR  --------------------------------
// SVD Line: 22635

//  <item> SFDITEM_FIELD__DMAC1_CFG2_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x400240F0) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG2 >> 5) & 0x7), ((DMAC1_CFG2 = (DMAC1_CFG2 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG2_CH_SUSP  ---------------------------------
// SVD Line: 22642

//  <item> SFDITEM_FIELD__DMAC1_CFG2_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400240F0) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_FIFO_EMPTY  -------------------------------
// SVD Line: 22649

//  <item> SFDITEM_FIELD__DMAC1_CFG2_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400240F0) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_HS_SEL_DST  -------------------------------
// SVD Line: 22656

//  <item> SFDITEM_FIELD__DMAC1_CFG2_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400240F0) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_HS_SEL_SRC  -------------------------------
// SVD Line: 22663

//  <item> SFDITEM_FIELD__DMAC1_CFG2_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400240F0) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_LOCK_CH_L  --------------------------------
// SVD Line: 22670

//  <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x400240F0) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG2 >> 12) & 0x3), ((DMAC1_CFG2 = (DMAC1_CFG2 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG2_LOCK_B_L  --------------------------------
// SVD Line: 22677

//  <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x400240F0) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG2 >> 14) & 0x3), ((DMAC1_CFG2 = (DMAC1_CFG2 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG2_LOCK_CH  ---------------------------------
// SVD Line: 22684

//  <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400240F0) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CFG2_LOCK_B  ---------------------------------
// SVD Line: 22691

//  <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400240F0) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_DST_HS_POL  -------------------------------
// SVD Line: 22698

//  <item> SFDITEM_FIELD__DMAC1_CFG2_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400240F0) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_SRC_HS_POL  -------------------------------
// SVD Line: 22705

//  <item> SFDITEM_FIELD__DMAC1_CFG2_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400240F0) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_RELOAD_SRC  -------------------------------
// SVD Line: 22712

//  <item> SFDITEM_FIELD__DMAC1_CFG2_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400240F0) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_RELOAD_DST  -------------------------------
// SVD Line: 22719

//  <item> SFDITEM_FIELD__DMAC1_CFG2_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400240F0) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CFG2_FCMODE  ---------------------------------
// SVD Line: 22726

//  <item> SFDITEM_FIELD__DMAC1_CFG2_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x400240F0) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_FIFO_MODE  --------------------------------
// SVD Line: 22733

//  <item> SFDITEM_FIELD__DMAC1_CFG2_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x400240F0) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG2_PROTCTL  ---------------------------------
// SVD Line: 22740

//  <item> SFDITEM_FIELD__DMAC1_CFG2_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x400240F0) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG2 >> 34) & 0x7), ((DMAC1_CFG2 = (DMAC1_CFG2 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_DS_UPD_EN  --------------------------------
// SVD Line: 22747

//  <item> SFDITEM_FIELD__DMAC1_CFG2_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x400240F0) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CFG2_SS_UPD_EN  --------------------------------
// SVD Line: 22754

//  <item> SFDITEM_FIELD__DMAC1_CFG2_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x400240F0) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG2 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG2_SRC_PER  ---------------------------------
// SVD Line: 22761

//  <item> SFDITEM_FIELD__DMAC1_CFG2_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x400240F0) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG2 >> 39) & 0xF), ((DMAC1_CFG2 = (DMAC1_CFG2 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CFG2_DEST_PER  --------------------------------
// SVD Line: 22768

//  <item> SFDITEM_FIELD__DMAC1_CFG2_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x400240F0) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CFG2 >> 43) & 0xF), ((DMAC1_CFG2 = (DMAC1_CFG2 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CFG2  -----------------------------------
// SVD Line: 22626

//  <rtree> SFDITEM_REG__DMAC1_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400240F0) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC1_CFG2 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC1_CFG2_DEST_PER </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_SAR3  -------------------------------
// SVD Line: 22777

unsigned int DMAC1_SAR3 __AT (0x40024108);



// -------------------------------  Field Item: DMAC1_SAR3_SAR  -----------------------------------
// SVD Line: 22786

//  <item> SFDITEM_FIELD__DMAC1_SAR3_SAR
//    <name> SAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024108) source address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_SAR3 >> 0) & 0xFFFFFFFF), ((DMAC1_SAR3 = (DMAC1_SAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_SAR3  -----------------------------------
// SVD Line: 22777

//  <rtree> SFDITEM_REG__DMAC1_SAR3
//    <name> SAR3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024108) source address register </i>
//    <loc> ( (unsigned int)((DMAC1_SAR3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_SAR3_SAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_DAR3  -------------------------------
// SVD Line: 22795

unsigned int DMAC1_DAR3 __AT (0x40024110);



// -------------------------------  Field Item: DMAC1_DAR3_DAR  -----------------------------------
// SVD Line: 22804

//  <item> SFDITEM_FIELD__DMAC1_DAR3_DAR
//    <name> DAR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024110) destination address </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_DAR3 >> 0) & 0xFFFFFFFF), ((DMAC1_DAR3 = (DMAC1_DAR3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_DAR3  -----------------------------------
// SVD Line: 22795

//  <rtree> SFDITEM_REG__DMAC1_DAR3
//    <name> DAR3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024110) destination address register </i>
//    <loc> ( (unsigned int)((DMAC1_DAR3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_DAR3_DAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_LLP3  -------------------------------
// SVD Line: 22813

unsigned int DMAC1_LLP3 __AT (0x40024118);



// -------------------------------  Field Item: DMAC1_LLP3_LOC  -----------------------------------
// SVD Line: 22822

//  <item> SFDITEM_FIELD__DMAC1_LLP3_LOC
//    <name> LOC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40024118) first address of the LLI linked list </i>
//    <edit> 
//      <loc> ( (unsigned int)((DMAC1_LLP3 >> 0) & 0xFFFFFFFF), ((DMAC1_LLP3 = (DMAC1_LLP3 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_LLP3  -----------------------------------
// SVD Line: 22813

//  <rtree> SFDITEM_REG__DMAC1_LLP3
//    <name> LLP3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024118) linked list pointer register </i>
//    <loc> ( (unsigned int)((DMAC1_LLP3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_LLP3_LOC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CTL3  -------------------------------
// SVD Line: 22831

unsigned int DMAC1_CTL3 __AT (0x40024120);



// ------------------------------  Field Item: DMAC1_CTL3_INT_EN  ---------------------------------
// SVD Line: 22840

//  <item> SFDITEM_FIELD__DMAC1_CTL3_INT_EN
//    <name> INT_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024120) DMA interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL3 ) </loc>
//      <o.0..0> INT_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL3_DST_TR_WIDTH  ------------------------------
// SVD Line: 22847

//  <item> SFDITEM_FIELD__DMAC1_CTL3_DST_TR_WIDTH
//    <name> DST_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 3..1] RW (@ 0x40024120) DMA destination data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 1) & 0x7), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x7UL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CTL3_SRC_TR_WIDTH  ------------------------------
// SVD Line: 22854

//  <item> SFDITEM_FIELD__DMAC1_CTL3_SRC_TR_WIDTH
//    <name> SRC_TR_WIDTH </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40024120) DMA source data width </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 4) & 0x7), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL3_DINC  ----------------------------------
// SVD Line: 22861

//  <item> SFDITEM_FIELD__DMAC1_CTL3_DINC
//    <name> DINC </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40024120) DMA destination address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 7) & 0x3), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL3_SINC  ----------------------------------
// SVD Line: 22868

//  <item> SFDITEM_FIELD__DMAC1_CTL3_SINC
//    <name> SINC </name>
//    <rw> 
//    <i> [Bits 10..9] RW (@ 0x40024120) DMA source address control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 9) & 0x3), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x3UL << 9 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 9 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL3_DEST_MSIZE  -------------------------------
// SVD Line: 22875

//  <item> SFDITEM_FIELD__DMAC1_CTL3_DEST_MSIZE
//    <name> DEST_MSIZE </name>
//    <rw> 
//    <i> [Bits 13..11] RW (@ 0x40024120) destination burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 11) & 0x7), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x7UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL3_SRC_MSIZE  --------------------------------
// SVD Line: 22882

//  <item> SFDITEM_FIELD__DMAC1_CTL3_SRC_MSIZE
//    <name> SRC_MSIZE </name>
//    <rw> 
//    <i> [Bits 16..14] RW (@ 0x40024120) source burst length </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 14) & 0x7), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x7UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL3_SRC_GATHER_EN  ------------------------------
// SVD Line: 22889

//  <item> SFDITEM_FIELD__DMAC1_CTL3_SRC_GATHER_EN
//    <name> SRC_GATHER_EN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40024120) DMA source enable gather </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL3 ) </loc>
//      <o.17..17> SRC_GATHER_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_CTL3_DST_SCATTER_EN  -----------------------------
// SVD Line: 22896

//  <item> SFDITEM_FIELD__DMAC1_CTL3_DST_SCATTER_EN
//    <name> DST_SCATTER_EN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40024120) destination enable scatter </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL3 ) </loc>
//      <o.18..18> DST_SCATTER_EN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: DMAC1_CTL3_TT_FC  ----------------------------------
// SVD Line: 22903

//  <item> SFDITEM_FIELD__DMAC1_CTL3_TT_FC
//    <name> TT_FC </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40024120) DMA data movement method </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 20) & 0x7), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x7UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL3_SMS0  ----------------------------------
// SVD Line: 22910

//  <item> SFDITEM_FIELD__DMAC1_CTL3_SMS0
//    <name> SMS0 </name>
//    <rw> 
//    <i> [Bits 24..23] RW (@ 0x40024120) AHB master selection for DMA purposes </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 23) & 0x3), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x3UL << 23 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 23 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL3_SMS1  ----------------------------------
// SVD Line: 22917

//  <item> SFDITEM_FIELD__DMAC1_CTL3_SMS1
//    <name> SMS1 </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40024120) AHB master selection for DMA source </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_CTL3 >> 25) & 0x3), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL3_LLP_DST_EN  -------------------------------
// SVD Line: 22924

//  <item> SFDITEM_FIELD__DMAC1_CTL3_LLP_DST_EN
//    <name> LLP_DST_EN </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40024120) DMA destination enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL3 ) </loc>
//      <o.27..27> LLP_DST_EN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_CTL3_LLP_SRC_EN  -------------------------------
// SVD Line: 22931

//  <item> SFDITEM_FIELD__DMAC1_CTL3_LLP_SRC_EN
//    <name> LLP_SRC_EN </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40024120) DMA source enable LLI linked list </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL3 ) </loc>
//      <o.28..28> LLP_SRC_EN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CTL3_BLOCK_TS  --------------------------------
// SVD Line: 22938

//  <item> SFDITEM_FIELD__DMAC1_CTL3_BLOCK_TS
//    <name> BLOCK_TS </name>
//    <rw> 
//    <i> [Bits 43..32] RW (@ 0x40024120) length of block </i>
//    <edit> 
//      <loc> ( (unsigned short)((DMAC1_CTL3 >> 32) & 0xFFF), ((DMAC1_CTL3 = (DMAC1_CTL3 & ~(0xFFFUL << 32 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 32 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: DMAC1_CTL3_DONE  ----------------------------------
// SVD Line: 22945

//  <item> SFDITEM_FIELD__DMAC1_CTL3_DONE
//    <name> DONE </name>
//    <rw> 
//    <i> [Bit 44] RW (@ 0x40024120) block in the LLI linked list has been transferred </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CTL3 ) </loc>
//      <o.44..44> DONE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CTL3  -----------------------------------
// SVD Line: 22831

//  <rtree> SFDITEM_REG__DMAC1_CTL3
//    <name> CTL3 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024120) channel control register </i>
//    <loc> ( (unsigned int)((DMAC1_CTL3 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_INT_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_DST_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_SRC_TR_WIDTH </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_DINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_SINC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_DEST_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_SRC_MSIZE </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_SRC_GATHER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_DST_SCATTER_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_TT_FC </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_SMS0 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_SMS1 </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_LLP_DST_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_LLP_SRC_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_BLOCK_TS </item>
//    <item> SFDITEM_FIELD__DMAC1_CTL3_DONE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DMAC1_DMA_CFG0  -----------------------------
// SVD Line: 22954

unsigned int DMAC1_DMA_CFG0 __AT (0x40024148);



// ---------------------------  Field Item: DMAC1_DMA_CFG0_CH_PRIOR  ------------------------------
// SVD Line: 22963

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_CH_PRIOR
//    <name> CH_PRIOR </name>
//    <rw> 
//    <i> [Bits 7..5] RW (@ 0x40024148) DMA channel priority </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_DMA_CFG0 >> 5) & 0x7), ((DMAC1_DMA_CFG0 = (DMAC1_DMA_CFG0 & ~(0x7UL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_DMA_CFG0_CH_SUSP  -------------------------------
// SVD Line: 22970

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_CH_SUSP
//    <name> CH_SUSP </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40024148) suspend DMA channel FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.8..8> CH_SUSP
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_FIFO_EMPTY  -----------------------------
// SVD Line: 22977

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_FIFO_EMPTY
//    <name> FIFO_EMPTY </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40024148) FIFO empty </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.9..9> FIFO_EMPTY
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_HS_SEL_DST  -----------------------------
// SVD Line: 22984

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_HS_SEL_DST
//    <name> HS_SEL_DST </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40024148) DMA destination handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.10..10> HS_SEL_DST
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_HS_SEL_SRC  -----------------------------
// SVD Line: 22991

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_HS_SEL_SRC
//    <name> HS_SEL_SRC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40024148) DMA source handshake signal selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.11..11> HS_SEL_SRC
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_LOCK_CH_L  ------------------------------
// SVD Line: 22998

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_CH_L
//    <name> LOCK_CH_L </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40024148) DMA channel lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_DMA_CFG0 >> 12) & 0x3), ((DMAC1_DMA_CFG0 = (DMAC1_DMA_CFG0 & ~(0x3UL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_DMA_CFG0_LOCK_B_L  ------------------------------
// SVD Line: 23005

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_B_L
//    <name> LOCK_B_L </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40024148) bus lock delay </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_DMA_CFG0 >> 14) & 0x3), ((DMAC1_DMA_CFG0 = (DMAC1_DMA_CFG0 & ~(0x3UL << 14 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 14 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_DMA_CFG0_LOCK_CH  -------------------------------
// SVD Line: 23012

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_CH
//    <name> LOCK_CH </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40024148) DMA channel lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.16..16> LOCK_CH
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_DMA_CFG0_LOCK_B  -------------------------------
// SVD Line: 23019

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_B
//    <name> LOCK_B </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40024148) bus lock control </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.17..17> LOCK_B
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_DST_HS_POL  -----------------------------
// SVD Line: 23026

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_DST_HS_POL
//    <name> DST_HS_POL </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40024148) DMA destination handshake interface message polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.18..18> DST_HS_POL
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_SRC_HS_POL  -----------------------------
// SVD Line: 23033

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_SRC_HS_POL
//    <name> SRC_HS_POL </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40024148) DMA source handshake interface message Polarity </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.19..19> SRC_HS_POL
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_RELOAD_SRC  -----------------------------
// SVD Line: 23040

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_RELOAD_SRC
//    <name> RELOAD_SRC </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40024148) DMA source auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.30..30> RELOAD_SRC
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_RELOAD_DST  -----------------------------
// SVD Line: 23047

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_RELOAD_DST
//    <name> RELOAD_DST </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40024148) DMA destination auto-reloading enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.31..31> RELOAD_DST
//    </check>
//  </item>
//  


// ----------------------------  Field Item: DMAC1_DMA_CFG0_FCMODE  -------------------------------
// SVD Line: 23054

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_FCMODE
//    <name> FCMODE </name>
//    <rw> 
//    <i> [Bit 32] RW (@ 0x40024148) Source flow control mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.32..32> FCMODE
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_FIFO_MODE  ------------------------------
// SVD Line: 23061

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_FIFO_MODE
//    <name> FIFO_MODE </name>
//    <rw> 
//    <i> [Bit 33] RW (@ 0x40024148) FIFO mode selection </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.33..33> FIFO_MODE
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_DMA_CFG0_PROTCTL  -------------------------------
// SVD Line: 23068

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_PROTCTL
//    <name> PROTCTL </name>
//    <rw> 
//    <i> [Bits 36..34] RW (@ 0x40024148) protection control </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_DMA_CFG0 >> 34) & 0x7), ((DMAC1_DMA_CFG0 = (DMAC1_DMA_CFG0 & ~(0x7UL << 34 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 34 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_DS_UPD_EN  ------------------------------
// SVD Line: 23075

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_DS_UPD_EN
//    <name> DS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 37] RW (@ 0x40024148) DMA destination status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.37..37> DS_UPD_EN
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_DMA_CFG0_SS_UPD_EN  ------------------------------
// SVD Line: 23082

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_SS_UPD_EN
//    <name> SS_UPD_EN </name>
//    <rw> 
//    <i> [Bit 38] RW (@ 0x40024148) DMA source status update enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_DMA_CFG0 ) </loc>
//      <o.38..38> SS_UPD_EN
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_DMA_CFG0_SRC_PER  -------------------------------
// SVD Line: 23089

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_SRC_PER
//    <name> SRC_PER </name>
//    <rw> 
//    <i> [Bits 42..39] RW (@ 0x40024148) DMA source handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_DMA_CFG0 >> 39) & 0xF), ((DMAC1_DMA_CFG0 = (DMAC1_DMA_CFG0 & ~(0xFUL << 39 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 39 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_DMA_CFG0_DEST_PER  ------------------------------
// SVD Line: 23096

//  <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_DEST_PER
//    <name> DEST_PER </name>
//    <rw> 
//    <i> [Bits 46..43] RW (@ 0x40024148) DMA destination handshake interface </i>
//    <edit> 
//      <loc> ( (unsigned char)((DMAC1_DMA_CFG0 >> 43) & 0xF), ((DMAC1_DMA_CFG0 = (DMAC1_DMA_CFG0 & ~(0xFUL << 43 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 43 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: DMAC1_DMA_CFG0  ---------------------------------
// SVD Line: 22954

//  <rtree> SFDITEM_REG__DMAC1_DMA_CFG0
//    <name> DMA_CFG0 </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024148) channel configuration register </i>
//    <loc> ( (unsigned int)((DMAC1_DMA_CFG0 >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_CH_PRIOR </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_CH_SUSP </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_FIFO_EMPTY </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_HS_SEL_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_HS_SEL_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_CH_L </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_B_L </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_CH </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_LOCK_B </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_DST_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_SRC_HS_POL </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_RELOAD_SRC </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_RELOAD_DST </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_FCMODE </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_FIFO_MODE </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_PROTCTL </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_DS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_SS_UPD_EN </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_SRC_PER </item>
//    <item> SFDITEM_FIELD__DMAC1_DMA_CFG0_DEST_PER </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC1_STATUS_TFR  ----------------------------
// SVD Line: 23105

unsigned int DMAC1_STATUS_TFR __AT (0x400242E8);



// ------------------------  Field Item: DMAC1_STATUS_TFR_CHAN0_STATUS  ---------------------------
// SVD Line: 23114

//  <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400242E8) DMA channel 0 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_TFR ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_STATUS_TFR_CHAN1_STATUS  ---------------------------
// SVD Line: 23121

//  <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400242E8) DMA channel 1 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_TFR ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_STATUS_TFR_CHAN2_STATUS  ---------------------------
// SVD Line: 23128

//  <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400242E8) DMA channel 2 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_TFR ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_STATUS_TFR_CHAN3_STATUS  ---------------------------
// SVD Line: 23135

//  <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400242E8) DMA channel 3 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_TFR ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC1_STATUS_TFR  --------------------------------
// SVD Line: 23105

//  <rtree> SFDITEM_REG__DMAC1_STATUS_TFR
//    <name> STATUS_TFR </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x400242E8) DMA transfer complete interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC1_STATUS_TFR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_TFR_CHAN3_STATUS </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAC1_STATUS_BLOCK  ---------------------------
// SVD Line: 23144

unsigned int DMAC1_STATUS_BLOCK __AT (0x400242F0);



// -----------------------  Field Item: DMAC1_STATUS_BLOCK_CHAN0_STATUS  --------------------------
// SVD Line: 23153

//  <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400242F0) DMA channel 0 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_BLOCK ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_STATUS_BLOCK_CHAN1_STATUS  --------------------------
// SVD Line: 23160

//  <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400242F0) DMA channel 1 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_BLOCK ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_STATUS_BLOCK_CHAN2_STATUS  --------------------------
// SVD Line: 23167

//  <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400242F0) DMA channel 2 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_BLOCK ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_STATUS_BLOCK_CHAN3_STATUS  --------------------------
// SVD Line: 23174

//  <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400242F0) DMA channel 3 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_BLOCK ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DMAC1_STATUS_BLOCK  -------------------------------
// SVD Line: 23144

//  <rtree> SFDITEM_REG__DMAC1_STATUS_BLOCK
//    <name> STATUS_BLOCK </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x400242F0) DMA block transfer complete interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC1_STATUS_BLOCK >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_BLOCK_CHAN3_STATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DMAC1_STATUS_SRC_TRAN  --------------------------
// SVD Line: 23183

unsigned int DMAC1_STATUS_SRC_TRAN __AT (0x400242F8);



// ---------------------  Field Item: DMAC1_STATUS_SRC_TRAN_CHAN0_STATUS  -------------------------
// SVD Line: 23192

//  <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x400242F8) Source transfer completion status of DMA channel 0 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_SRC_TRAN ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC1_STATUS_SRC_TRAN_CHAN1_STATUS  -------------------------
// SVD Line: 23199

//  <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x400242F8) Source transfer completion status of DMA channel 1 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_SRC_TRAN ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC1_STATUS_SRC_TRAN_CHAN2_STATUS  -------------------------
// SVD Line: 23206

//  <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x400242F8) Source transfer completion status of DMA channel 2 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_SRC_TRAN ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC1_STATUS_SRC_TRAN_CHAN3_STATUS  -------------------------
// SVD Line: 23213

//  <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x400242F8) Source transfer completion status of DMA channel 3 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_SRC_TRAN ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC1_STATUS_SRC_TRAN  -----------------------------
// SVD Line: 23183

//  <rtree> SFDITEM_REG__DMAC1_STATUS_SRC_TRAN
//    <name> STATUS_SRC_TRAN </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x400242F8) DMA source processing completed interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC1_STATUS_SRC_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_SRC_TRAN_CHAN3_STATUS </item>
//  </rtree>
//  


// ----------------------  Register Item Address: DMAC1_STATUS_DST_TRAN  --------------------------
// SVD Line: 23222

unsigned int DMAC1_STATUS_DST_TRAN __AT (0x40024300);



// ---------------------  Field Item: DMAC1_STATUS_DST_TRAN_CHAN0_STATUS  -------------------------
// SVD Line: 23231

//  <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40024300) Destination transfer completion status of DMA channel 0 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_DST_TRAN ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC1_STATUS_DST_TRAN_CHAN1_STATUS  -------------------------
// SVD Line: 23238

//  <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40024300) Destination transfer completion status of DMA channel 1 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_DST_TRAN ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC1_STATUS_DST_TRAN_CHAN2_STATUS  -------------------------
// SVD Line: 23245

//  <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40024300) Destination transfer completion status of DMA channel 2 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_DST_TRAN ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ---------------------  Field Item: DMAC1_STATUS_DST_TRAN_CHAN3_STATUS  -------------------------
// SVD Line: 23252

//  <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40024300) Destination transfer completion status of DMA channel 3 </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_DST_TRAN ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC1_STATUS_DST_TRAN  -----------------------------
// SVD Line: 23222

//  <rtree> SFDITEM_REG__DMAC1_STATUS_DST_TRAN
//    <name> STATUS_DST_TRAN </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x40024300) DMA source processing completed interrupt status register </i>
//    <loc> ( (unsigned int)((DMAC1_STATUS_DST_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_DST_TRAN_CHAN3_STATUS </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC1_STATUS_ERR  ----------------------------
// SVD Line: 23261

unsigned int DMAC1_STATUS_ERR __AT (0x40024308);



// ------------------------  Field Item: DMAC1_STATUS_ERR_CHAN0_STATUS  ---------------------------
// SVD Line: 23270

//  <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN0_STATUS
//    <name> CHAN0_STATUS </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40024308) channel 0 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_ERR ) </loc>
//      <o.0..0> CHAN0_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_STATUS_ERR_CHAN1_STATUS  ---------------------------
// SVD Line: 23277

//  <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN1_STATUS
//    <name> CHAN1_STATUS </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40024308) channel 1 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_ERR ) </loc>
//      <o.1..1> CHAN1_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_STATUS_ERR_CHAN2_STATUS  ---------------------------
// SVD Line: 23284

//  <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN2_STATUS
//    <name> CHAN2_STATUS </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40024308) channel 2 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_ERR ) </loc>
//      <o.2..2> CHAN2_STATUS
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_STATUS_ERR_CHAN3_STATUS  ---------------------------
// SVD Line: 23291

//  <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN3_STATUS
//    <name> CHAN3_STATUS </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40024308) channel 3 transmission error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_STATUS_ERR ) </loc>
//      <o.3..3> CHAN3_STATUS
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC1_STATUS_ERR  --------------------------------
// SVD Line: 23261

//  <rtree> SFDITEM_REG__DMAC1_STATUS_ERR
//    <name> STATUS_ERR </name>
//    <r> 
//    <i> [Bits 63..0] RO (@ 0x40024308) DMA transmission error status register </i>
//    <loc> ( (unsigned int)((DMAC1_STATUS_ERR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN0_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN1_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN2_STATUS </item>
//    <item> SFDITEM_FIELD__DMAC1_STATUS_ERR_CHAN3_STATUS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DMAC1_MASK_TFR  -----------------------------
// SVD Line: 23300

unsigned int DMAC1_MASK_TFR __AT (0x40024310);



// --------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_0  -----------------------------
// SVD Line: 23309

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024310) DMA channel0 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_1  -----------------------------
// SVD Line: 23316

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40024310) DMA channel1 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_2  -----------------------------
// SVD Line: 23323

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40024310) DMA channel2 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_3  -----------------------------
// SVD Line: 23330

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40024310) DMA channel3 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_WE_0  ----------------------------
// SVD Line: 23337

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40024310) DMA channel0 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_WE_1  ----------------------------
// SVD Line: 23344

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40024310) DMA channel1 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_WE_2  ----------------------------
// SVD Line: 23351

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40024310) DMA channel2 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_TFR_INT_MASK_WE_3  ----------------------------
// SVD Line: 23358

//  <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40024310) DMA channel3 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_TFR ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC1_MASK_TFR  ---------------------------------
// SVD Line: 23300

//  <rtree> SFDITEM_REG__DMAC1_MASK_TFR
//    <name> MASK_TFR </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024310) DMA transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC1_MASK_TFR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_TFR_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC1_MASK_BLOCK  ----------------------------
// SVD Line: 23367

unsigned int DMAC1_MASK_BLOCK __AT (0x40024318);



// -------------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_0  ----------------------------
// SVD Line: 23376

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024318) DMA channel0 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_1  ----------------------------
// SVD Line: 23383

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40024318) DMA channel1 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_2  ----------------------------
// SVD Line: 23390

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40024318) DMA channel2 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_3  ----------------------------
// SVD Line: 23397

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40024318) DMA channel3 transfer completion interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_WE_0  ---------------------------
// SVD Line: 23404

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40024318) DMA channel0 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_WE_1  ---------------------------
// SVD Line: 23411

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40024318) DMA channel1 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_WE_2  ---------------------------
// SVD Line: 23418

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40024318) DMA channel2 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_BLOCK_INT_MASK_WE_3  ---------------------------
// SVD Line: 23425

//  <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40024318) DMA channel3 transfer completion interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_BLOCK ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC1_MASK_BLOCK  --------------------------------
// SVD Line: 23367

//  <rtree> SFDITEM_REG__DMAC1_MASK_BLOCK
//    <name> MASK_BLOCK </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024318) DMA block transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC1_MASK_BLOCK >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_BLOCK_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC1_MASK_SRC_TRAN  ---------------------------
// SVD Line: 23434

unsigned int DMAC1_MASK_SRC_TRAN __AT (0x40024320);



// -----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_0  ---------------------------
// SVD Line: 23443

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024320) source transfer completion channel0 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_1  ---------------------------
// SVD Line: 23450

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40024320) source transfer completion channel1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_2  ---------------------------
// SVD Line: 23457

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40024320) source transfer completion channel2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_3  ---------------------------
// SVD Line: 23464

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40024320) source transfer completion channel3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_WE_0  -------------------------
// SVD Line: 23471

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40024320) DMA channel0 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_WE_1  -------------------------
// SVD Line: 23478

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40024320) DMA channel1 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_WE_2  -------------------------
// SVD Line: 23485

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40024320) DMA channel2 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_SRC_TRAN_INT_MASK_WE_3  -------------------------
// SVD Line: 23492

//  <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40024320) DMA channel3 source transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_SRC_TRAN ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DMAC1_MASK_SRC_TRAN  ------------------------------
// SVD Line: 23434

//  <rtree> SFDITEM_REG__DMAC1_MASK_SRC_TRAN
//    <name> MASK_SRC_TRAN </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024320) DMA source block transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC1_MASK_SRC_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_SRC_TRAN_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC1_MASK_DST_TRAN  ---------------------------
// SVD Line: 23501

unsigned int DMAC1_MASK_DST_TRAN __AT (0x40024328);



// -----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_0  ---------------------------
// SVD Line: 23510

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024328) destination transfer completion channel0 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_1  ---------------------------
// SVD Line: 23517

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40024328) destination transfer completion channel1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_2  ---------------------------
// SVD Line: 23524

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40024328) destination transfer completion channel2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// -----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_3  ---------------------------
// SVD Line: 23531

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40024328) destination transfer completion channel3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_WE_0  -------------------------
// SVD Line: 23538

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40024328) DMA channel0 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_WE_1  -------------------------
// SVD Line: 23545

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40024328) DMA channel1 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_WE_2  -------------------------
// SVD Line: 23552

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40024328) DMA channel2 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_MASK_DST_TRAN_INT_MASK_WE_3  -------------------------
// SVD Line: 23559

//  <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40024328) DMA channel3 destination transfer complete interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_DST_TRAN ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// ---------------------------  Register RTree: DMAC1_MASK_DST_TRAN  ------------------------------
// SVD Line: 23501

//  <rtree> SFDITEM_REG__DMAC1_MASK_DST_TRAN
//    <name> MASK_DST_TRAN </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024328) DMA destination block transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC1_MASK_DST_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_DST_TRAN_INT_MASK_WE_3 </item>
//  </rtree>
//  


// --------------------------  Register Item Address: DMAC1_MASK_ERR  -----------------------------
// SVD Line: 23568

unsigned int DMAC1_MASK_ERR __AT (0x40024330);



// --------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_0  -----------------------------
// SVD Line: 23577

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_0
//    <name> INT_MASK_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024330) destination transmission error channel0 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.0..0> INT_MASK_0
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_1  -----------------------------
// SVD Line: 23584

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_1
//    <name> INT_MASK_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40024330) destination transmission error channel1 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.1..1> INT_MASK_1
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_2  -----------------------------
// SVD Line: 23591

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_2
//    <name> INT_MASK_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40024330) destination transmission error channel2 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.2..2> INT_MASK_2
//    </check>
//  </item>
//  


// --------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_3  -----------------------------
// SVD Line: 23598

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_3
//    <name> INT_MASK_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40024330) destination transmission error channel3 interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.3..3> INT_MASK_3
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_WE_0  ----------------------------
// SVD Line: 23605

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_0
//    <name> INT_MASK_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x40024330) DMA channel0 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.8..8> INT_MASK_WE_0
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_WE_1  ----------------------------
// SVD Line: 23612

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_1
//    <name> INT_MASK_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x40024330) DMA channel1 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.9..9> INT_MASK_WE_1
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_WE_2  ----------------------------
// SVD Line: 23619

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_2
//    <name> INT_MASK_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x40024330) DMA channel2 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.10..10> INT_MASK_WE_2
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_MASK_ERR_INT_MASK_WE_3  ----------------------------
// SVD Line: 23626

//  <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_3
//    <name> INT_MASK_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x40024330) DMA channel3 transmission error interrupt mask write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_MASK_ERR ) </loc>
//      <o.11..11> INT_MASK_WE_3
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC1_MASK_ERR  ---------------------------------
// SVD Line: 23568

//  <rtree> SFDITEM_REG__DMAC1_MASK_ERR
//    <name> MASK_ERR </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024330) DMA transmission error interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC1_MASK_ERR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_3 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_MASK_ERR_INT_MASK_WE_3 </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC1_CLEAR_TFR  -----------------------------
// SVD Line: 23635

unsigned int DMAC1_CLEAR_TFR __AT (0x40024338);



// -------------------------  Field Item: DMAC1_CLEAR_TFR_CHAN0_CLEAR  ----------------------------
// SVD Line: 23644

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40024338) clear DMA channel0 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_TFR ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_CLEAR_TFR_CHAN1_CLEAR  ----------------------------
// SVD Line: 23651

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40024338) clear DMA channel1 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_TFR ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_CLEAR_TFR_CHAN2_CLEAR  ----------------------------
// SVD Line: 23658

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40024338) clear DMA channel2 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_TFR ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_CLEAR_TFR_CHAN3_CLEAR  ----------------------------
// SVD Line: 23665

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40024338) clear DMA channel3 transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_TFR ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC1_CLEAR_TFR  --------------------------------
// SVD Line: 23635

//  <rtree> SFDITEM_REG__DMAC1_CLEAR_TFR
//    <name> CLEAR_TFR </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40024338) DMA transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC1_CLEAR_TFR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_TFR_CHAN3_CLEAR </item>
//  </rtree>
//  


// ------------------------  Register Item Address: DMAC1_CLEAR_BLOCK  ----------------------------
// SVD Line: 23674

unsigned int DMAC1_CLEAR_BLOCK __AT (0x40024340);



// ------------------------  Field Item: DMAC1_CLEAR_BLOCK_CHAN0_CLEAR  ---------------------------
// SVD Line: 23683

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40024340) clear DMA channel0 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_BLOCK ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_CLEAR_BLOCK_CHAN1_CLEAR  ---------------------------
// SVD Line: 23690

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40024340) clear DMA channel1 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_BLOCK ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_CLEAR_BLOCK_CHAN2_CLEAR  ---------------------------
// SVD Line: 23697

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40024340) clear DMA channel2 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_BLOCK ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// ------------------------  Field Item: DMAC1_CLEAR_BLOCK_CHAN3_CLEAR  ---------------------------
// SVD Line: 23704

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40024340) clear DMA channel3 block transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_BLOCK ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// ----------------------------  Register RTree: DMAC1_CLEAR_BLOCK  -------------------------------
// SVD Line: 23674

//  <rtree> SFDITEM_REG__DMAC1_CLEAR_BLOCK
//    <name> CLEAR_BLOCK </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40024340) DMA block transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC1_CLEAR_BLOCK >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_BLOCK_CHAN3_CLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC1_CLEAR_SRC_TRAN  --------------------------
// SVD Line: 23713

unsigned int DMAC1_CLEAR_SRC_TRAN __AT (0x40024348);



// ----------------------  Field Item: DMAC1_CLEAR_SRC_TRAN_CHAN0_CLEAR  --------------------------
// SVD Line: 23722

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40024348) clear DMA channel0 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_SRC_TRAN ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_CLEAR_SRC_TRAN_CHAN1_CLEAR  --------------------------
// SVD Line: 23729

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40024348) clear DMA channel1 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_SRC_TRAN ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_CLEAR_SRC_TRAN_CHAN2_CLEAR  --------------------------
// SVD Line: 23736

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40024348) clear DMA channel2 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_SRC_TRAN ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_CLEAR_SRC_TRAN_CHAN3_CLEAR  --------------------------
// SVD Line: 23743

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40024348) clear DMA channel3 source transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_SRC_TRAN ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC1_CLEAR_SRC_TRAN  ------------------------------
// SVD Line: 23713

//  <rtree> SFDITEM_REG__DMAC1_CLEAR_SRC_TRAN
//    <name> CLEAR_SRC_TRAN </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40024348) DMA source transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC1_CLEAR_SRC_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_SRC_TRAN_CHAN3_CLEAR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: DMAC1_CLEAR_DST_TRAN  --------------------------
// SVD Line: 23752

unsigned int DMAC1_CLEAR_DST_TRAN __AT (0x40024350);



// ----------------------  Field Item: DMAC1_CLEAR_DST_TRAN_CHAN0_CLEAR  --------------------------
// SVD Line: 23761

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40024350) clear DMA channel0 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_DST_TRAN ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_CLEAR_DST_TRAN_CHAN1_CLEAR  --------------------------
// SVD Line: 23768

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40024350) clear DMA channel1 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_DST_TRAN ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_CLEAR_DST_TRAN_CHAN2_CLEAR  --------------------------
// SVD Line: 23775

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40024350) clear DMA channel2 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_DST_TRAN ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// ----------------------  Field Item: DMAC1_CLEAR_DST_TRAN_CHAN3_CLEAR  --------------------------
// SVD Line: 23782

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40024350) clear DMA channel3 destination transfer completion status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_DST_TRAN ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// --------------------------  Register RTree: DMAC1_CLEAR_DST_TRAN  ------------------------------
// SVD Line: 23752

//  <rtree> SFDITEM_REG__DMAC1_CLEAR_DST_TRAN
//    <name> CLEAR_DST_TRAN </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40024350) DMA destination transfer completion status clear register </i>
//    <loc> ( (unsigned int)((DMAC1_CLEAR_DST_TRAN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_DST_TRAN_CHAN3_CLEAR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: DMAC1_CLEAR_ERR  -----------------------------
// SVD Line: 23791

unsigned int DMAC1_CLEAR_ERR __AT (0x40024358);



// -------------------------  Field Item: DMAC1_CLEAR_ERR_CHAN0_CLEAR  ----------------------------
// SVD Line: 23800

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN0_CLEAR
//    <name> CHAN0_CLEAR </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x40024358) clear DMA channel0 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_ERR ) </loc>
//      <o.0..0> CHAN0_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_CLEAR_ERR_CHAN1_CLEAR  ----------------------------
// SVD Line: 23807

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN1_CLEAR
//    <name> CHAN1_CLEAR </name>
//    <w> 
//    <i> [Bit 1] WO (@ 0x40024358) clear DMA channel1 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_ERR ) </loc>
//      <o.1..1> CHAN1_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_CLEAR_ERR_CHAN2_CLEAR  ----------------------------
// SVD Line: 23814

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN2_CLEAR
//    <name> CHAN2_CLEAR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40024358) clear DMA channel2 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_ERR ) </loc>
//      <o.2..2> CHAN2_CLEAR
//    </check>
//  </item>
//  


// -------------------------  Field Item: DMAC1_CLEAR_ERR_CHAN3_CLEAR  ----------------------------
// SVD Line: 23821

//  <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN3_CLEAR
//    <name> CHAN3_CLEAR </name>
//    <w> 
//    <i> [Bit 3] WO (@ 0x40024358) clear DMA channel3 transfer error status </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CLEAR_ERR ) </loc>
//      <o.3..3> CHAN3_CLEAR
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: DMAC1_CLEAR_ERR  --------------------------------
// SVD Line: 23791

//  <rtree> SFDITEM_REG__DMAC1_CLEAR_ERR
//    <name> CLEAR_ERR </name>
//    <w> 
//    <i> [Bits 63..0] WO (@ 0x40024358) DMA transfer error status clear register </i>
//    <loc> ( (unsigned int)((DMAC1_CLEAR_ERR >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN0_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN1_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN2_CLEAR </item>
//    <item> SFDITEM_FIELD__DMAC1_CLEAR_ERR_CHAN3_CLEAR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: DMAC1_CFG  --------------------------------
// SVD Line: 23830

unsigned int DMAC1_CFG __AT (0x40024398);



// ------------------------------  Field Item: DMAC1_CFG_DMA_EN  ----------------------------------
// SVD Line: 23839

//  <item> SFDITEM_FIELD__DMAC1_CFG_DMA_EN
//    <name> DMA_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40024398) DMA enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CFG ) </loc>
//      <o.0..0> DMA_EN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: DMAC1_CFG  -----------------------------------
// SVD Line: 23830

//  <rtree> SFDITEM_REG__DMAC1_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x40024398) DMA enable control register </i>
//    <loc> ( (unsigned int)((DMAC1_CFG >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CFG_DMA_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: DMAC1_CH_EN  -------------------------------
// SVD Line: 23848

unsigned int DMAC1_CH_EN __AT (0x400243A0);



// -----------------------------  Field Item: DMAC1_CH_EN_CH_EN_0  --------------------------------
// SVD Line: 23857

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_0
//    <name> CH_EN_0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400243A0) DMA channel0 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.0..0> CH_EN_0
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CH_EN_CH_EN_1  --------------------------------
// SVD Line: 23864

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_1
//    <name> CH_EN_1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400243A0) DMA channel1 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.1..1> CH_EN_1
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CH_EN_CH_EN_2  --------------------------------
// SVD Line: 23871

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_2
//    <name> CH_EN_2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400243A0) DMA channel2 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.2..2> CH_EN_2
//    </check>
//  </item>
//  


// -----------------------------  Field Item: DMAC1_CH_EN_CH_EN_3  --------------------------------
// SVD Line: 23878

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_3
//    <name> CH_EN_3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400243A0) DMA channel3 enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.3..3> CH_EN_3
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CH_EN_CH_EN_WE_0  -------------------------------
// SVD Line: 23885

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_0
//    <name> CH_EN_WE_0 </name>
//    <w> 
//    <i> [Bit 8] WO (@ 0x400243A0) DMA channel0 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.8..8> CH_EN_WE_0
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CH_EN_CH_EN_WE_1  -------------------------------
// SVD Line: 23892

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_1
//    <name> CH_EN_WE_1 </name>
//    <w> 
//    <i> [Bit 9] WO (@ 0x400243A0) DMA channel1 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.9..9> CH_EN_WE_1
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CH_EN_CH_EN_WE_2  -------------------------------
// SVD Line: 23899

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_2
//    <name> CH_EN_WE_2 </name>
//    <w> 
//    <i> [Bit 10] WO (@ 0x400243A0) DMA channel2 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.10..10> CH_EN_WE_2
//    </check>
//  </item>
//  


// ---------------------------  Field Item: DMAC1_CH_EN_CH_EN_WE_3  -------------------------------
// SVD Line: 23906

//  <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_3
//    <name> CH_EN_WE_3 </name>
//    <w> 
//    <i> [Bit 11] WO (@ 0x400243A0) DMA channel3 enable control write enable </i>
//    <check> 
//      <loc> ( (unsigned int) DMAC1_CH_EN ) </loc>
//      <o.11..11> CH_EN_WE_3
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: DMAC1_CH_EN  ----------------------------------
// SVD Line: 23848

//  <rtree> SFDITEM_REG__DMAC1_CH_EN
//    <name> CH_EN </name>
//    <rw> 
//    <i> [Bits 63..0] RW (@ 0x400243A0) DMA transfer complete interrupt enable register </i>
//    <loc> ( (unsigned int)((DMAC1_CH_EN >> 0) & 0x0) ) </loc>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_3 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_0 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_1 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_2 </item>
//    <item> SFDITEM_FIELD__DMAC1_CH_EN_CH_EN_WE_3 </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: DMAC1  -------------------------------------
// SVD Line: 21779

//  <view> DMAC1
//    <name> DMAC1 </name>
//    <item> SFDITEM_REG__DMAC1_SAR0 </item>
//    <item> SFDITEM_REG__DMAC1_DAR0 </item>
//    <item> SFDITEM_REG__DMAC1_LLP0 </item>
//    <item> SFDITEM_REG__DMAC1_CTL0 </item>
//    <item> SFDITEM_REG__DMAC1_CFG0 </item>
//    <item> SFDITEM_REG__DMAC1_SAR1 </item>
//    <item> SFDITEM_REG__DMAC1_DAR1 </item>
//    <item> SFDITEM_REG__DMAC1_LLP1 </item>
//    <item> SFDITEM_REG__DMAC1_CTL1 </item>
//    <item> SFDITEM_REG__DMAC1_CFG1 </item>
//    <item> SFDITEM_REG__DMAC1_SAR2 </item>
//    <item> SFDITEM_REG__DMAC1_DAR2 </item>
//    <item> SFDITEM_REG__DMAC1_LLP2 </item>
//    <item> SFDITEM_REG__DMAC1_CTL2 </item>
//    <item> SFDITEM_REG__DMAC1_CFG2 </item>
//    <item> SFDITEM_REG__DMAC1_SAR3 </item>
//    <item> SFDITEM_REG__DMAC1_DAR3 </item>
//    <item> SFDITEM_REG__DMAC1_LLP3 </item>
//    <item> SFDITEM_REG__DMAC1_CTL3 </item>
//    <item> SFDITEM_REG__DMAC1_DMA_CFG0 </item>
//    <item> SFDITEM_REG__DMAC1_STATUS_TFR </item>
//    <item> SFDITEM_REG__DMAC1_STATUS_BLOCK </item>
//    <item> SFDITEM_REG__DMAC1_STATUS_SRC_TRAN </item>
//    <item> SFDITEM_REG__DMAC1_STATUS_DST_TRAN </item>
//    <item> SFDITEM_REG__DMAC1_STATUS_ERR </item>
//    <item> SFDITEM_REG__DMAC1_MASK_TFR </item>
//    <item> SFDITEM_REG__DMAC1_MASK_BLOCK </item>
//    <item> SFDITEM_REG__DMAC1_MASK_SRC_TRAN </item>
//    <item> SFDITEM_REG__DMAC1_MASK_DST_TRAN </item>
//    <item> SFDITEM_REG__DMAC1_MASK_ERR </item>
//    <item> SFDITEM_REG__DMAC1_CLEAR_TFR </item>
//    <item> SFDITEM_REG__DMAC1_CLEAR_BLOCK </item>
//    <item> SFDITEM_REG__DMAC1_CLEAR_SRC_TRAN </item>
//    <item> SFDITEM_REG__DMAC1_CLEAR_DST_TRAN </item>
//    <item> SFDITEM_REG__DMAC1_CLEAR_ERR </item>
//    <item> SFDITEM_REG__DMAC1_CFG </item>
//    <item> SFDITEM_REG__DMAC1_CH_EN </item>
//  </view>
//  


// ---------------------------  Register Item Address: BSTIMER0_CR1  ------------------------------
// SVD Line: 23931

unsigned int BSTIMER0_CR1 __AT (0x4000C000);



// ------------------------------  Field Item: BSTIMER0_CR1_CEN  ----------------------------------
// SVD Line: 23940

//  <item> SFDITEM_FIELD__BSTIMER0_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER0_CR1_UDIS  ---------------------------------
// SVD Line: 23947

//  <item> SFDITEM_FIELD__BSTIMER0_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000C000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER0_CR1_URS  ----------------------------------
// SVD Line: 23954

//  <item> SFDITEM_FIELD__BSTIMER0_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000C000) Update Request Source </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER0_CR1_OPM  ----------------------------------
// SVD Line: 23961

//  <item> SFDITEM_FIELD__BSTIMER0_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000C000) One Pulse Mode </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER0_CR1_APRE  ---------------------------------
// SVD Line: 23968

//  <item> SFDITEM_FIELD__BSTIMER0_CR1_APRE
//    <name> APRE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000C000) shadow register reload enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_CR1 ) </loc>
//      <o.7..7> APRE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_CR1  ----------------------------------
// SVD Line: 23931

//  <rtree> SFDITEM_REG__BSTIMER0_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C000) control register 1 </i>
//    <loc> ( (unsigned int)((BSTIMER0_CR1 >> 0) & 0xFFFFFFFF), ((BSTIMER0_CR1 = (BSTIMER0_CR1 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_CR1_CEN </item>
//    <item> SFDITEM_FIELD__BSTIMER0_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__BSTIMER0_CR1_URS </item>
//    <item> SFDITEM_FIELD__BSTIMER0_CR1_OPM </item>
//    <item> SFDITEM_FIELD__BSTIMER0_CR1_APRE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER0_CR2  ------------------------------
// SVD Line: 23977

unsigned int BSTIMER0_CR2 __AT (0x4000C004);



// ------------------------------  Field Item: BSTIMER0_CR2_MMS  ----------------------------------
// SVD Line: 23986

//  <item> SFDITEM_FIELD__BSTIMER0_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4000C004) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((BSTIMER0_CR2 >> 4) & 0x7), ((BSTIMER0_CR2 = (BSTIMER0_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_CR2  ----------------------------------
// SVD Line: 23977

//  <rtree> SFDITEM_REG__BSTIMER0_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C004) control register 2 </i>
//    <loc> ( (unsigned int)((BSTIMER0_CR2 >> 0) & 0xFFFFFFFF), ((BSTIMER0_CR2 = (BSTIMER0_CR2 & ~(0x70UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_CR2_MMS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BSTIMER0_DIER  ------------------------------
// SVD Line: 23995

unsigned int BSTIMER0_DIER __AT (0x4000C00C);



// ------------------------------  Field Item: BSTIMER0_DIER_UIE  ---------------------------------
// SVD Line: 24004

//  <item> SFDITEM_FIELD__BSTIMER0_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C00C) Update event interrupt request enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER0_DIER_UDE  ---------------------------------
// SVD Line: 24011

//  <item> SFDITEM_FIELD__BSTIMER0_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000C00C) Update event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_DIER  ---------------------------------
// SVD Line: 23995

//  <rtree> SFDITEM_REG__BSTIMER0_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C00C) DMA/interrupt enable register </i>
//    <loc> ( (unsigned int)((BSTIMER0_DIER >> 0) & 0xFFFFFFFF), ((BSTIMER0_DIER = (BSTIMER0_DIER & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_DIER_UIE </item>
//    <item> SFDITEM_FIELD__BSTIMER0_DIER_UDE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER0_SR  -------------------------------
// SVD Line: 24020

unsigned int BSTIMER0_SR __AT (0x4000C010);



// -------------------------------  Field Item: BSTIMER0_SR_UIF  ----------------------------------
// SVD Line: 24029

//  <item> SFDITEM_FIELD__BSTIMER0_SR_UIF
//    <name> UIF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000C010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: BSTIMER0_SR  ----------------------------------
// SVD Line: 24020

//  <rtree> SFDITEM_REG__BSTIMER0_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000C010) status register </i>
//    <loc> ( (unsigned int)((BSTIMER0_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_SR_UIF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER0_EGR  ------------------------------
// SVD Line: 24038

unsigned int BSTIMER0_EGR __AT (0x4000C014);



// ------------------------------  Field Item: BSTIMER0_EGR_UIF  ----------------------------------
// SVD Line: 24047

//  <item> SFDITEM_FIELD__BSTIMER0_EGR_UIF
//    <name> UIF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4000C014) update event enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER0_EGR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_EGR  ----------------------------------
// SVD Line: 24038

//  <rtree> SFDITEM_REG__BSTIMER0_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4000C014) event generation register </i>
//    <loc> ( (unsigned int)((BSTIMER0_EGR >> 0) & 0xFFFFFFFF), ((BSTIMER0_EGR = (BSTIMER0_EGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_EGR_UIF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER0_CNT  ------------------------------
// SVD Line: 24056

unsigned int BSTIMER0_CNT __AT (0x4000C024);



// ------------------------------  Field Item: BSTIMER0_CNT_CNT  ----------------------------------
// SVD Line: 24065

//  <item> SFDITEM_FIELD__BSTIMER0_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000C024) counter register </i>
//    <edit> 
//      <loc> ( (unsigned short)((BSTIMER0_CNT >> 0) & 0xFFFF), ((BSTIMER0_CNT = (BSTIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_CNT  ----------------------------------
// SVD Line: 24056

//  <rtree> SFDITEM_REG__BSTIMER0_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C024) TIMER event generation register </i>
//    <loc> ( (unsigned int)((BSTIMER0_CNT >> 0) & 0xFFFFFFFF), ((BSTIMER0_CNT = (BSTIMER0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER0_PSC  ------------------------------
// SVD Line: 24074

unsigned int BSTIMER0_PSC __AT (0x4000C028);



// ------------------------------  Field Item: BSTIMER0_PSC_PSC  ----------------------------------
// SVD Line: 24083

//  <item> SFDITEM_FIELD__BSTIMER0_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000C028) prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BSTIMER0_PSC >> 0) & 0xFFFF), ((BSTIMER0_PSC = (BSTIMER0_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_PSC  ----------------------------------
// SVD Line: 24074

//  <rtree> SFDITEM_REG__BSTIMER0_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C028) prescaler register </i>
//    <loc> ( (unsigned int)((BSTIMER0_PSC >> 0) & 0xFFFFFFFF), ((BSTIMER0_PSC = (BSTIMER0_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_PSC_PSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER0_ARR  ------------------------------
// SVD Line: 24092

unsigned int BSTIMER0_ARR __AT (0x4000C02C);



// ------------------------------  Field Item: BSTIMER0_ARR_ARR  ----------------------------------
// SVD Line: 24101

//  <item> SFDITEM_FIELD__BSTIMER0_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000C02C) Counter reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BSTIMER0_ARR >> 0) & 0xFFFF), ((BSTIMER0_ARR = (BSTIMER0_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER0_ARR  ----------------------------------
// SVD Line: 24092

//  <rtree> SFDITEM_REG__BSTIMER0_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C02C) auto-reload register </i>
//    <loc> ( (unsigned int)((BSTIMER0_ARR >> 0) & 0xFFFFFFFF), ((BSTIMER0_ARR = (BSTIMER0_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER0_ARR_ARR </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: BSTIMER0  -----------------------------------
// SVD Line: 23917

//  <view> BSTIMER0
//    <name> BSTIMER0 </name>
//    <item> SFDITEM_REG__BSTIMER0_CR1 </item>
//    <item> SFDITEM_REG__BSTIMER0_CR2 </item>
//    <item> SFDITEM_REG__BSTIMER0_DIER </item>
//    <item> SFDITEM_REG__BSTIMER0_SR </item>
//    <item> SFDITEM_REG__BSTIMER0_EGR </item>
//    <item> SFDITEM_REG__BSTIMER0_CNT </item>
//    <item> SFDITEM_REG__BSTIMER0_PSC </item>
//    <item> SFDITEM_REG__BSTIMER0_ARR </item>
//  </view>
//  


// ----------------------------  Register Item Address: SAE_SAECR  --------------------------------
// SVD Line: 24126

unsigned int SAE_SAECR __AT (0x40032000);



// --------------------------------  Field Item: SAE_SAECR_CEN  -----------------------------------
// SVD Line: 24135

//  <item> SFDITEM_FIELD__SAE_SAECR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAECR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SAE_SAECR  -----------------------------------
// SVD Line: 24126

//  <rtree> SFDITEM_REG__SAE_SAECR
//    <name> SAECR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032000) common control register </i>
//    <loc> ( (unsigned int)((SAE_SAECR >> 0) & 0xFFFFFFFF), ((SAE_SAECR = (SAE_SAECR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAECR_CEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAE_SAEHCR  -------------------------------
// SVD Line: 24144

unsigned int SAE_SAEHCR __AT (0x40032004);



// -------------------------------  Field Item: SAE_SAEHCR_CEN  -----------------------------------
// SVD Line: 24153

//  <item> SFDITEM_FIELD__SAE_SAEHCR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032004) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEHCR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEHCR  -----------------------------------
// SVD Line: 24144

//  <rtree> SFDITEM_REG__SAE_SAEHCR
//    <name> SAEHCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032004) safe control register </i>
//    <loc> ( (unsigned int)((SAE_SAEHCR >> 0) & 0xFFFFFFFF), ((SAE_SAEHCR = (SAE_SAEHCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEHCR_CEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SAE_SAESR  --------------------------------
// SVD Line: 24162

unsigned int SAE_SAESR __AT (0x40032008);



// --------------------------------  Field Item: SAE_SAESR_CEN  -----------------------------------
// SVD Line: 24171

//  <item> SFDITEM_FIELD__SAE_SAESR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032008) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAESR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SAE_SAESR  -----------------------------------
// SVD Line: 24162

//  <rtree> SFDITEM_REG__SAE_SAESR
//    <name> SAESR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032008) status register </i>
//    <loc> ( (unsigned int)((SAE_SAESR >> 0) & 0xFFFFFFFF), ((SAE_SAESR = (SAE_SAESR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAESR_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEGPR0  -------------------------------
// SVD Line: 24180

unsigned int SAE_SAEGPR0 __AT (0x4003200C);



// -------------------------------  Field Item: SAE_SAEGPR0_CEN  ----------------------------------
// SVD Line: 24189

//  <item> SFDITEM_FIELD__SAE_SAEGPR0_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4003200C) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEGPR0 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEGPR0  ----------------------------------
// SVD Line: 24180

//  <rtree> SFDITEM_REG__SAE_SAEGPR0
//    <name> SAEGPR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4003200C) general group register 0 </i>
//    <loc> ( (unsigned int)((SAE_SAEGPR0 >> 0) & 0xFFFFFFFF), ((SAE_SAEGPR0 = (SAE_SAEGPR0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEGPR0_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEGPR1  -------------------------------
// SVD Line: 24198

unsigned int SAE_SAEGPR1 __AT (0x40032010);



// -------------------------------  Field Item: SAE_SAEGPR1_CEN  ----------------------------------
// SVD Line: 24207

//  <item> SFDITEM_FIELD__SAE_SAEGPR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032010) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEGPR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEGPR1  ----------------------------------
// SVD Line: 24198

//  <rtree> SFDITEM_REG__SAE_SAEGPR1
//    <name> SAEGPR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032010) general group register 1 </i>
//    <loc> ( (unsigned int)((SAE_SAEGPR1 >> 0) & 0xFFFFFFFF), ((SAE_SAEGPR1 = (SAE_SAEGPR1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEGPR1_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEGPR2  -------------------------------
// SVD Line: 24216

unsigned int SAE_SAEGPR2 __AT (0x40032014);



// -------------------------------  Field Item: SAE_SAEGPR2_CEN  ----------------------------------
// SVD Line: 24225

//  <item> SFDITEM_FIELD__SAE_SAEGPR2_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032014) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEGPR2 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEGPR2  ----------------------------------
// SVD Line: 24216

//  <rtree> SFDITEM_REG__SAE_SAEGPR2
//    <name> SAEGPR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032014) general group register 2 </i>
//    <loc> ( (unsigned int)((SAE_SAEGPR2 >> 0) & 0xFFFFFFFF), ((SAE_SAEGPR2 = (SAE_SAEGPR2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEGPR2_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEGPR3  -------------------------------
// SVD Line: 24234

unsigned int SAE_SAEGPR3 __AT (0x40032018);



// -------------------------------  Field Item: SAE_SAEGPR3_CEN  ----------------------------------
// SVD Line: 24243

//  <item> SFDITEM_FIELD__SAE_SAEGPR3_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032018) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEGPR3 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEGPR3  ----------------------------------
// SVD Line: 24234

//  <rtree> SFDITEM_REG__SAE_SAEGPR3
//    <name> SAEGPR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032018) general group register 3 </i>
//    <loc> ( (unsigned int)((SAE_SAEGPR3 >> 0) & 0xFFFFFFFF), ((SAE_SAEGPR3 = (SAE_SAEGPR3 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEGPR3_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEGPR4  -------------------------------
// SVD Line: 24252

unsigned int SAE_SAEGPR4 __AT (0x4003201C);



// -------------------------------  Field Item: SAE_SAEGPR4_CEN  ----------------------------------
// SVD Line: 24261

//  <item> SFDITEM_FIELD__SAE_SAEGPR4_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4003201C) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEGPR4 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEGPR4  ----------------------------------
// SVD Line: 24252

//  <rtree> SFDITEM_REG__SAE_SAEGPR4
//    <name> SAEGPR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4003201C) general group register 4 </i>
//    <loc> ( (unsigned int)((SAE_SAEGPR4 >> 0) & 0xFFFFFFFF), ((SAE_SAEGPR4 = (SAE_SAEGPR4 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEGPR4_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEGPR5  -------------------------------
// SVD Line: 24270

unsigned int SAE_SAEGPR5 __AT (0x40032020);



// -------------------------------  Field Item: SAE_SAEGPR5_CEN  ----------------------------------
// SVD Line: 24279

//  <item> SFDITEM_FIELD__SAE_SAEGPR5_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032020) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEGPR5 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SAE_SAEGPR5  ----------------------------------
// SVD Line: 24270

//  <rtree> SFDITEM_REG__SAE_SAEGPR5
//    <name> SAEGPR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032020) general group register 5 </i>
//    <loc> ( (unsigned int)((SAE_SAEGPR5 >> 0) & 0xFFFFFFFF), ((SAE_SAEGPR5 = (SAE_SAEGPR5 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEGPR5_CEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: SAE_SAEMASKCR  ------------------------------
// SVD Line: 24288

unsigned int SAE_SAEMASKCR __AT (0x40032024);



// ------------------------------  Field Item: SAE_SAEMASKCR_CEN  ---------------------------------
// SVD Line: 24297

//  <item> SFDITEM_FIELD__SAE_SAEMASKCR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032024) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEMASKCR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SAE_SAEMASKCR  ---------------------------------
// SVD Line: 24288

//  <rtree> SFDITEM_REG__SAE_SAEMASKCR
//    <name> SAEMASKCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032024) mask control register </i>
//    <loc> ( (unsigned int)((SAE_SAEMASKCR >> 0) & 0xFFFFFFFF), ((SAE_SAEMASKCR = (SAE_SAEMASKCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEMASKCR_CEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SAE_SAEMASKDAT0  -----------------------------
// SVD Line: 24306

unsigned int SAE_SAEMASKDAT0 __AT (0x40032028);



// -----------------------------  Field Item: SAE_SAEMASKDAT0_CEN  --------------------------------
// SVD Line: 24315

//  <item> SFDITEM_FIELD__SAE_SAEMASKDAT0_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032028) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEMASKDAT0 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SAE_SAEMASKDAT0  --------------------------------
// SVD Line: 24306

//  <rtree> SFDITEM_REG__SAE_SAEMASKDAT0
//    <name> SAEMASKDAT0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032028) mask data register 0 </i>
//    <loc> ( (unsigned int)((SAE_SAEMASKDAT0 >> 0) & 0xFFFFFFFF), ((SAE_SAEMASKDAT0 = (SAE_SAEMASKDAT0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEMASKDAT0_CEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SAE_SAEMASKDAT1  -----------------------------
// SVD Line: 24324

unsigned int SAE_SAEMASKDAT1 __AT (0x4003202C);



// -----------------------------  Field Item: SAE_SAEMASKDAT1_CEN  --------------------------------
// SVD Line: 24333

//  <item> SFDITEM_FIELD__SAE_SAEMASKDAT1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4003202C) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEMASKDAT1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SAE_SAEMASKDAT1  --------------------------------
// SVD Line: 24324

//  <rtree> SFDITEM_REG__SAE_SAEMASKDAT1
//    <name> SAEMASKDAT1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4003202C) mask data register 1 </i>
//    <loc> ( (unsigned int)((SAE_SAEMASKDAT1 >> 0) & 0xFFFFFFFF), ((SAE_SAEMASKDAT1 = (SAE_SAEMASKDAT1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEMASKDAT1_CEN </item>
//  </rtree>
//  


// -------------------------  Register Item Address: SAE_SAEMASKDAT2  -----------------------------
// SVD Line: 24342

unsigned int SAE_SAEMASKDAT2 __AT (0x40032030);



// -----------------------------  Field Item: SAE_SAEMASKDAT2_CEN  --------------------------------
// SVD Line: 24351

//  <item> SFDITEM_FIELD__SAE_SAEMASKDAT2_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032030) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEMASKDAT2 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: SAE_SAEMASKDAT2  --------------------------------
// SVD Line: 24342

//  <rtree> SFDITEM_REG__SAE_SAEMASKDAT2
//    <name> SAEMASKDAT2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032030) mask data register 2 </i>
//    <loc> ( (unsigned int)((SAE_SAEMASKDAT2 >> 0) & 0xFFFFFFFF), ((SAE_SAEMASKDAT2 = (SAE_SAEMASKDAT2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEMASKDAT2_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SAE_SAEBUFCR  ------------------------------
// SVD Line: 24360

unsigned int SAE_SAEBUFCR __AT (0x40032034);



// ------------------------------  Field Item: SAE_SAEBUFCR_CEN  ----------------------------------
// SVD Line: 24369

//  <item> SFDITEM_FIELD__SAE_SAEBUFCR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40032034) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) SAE_SAEBUFCR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: SAE_SAEBUFCR  ----------------------------------
// SVD Line: 24360

//  <rtree> SFDITEM_REG__SAE_SAEBUFCR
//    <name> SAEBUFCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40032034) buffer control register </i>
//    <loc> ( (unsigned int)((SAE_SAEBUFCR >> 0) & 0xFFFFFFFF), ((SAE_SAEBUFCR = (SAE_SAEBUFCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SAE_SAEBUFCR_CEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SAE  --------------------------------------
// SVD Line: 24112

//  <view> SAE
//    <name> SAE </name>
//    <item> SFDITEM_REG__SAE_SAECR </item>
//    <item> SFDITEM_REG__SAE_SAEHCR </item>
//    <item> SFDITEM_REG__SAE_SAESR </item>
//    <item> SFDITEM_REG__SAE_SAEGPR0 </item>
//    <item> SFDITEM_REG__SAE_SAEGPR1 </item>
//    <item> SFDITEM_REG__SAE_SAEGPR2 </item>
//    <item> SFDITEM_REG__SAE_SAEGPR3 </item>
//    <item> SFDITEM_REG__SAE_SAEGPR4 </item>
//    <item> SFDITEM_REG__SAE_SAEGPR5 </item>
//    <item> SFDITEM_REG__SAE_SAEMASKCR </item>
//    <item> SFDITEM_REG__SAE_SAEMASKDAT0 </item>
//    <item> SFDITEM_REG__SAE_SAEMASKDAT1 </item>
//    <item> SFDITEM_REG__SAE_SAEMASKDAT2 </item>
//    <item> SFDITEM_REG__SAE_SAEBUFCR </item>
//  </view>
//  


// ---------------------------  Register Item Address: BSTIMER1_CR1  ------------------------------
// SVD Line: 24394

unsigned int BSTIMER1_CR1 __AT (0x4001C000);



// ------------------------------  Field Item: BSTIMER1_CR1_CEN  ----------------------------------
// SVD Line: 24403

//  <item> SFDITEM_FIELD__BSTIMER1_CR1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_CR1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER1_CR1_UDIS  ---------------------------------
// SVD Line: 24410

//  <item> SFDITEM_FIELD__BSTIMER1_CR1_UDIS
//    <name> UDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001C000) Update disable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_CR1 ) </loc>
//      <o.1..1> UDIS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER1_CR1_URS  ----------------------------------
// SVD Line: 24417

//  <item> SFDITEM_FIELD__BSTIMER1_CR1_URS
//    <name> URS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001C000) Update Request Source </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_CR1 ) </loc>
//      <o.2..2> URS
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER1_CR1_OPM  ----------------------------------
// SVD Line: 24424

//  <item> SFDITEM_FIELD__BSTIMER1_CR1_OPM
//    <name> OPM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001C000) One Pulse Mode </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_CR1 ) </loc>
//      <o.3..3> OPM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER1_CR1_APRE  ---------------------------------
// SVD Line: 24431

//  <item> SFDITEM_FIELD__BSTIMER1_CR1_APRE
//    <name> APRE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C000) shadow register reload enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_CR1 ) </loc>
//      <o.7..7> APRE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_CR1  ----------------------------------
// SVD Line: 24394

//  <rtree> SFDITEM_REG__BSTIMER1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C000) control register 1 </i>
//    <loc> ( (unsigned int)((BSTIMER1_CR1 >> 0) & 0xFFFFFFFF), ((BSTIMER1_CR1 = (BSTIMER1_CR1 & ~(0x8FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x8F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_CR1_CEN </item>
//    <item> SFDITEM_FIELD__BSTIMER1_CR1_UDIS </item>
//    <item> SFDITEM_FIELD__BSTIMER1_CR1_URS </item>
//    <item> SFDITEM_FIELD__BSTIMER1_CR1_OPM </item>
//    <item> SFDITEM_FIELD__BSTIMER1_CR1_APRE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER1_CR2  ------------------------------
// SVD Line: 24440

unsigned int BSTIMER1_CR2 __AT (0x4001C004);



// ------------------------------  Field Item: BSTIMER1_CR2_MMS  ----------------------------------
// SVD Line: 24449

//  <item> SFDITEM_FIELD__BSTIMER1_CR2_MMS
//    <name> MMS </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x4001C004) Master mode selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((BSTIMER1_CR2 >> 4) & 0x7), ((BSTIMER1_CR2 = (BSTIMER1_CR2 & ~(0x7UL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_CR2  ----------------------------------
// SVD Line: 24440

//  <rtree> SFDITEM_REG__BSTIMER1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C004) control register 2 </i>
//    <loc> ( (unsigned int)((BSTIMER1_CR2 >> 0) & 0xFFFFFFFF), ((BSTIMER1_CR2 = (BSTIMER1_CR2 & ~(0x70UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x70) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_CR2_MMS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: BSTIMER1_DIER  ------------------------------
// SVD Line: 24458

unsigned int BSTIMER1_DIER __AT (0x4001C00C);



// ------------------------------  Field Item: BSTIMER1_DIER_UIE  ---------------------------------
// SVD Line: 24467

//  <item> SFDITEM_FIELD__BSTIMER1_DIER_UIE
//    <name> UIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C00C) Update event interrupt request enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_DIER ) </loc>
//      <o.0..0> UIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: BSTIMER1_DIER_UDE  ---------------------------------
// SVD Line: 24474

//  <item> SFDITEM_FIELD__BSTIMER1_DIER_UDE
//    <name> UDE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001C00C) Update event DMA request enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_DIER ) </loc>
//      <o.8..8> UDE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_DIER  ---------------------------------
// SVD Line: 24458

//  <rtree> SFDITEM_REG__BSTIMER1_DIER
//    <name> DIER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C00C) DMA/interrupt enable register </i>
//    <loc> ( (unsigned int)((BSTIMER1_DIER >> 0) & 0xFFFFFFFF), ((BSTIMER1_DIER = (BSTIMER1_DIER & ~(0x101UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x101) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_DIER_UIE </item>
//    <item> SFDITEM_FIELD__BSTIMER1_DIER_UDE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER1_SR  -------------------------------
// SVD Line: 24483

unsigned int BSTIMER1_SR __AT (0x4001C010);



// -------------------------------  Field Item: BSTIMER1_SR_UIF  ----------------------------------
// SVD Line: 24492

//  <item> SFDITEM_FIELD__BSTIMER1_SR_UIF
//    <name> UIF </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001C010) Update interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_SR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: BSTIMER1_SR  ----------------------------------
// SVD Line: 24483

//  <rtree> SFDITEM_REG__BSTIMER1_SR
//    <name> SR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4001C010) status register </i>
//    <loc> ( (unsigned int)((BSTIMER1_SR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_SR_UIF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER1_EGR  ------------------------------
// SVD Line: 24501

unsigned int BSTIMER1_EGR __AT (0x4001C014);



// ------------------------------  Field Item: BSTIMER1_EGR_UIF  ----------------------------------
// SVD Line: 24510

//  <item> SFDITEM_FIELD__BSTIMER1_EGR_UIF
//    <name> UIF </name>
//    <w> 
//    <i> [Bit 0] WO (@ 0x4001C014) update event enable </i>
//    <check> 
//      <loc> ( (unsigned int) BSTIMER1_EGR ) </loc>
//      <o.0..0> UIF
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_EGR  ----------------------------------
// SVD Line: 24501

//  <rtree> SFDITEM_REG__BSTIMER1_EGR
//    <name> EGR </name>
//    <w> 
//    <i> [Bits 31..0] WO (@ 0x4001C014) event generation register </i>
//    <loc> ( (unsigned int)((BSTIMER1_EGR >> 0) & 0xFFFFFFFF), ((BSTIMER1_EGR = (BSTIMER1_EGR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_EGR_UIF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER1_CNT  ------------------------------
// SVD Line: 24519

unsigned int BSTIMER1_CNT __AT (0x4001C024);



// ------------------------------  Field Item: BSTIMER1_CNT_CNT  ----------------------------------
// SVD Line: 24528

//  <item> SFDITEM_FIELD__BSTIMER1_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001C024) counter register </i>
//    <edit> 
//      <loc> ( (unsigned short)((BSTIMER1_CNT >> 0) & 0xFFFF), ((BSTIMER1_CNT = (BSTIMER1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_CNT  ----------------------------------
// SVD Line: 24519

//  <rtree> SFDITEM_REG__BSTIMER1_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C024) TIMER event generation register </i>
//    <loc> ( (unsigned int)((BSTIMER1_CNT >> 0) & 0xFFFFFFFF), ((BSTIMER1_CNT = (BSTIMER1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_CNT_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER1_PSC  ------------------------------
// SVD Line: 24537

unsigned int BSTIMER1_PSC __AT (0x4001C028);



// ------------------------------  Field Item: BSTIMER1_PSC_PSC  ----------------------------------
// SVD Line: 24546

//  <item> SFDITEM_FIELD__BSTIMER1_PSC_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001C028) prescaler value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BSTIMER1_PSC >> 0) & 0xFFFF), ((BSTIMER1_PSC = (BSTIMER1_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_PSC  ----------------------------------
// SVD Line: 24537

//  <rtree> SFDITEM_REG__BSTIMER1_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C028) prescaler register </i>
//    <loc> ( (unsigned int)((BSTIMER1_PSC >> 0) & 0xFFFFFFFF), ((BSTIMER1_PSC = (BSTIMER1_PSC & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_PSC_PSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: BSTIMER1_ARR  ------------------------------
// SVD Line: 24555

unsigned int BSTIMER1_ARR __AT (0x4001C02C);



// ------------------------------  Field Item: BSTIMER1_ARR_ARR  ----------------------------------
// SVD Line: 24564

//  <item> SFDITEM_FIELD__BSTIMER1_ARR_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001C02C) Counter reload value </i>
//    <edit> 
//      <loc> ( (unsigned short)((BSTIMER1_ARR >> 0) & 0xFFFF), ((BSTIMER1_ARR = (BSTIMER1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: BSTIMER1_ARR  ----------------------------------
// SVD Line: 24555

//  <rtree> SFDITEM_REG__BSTIMER1_ARR
//    <name> ARR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C02C) auto-reload register </i>
//    <loc> ( (unsigned int)((BSTIMER1_ARR >> 0) & 0xFFFFFFFF), ((BSTIMER1_ARR = (BSTIMER1_ARR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__BSTIMER1_ARR_ARR </item>
//  </rtree>
//  


// --------------------------------  Peripheral View: BSTIMER1  -----------------------------------
// SVD Line: 24380

//  <view> BSTIMER1
//    <name> BSTIMER1 </name>
//    <item> SFDITEM_REG__BSTIMER1_CR1 </item>
//    <item> SFDITEM_REG__BSTIMER1_CR2 </item>
//    <item> SFDITEM_REG__BSTIMER1_DIER </item>
//    <item> SFDITEM_REG__BSTIMER1_SR </item>
//    <item> SFDITEM_REG__BSTIMER1_EGR </item>
//    <item> SFDITEM_REG__BSTIMER1_CNT </item>
//    <item> SFDITEM_REG__BSTIMER1_PSC </item>
//    <item> SFDITEM_REG__BSTIMER1_ARR </item>
//  </view>
//  


// ----------------------------  Register Item Address: RNG_RNGDET  -------------------------------
// SVD Line: 24589

unsigned int RNG_RNGDET __AT (0x40033000);



// -------------------------------  Field Item: RNG_RNGDET_CEN  -----------------------------------
// SVD Line: 24598

//  <item> SFDITEM_FIELD__RNG_RNGDET_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033000) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGDET ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RNG_RNGDET  -----------------------------------
// SVD Line: 24589

//  <rtree> SFDITEM_REG__RNG_RNGDET
//    <name> RNGDET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033000) control register </i>
//    <loc> ( (unsigned int)((RNG_RNGDET >> 0) & 0xFFFFFFFF), ((RNG_RNGDET = (RNG_RNGDET & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGDET_CEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RNG_RNGSR  --------------------------------
// SVD Line: 24607

unsigned int RNG_RNGSR __AT (0x40033004);



// --------------------------------  Field Item: RNG_RNGSR_CEN  -----------------------------------
// SVD Line: 24616

//  <item> SFDITEM_FIELD__RNG_RNGSR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033004) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGSR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RNG_RNGSR  -----------------------------------
// SVD Line: 24607

//  <rtree> SFDITEM_REG__RNG_RNGSR
//    <name> RNGSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033004) status register </i>
//    <loc> ( (unsigned int)((RNG_RNGSR >> 0) & 0xFFFFFFFF), ((RNG_RNGSR = (RNG_RNGSR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGSR_CEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RNG_RNGCLK  -------------------------------
// SVD Line: 24625

unsigned int RNG_RNGCLK __AT (0x40033008);



// -------------------------------  Field Item: RNG_RNGCLK_CEN  -----------------------------------
// SVD Line: 24634

//  <item> SFDITEM_FIELD__RNG_RNGCLK_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033008) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGCLK ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RNG_RNGCLK  -----------------------------------
// SVD Line: 24625

//  <rtree> SFDITEM_REG__RNG_RNGCLK
//    <name> RNGCLK </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033008) clock register </i>
//    <loc> ( (unsigned int)((RNG_RNGCLK >> 0) & 0xFFFFFFFF), ((RNG_RNGCLK = (RNG_RNGCLK & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGCLK_CEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RNG_RNGCR  --------------------------------
// SVD Line: 24643

unsigned int RNG_RNGCR __AT (0x4003300C);



// --------------------------------  Field Item: RNG_RNGCR_CEN  -----------------------------------
// SVD Line: 24652

//  <item> SFDITEM_FIELD__RNG_RNGCR_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4003300C) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGCR ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: RNG_RNGCR  -----------------------------------
// SVD Line: 24643

//  <rtree> SFDITEM_REG__RNG_RNGCR
//    <name> RNGCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4003300C) control register </i>
//    <loc> ( (unsigned int)((RNG_RNGCR >> 0) & 0xFFFFFFFF), ((RNG_RNGCR = (RNG_RNGCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGCR_CEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RNG_RNGRESEED  ------------------------------
// SVD Line: 24661

unsigned int RNG_RNGRESEED __AT (0x40033010);



// ------------------------------  Field Item: RNG_RNGRESEED_CEN  ---------------------------------
// SVD Line: 24670

//  <item> SFDITEM_FIELD__RNG_RNGRESEED_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033010) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGRESEED ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RNG_RNGRESEED  ---------------------------------
// SVD Line: 24661

//  <rtree> SFDITEM_REG__RNG_RNGRESEED
//    <name> RNGRESEED </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033010) reseed register </i>
//    <loc> ( (unsigned int)((RNG_RNGRESEED >> 0) & 0xFFFFFFFF), ((RNG_RNGRESEED = (RNG_RNGRESEED & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGRESEED_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RNG_RNGDATA  -------------------------------
// SVD Line: 24679

unsigned int RNG_RNGDATA __AT (0x40033014);



// -------------------------------  Field Item: RNG_RNGDATA_CEN  ----------------------------------
// SVD Line: 24688

//  <item> SFDITEM_FIELD__RNG_RNGDATA_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033014) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGDATA ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: RNG_RNGDATA  ----------------------------------
// SVD Line: 24679

//  <rtree> SFDITEM_REG__RNG_RNGDATA
//    <name> RNGDATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033014) data register </i>
//    <loc> ( (unsigned int)((RNG_RNGDATA >> 0) & 0xFFFFFFFF), ((RNG_RNGDATA = (RNG_RNGDATA & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGDATA_CEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: RNG_RNGPKNUM  ------------------------------
// SVD Line: 24697

unsigned int RNG_RNGPKNUM __AT (0x40033018);



// ------------------------------  Field Item: RNG_RNGPKNUM_CEN  ----------------------------------
// SVD Line: 24706

//  <item> SFDITEM_FIELD__RNG_RNGPKNUM_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033018) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGPKNUM ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RNG_RNGPKNUM  ----------------------------------
// SVD Line: 24697

//  <rtree> SFDITEM_REG__RNG_RNGPKNUM
//    <name> RNGPKNUM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033018) RNGPKNUM </i>
//    <loc> ( (unsigned int)((RNG_RNGPKNUM >> 0) & 0xFFFFFFFF), ((RNG_RNGPKNUM = (RNG_RNGPKNUM & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGPKNUM_CEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RNG_RNGPKRES0  ------------------------------
// SVD Line: 24715

unsigned int RNG_RNGPKRES0 __AT (0x4003301C);



// ------------------------------  Field Item: RNG_RNGPKRES0_CEN  ---------------------------------
// SVD Line: 24724

//  <item> SFDITEM_FIELD__RNG_RNGPKRES0_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4003301C) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGPKRES0 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RNG_RNGPKRES0  ---------------------------------
// SVD Line: 24715

//  <rtree> SFDITEM_REG__RNG_RNGPKRES0
//    <name> RNGPKRES0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4003301C) RNGPKRES0 </i>
//    <loc> ( (unsigned int)((RNG_RNGPKRES0 >> 0) & 0xFFFFFFFF), ((RNG_RNGPKRES0 = (RNG_RNGPKRES0 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGPKRES0_CEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RNG_RNGPKRES1  ------------------------------
// SVD Line: 24733

unsigned int RNG_RNGPKRES1 __AT (0x40033020);



// ------------------------------  Field Item: RNG_RNGPKRES1_CEN  ---------------------------------
// SVD Line: 24742

//  <item> SFDITEM_FIELD__RNG_RNGPKRES1_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033020) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGPKRES1 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RNG_RNGPKRES1  ---------------------------------
// SVD Line: 24733

//  <rtree> SFDITEM_REG__RNG_RNGPKRES1
//    <name> RNGPKRES1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033020) RNGPKRES1 </i>
//    <loc> ( (unsigned int)((RNG_RNGPKRES1 >> 0) & 0xFFFFFFFF), ((RNG_RNGPKRES1 = (RNG_RNGPKRES1 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGPKRES1_CEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: RNG_RNGPKRES2  ------------------------------
// SVD Line: 24751

unsigned int RNG_RNGPKRES2 __AT (0x40033024);



// ------------------------------  Field Item: RNG_RNGPKRES2_CEN  ---------------------------------
// SVD Line: 24760

//  <item> SFDITEM_FIELD__RNG_RNGPKRES2_CEN
//    <name> CEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40033024) Counter enable </i>
//    <check> 
//      <loc> ( (unsigned int) RNG_RNGPKRES2 ) </loc>
//      <o.0..0> CEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: RNG_RNGPKRES2  ---------------------------------
// SVD Line: 24751

//  <rtree> SFDITEM_REG__RNG_RNGPKRES2
//    <name> RNGPKRES2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40033024) RNGPKRES2 </i>
//    <loc> ( (unsigned int)((RNG_RNGPKRES2 >> 0) & 0xFFFFFFFF), ((RNG_RNGPKRES2 = (RNG_RNGPKRES2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RNG_RNGPKRES2_CEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RNG  --------------------------------------
// SVD Line: 24575

//  <view> RNG
//    <name> RNG </name>
//    <item> SFDITEM_REG__RNG_RNGDET </item>
//    <item> SFDITEM_REG__RNG_RNGSR </item>
//    <item> SFDITEM_REG__RNG_RNGCLK </item>
//    <item> SFDITEM_REG__RNG_RNGCR </item>
//    <item> SFDITEM_REG__RNG_RNGRESEED </item>
//    <item> SFDITEM_REG__RNG_RNGDATA </item>
//    <item> SFDITEM_REG__RNG_RNGPKNUM </item>
//    <item> SFDITEM_REG__RNG_RNGPKRES0 </item>
//    <item> SFDITEM_REG__RNG_RNGPKRES1 </item>
//    <item> SFDITEM_REG__RNG_RNGPKRES2 </item>
//  </view>
//  


// -------------------------------   IRQ Num definition: TREMO  -----------------------------------
// SVD Line: 2



// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M4 Specific Interrupt Numbers  ----------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> MemoryManagement_IRQ
//    <name> MemoryManagement </name>
//    <i> Memory Management, MPU mismatch, including Access Violation and No Match </i>
//    <loc> 4 </loc>
//  </qitem>
//  
//  <qitem> BusFault_IRQ
//    <name> BusFault </name>
//    <i> Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault </i>
//    <loc> 5 </loc>
//  </qitem>
//  
//  <qitem> UsageFault_IRQ
//    <name> UsageFault </name>
//    <i> Usage Fault, i.e. Undef Instruction, Illegal State Transition </i>
//    <loc> 6 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> DebugMonitor_IRQ
//    <name> DebugMonitor </name>
//    <i> Debug Monitor </i>
//    <loc> 12 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// ----------------------------  TREMO Specific Interrupt Numbers  --------------------------------

//  <qitem> SEC_IRQ
//    <name> SEC </name>
//    <i> SEC </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> RTC_IRQ
//    <name> RTC </name>
//    <i> RTC </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> WDG_IRQ
//    <name> WDG </name>
//    <i> WDG </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> EFC_IRQ
//    <name> EFC </name>
//    <i> EFC </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> UART3_IRQ
//    <name> UART3 </name>
//    <i> UART3 </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> UART0_IRQ
//    <name> UART0 </name>
//    <i> UART0 </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> UART1_IRQ
//    <name> UART1 </name>
//    <i> UART1 </i>
//    <loc> 23 </loc>
//  </qitem>
//  
//  <qitem> UART2_IRQ
//    <name> UART2 </name>
//    <i> UART2 </i>
//    <loc> 24 </loc>
//  </qitem>
//  
//  <qitem> LPUART_IRQ
//    <name> LPUART </name>
//    <i> LPUART </i>
//    <loc> 25 </loc>
//  </qitem>
//  
//  <qitem> SSP0_IRQ
//    <name> SSP0 </name>
//    <i> SSP0 </i>
//    <loc> 26 </loc>
//  </qitem>
//  
//  <qitem> SSP1_IRQ
//    <name> SSP1 </name>
//    <i> SSP1 </i>
//    <loc> 27 </loc>
//  </qitem>
//  
//  <qitem> QSPI_IRQ
//    <name> QSPI </name>
//    <i> QSPI </i>
//    <loc> 28 </loc>
//  </qitem>
//  
//  <qitem> I2C0_IRQ
//    <name> I2C0 </name>
//    <i> I2C0 </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> I2C1_IRQ
//    <name> I2C1 </name>
//    <i> I2C1 </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> ADC_IRQ
//    <name> ADC </name>
//    <i> ADC </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> AFEC_IRQ
//    <name> AFEC </name>
//    <i> AFEC </i>
//    <loc> 33 </loc>
//  </qitem>
//  
//  <qitem> SSP2_IRQ
//    <name> SSP2 </name>
//    <i> SSP2 </i>
//    <loc> 34 </loc>
//  </qitem>
//  
//  <qitem> DMA1_IRQ
//    <name> DMA1 </name>
//    <i> DMA1 </i>
//    <loc> 35 </loc>
//  </qitem>
//  
//  <qitem> DAC_IRQ
//    <name> DAC </name>
//    <i> DAC </i>
//    <loc> 36 </loc>
//  </qitem>
//  
//  <qitem> LORA_IRQ
//    <name> LORA </name>
//    <i> LORA </i>
//    <loc> 37 </loc>
//  </qitem>
//  
//  <qitem> GPIO_IRQ
//    <name> GPIO </name>
//    <i> GPIO </i>
//    <loc> 38 </loc>
//  </qitem>
//  
//  <qitem> TIMER0_IRQ
//    <name> TIMER0 </name>
//    <i> TIMER0 </i>
//    <loc> 39 </loc>
//  </qitem>
//  
//  <qitem> TIMER1_IRQ
//    <name> TIMER1 </name>
//    <i> TIMER1 </i>
//    <loc> 40 </loc>
//  </qitem>
//  
//  <qitem> TIMER2_IRQ
//    <name> TIMER2 </name>
//    <i> TIMER2 </i>
//    <loc> 41 </loc>
//  </qitem>
//  
//  <qitem> TIMER3_IRQ
//    <name> TIMER3 </name>
//    <i> TIMER3 </i>
//    <loc> 42 </loc>
//  </qitem>
//  
//  <qitem> BSTIMER0_IRQ
//    <name> BSTIMER0 </name>
//    <i> BSTIMER0 </i>
//    <loc> 43 </loc>
//  </qitem>
//  
//  <qitem> BSTIMER1_IRQ
//    <name> BSTIMER1 </name>
//    <i> BSTIMER1 </i>
//    <loc> 44 </loc>
//  </qitem>
//  
//  <qitem> LPTIMER0_IRQ
//    <name> LPTIMER0 </name>
//    <i> LPTIMER0 </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> DMA0_IRQ
//    <name> DMA0 </name>
//    <i> DMA0 </i>
//    <loc> 47 </loc>
//  </qitem>
//  
//  <qitem> I2S_IRQ
//    <name> I2S </name>
//    <i> I2S </i>
//    <loc> 48 </loc>
//  </qitem>
//  
//  <qitem> LCD_IRQ
//    <name> LCD </name>
//    <i> LCD </i>
//    <loc> 49 </loc>
//  </qitem>
//  
//  <qitem> PWR_IRQ
//    <name> PWR </name>
//    <i> PWR </i>
//    <loc> 50 </loc>
//  </qitem>
//  
//  <qitem> LPTIMER1_IRQ
//    <name> LPTIMER1 </name>
//    <i> LPTIMER1 </i>
//    <loc> 51 </loc>
//  </qitem>
//  
//  <qitem> IWDG_IRQ
//    <name> IWDG </name>
//    <i> IWDG </i>
//    <loc> 52 </loc>
//  </qitem>
//  
//  <irqtable> TREMO_IRQTable
//    <name> TREMO Interrupt Table </name>
//    <nvicPrioBits> 3 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> MemoryManagement_IRQ </qitem>
//    <qitem> BusFault_IRQ </qitem>
//    <qitem> UsageFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> DebugMonitor_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> SEC_IRQ </qitem>
//    <qitem> RTC_IRQ </qitem>
//    <qitem> WDG_IRQ </qitem>
//    <qitem> EFC_IRQ </qitem>
//    <qitem> UART3_IRQ </qitem>
//    <qitem> UART0_IRQ </qitem>
//    <qitem> UART1_IRQ </qitem>
//    <qitem> UART2_IRQ </qitem>
//    <qitem> LPUART_IRQ </qitem>
//    <qitem> SSP0_IRQ </qitem>
//    <qitem> SSP1_IRQ </qitem>
//    <qitem> QSPI_IRQ </qitem>
//    <qitem> I2C0_IRQ </qitem>
//    <qitem> I2C1_IRQ </qitem>
//    <qitem> ADC_IRQ </qitem>
//    <qitem> AFEC_IRQ </qitem>
//    <qitem> SSP2_IRQ </qitem>
//    <qitem> DMA1_IRQ </qitem>
//    <qitem> DAC_IRQ </qitem>
//    <qitem> LORA_IRQ </qitem>
//    <qitem> GPIO_IRQ </qitem>
//    <qitem> TIMER0_IRQ </qitem>
//    <qitem> TIMER1_IRQ </qitem>
//    <qitem> TIMER2_IRQ </qitem>
//    <qitem> TIMER3_IRQ </qitem>
//    <qitem> BSTIMER0_IRQ </qitem>
//    <qitem> BSTIMER1_IRQ </qitem>
//    <qitem> LPTIMER0_IRQ </qitem>
//    <qitem> DMA0_IRQ </qitem>
//    <qitem> I2S_IRQ </qitem>
//    <qitem> LCD_IRQ </qitem>
//    <qitem> PWR_IRQ </qitem>
//    <qitem> LPTIMER1_IRQ </qitem>
//    <qitem> IWDG_IRQ </qitem>
//  </irqtable>


// --------------------------------------   Menu: TREMO  ------------------------------------------
// SVD Line: 2



// --------------------------------  Peripheral Menu: 'TREMO'  ------------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ADC
//    <m> ADC </m>
//  </b>
//  
//  <b> AFEC
//    <m> AFEC </m>
//  </b>
//  
//  <b> BSTIMER
//    <m> BSTIMER0 </m>
//    <m> BSTIMER1 </m>
//  </b>
//  
//  <b> CRC
//    <m> CRC </m>
//  </b>
//  
//  <b> DAC
//    <m> DAC </m>
//  </b>
//  
//  <b> DMAC
//    <m> DMAC0 </m>
//    <m> DMAC1 </m>
//  </b>
//  
//  <b> EFC
//    <m> EFC </m>
//  </b>
//  
//  <b> GPIO
//    <m> GPIOA </m>
//    <m> GPIOB </m>
//    <m> GPIOC </m>
//    <m> GPIOD </m>
//  </b>
//  
//  <b> I
//    <m> I2C0 </m>
//    <m> I2C1 </m>
//    <m> I2S </m>
//  </b>
//  
//  <b> IWDG
//    <m> IWDG </m>
//  </b>
//  
//  <b> LCD
//    <m> LCD </m>
//  </b>
//  
//  <b> LORAC
//    <m> LORAC </m>
//  </b>
//  
//  <b> LPTIMER
//    <m> LPTIMER0 </m>
//    <m> LPTIMER1 </m>
//  </b>
//  
//  <b> LPUART
//    <m> LPUART </m>
//  </b>
//  
//  <b> PWR
//    <m> PWR </m>
//  </b>
//  
//  <b> QSPI
//    <m> QSPI </m>
//  </b>
//  
//  <b> RCC
//    <m> RCC </m>
//  </b>
//  
//  <b> RNG
//    <m> RNG </m>
//  </b>
//  
//  <b> RTC
//    <m> RTC </m>
//  </b>
//  
//  <b> SAE
//    <m> SAE </m>
//  </b>
//  
//  <b> SEC
//    <m> SEC </m>
//  </b>
//  
//  <b> SSP
//    <m> SSP0 </m>
//    <m> SSP1 </m>
//    <m> SSP2 </m>
//  </b>
//  
//  <b> SYSCFG
//    <m> SYSCFG </m>
//  </b>
//  
//  <b> TIMER
//    <m> TIMER0 </m>
//    <m> TIMER1 </m>
//    <m> TIMER2 </m>
//    <m> TIMER3 </m>
//  </b>
//  
//  <b> UART
//    <m> UART0 </m>
//    <m> UART1 </m>
//    <m> UART2 </m>
//    <m> UART3 </m>
//  </b>
//  
//  <b> WDG
//    <m> WDG </m>
//  </b>
//  
